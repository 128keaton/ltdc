                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.8.0 #5117 (Mar 23 2008) (MINGW32)
                              4 ; This file was generated Tue Jan 11 00:27:20 2011
                              5 ;--------------------------------------------------------
                              6 	.module test
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _g_Screen
                             14 	.globl _g_World
                             15 	.globl _g_Local
                             16 	.globl _g_AngleIndex
                             17 	.globl _g_Angle
                             18 	.globl _g_Position
                             19 	.globl _g_Camera
                             20 	.globl _CMD
                             21 	.globl _ARG
                             22 	.globl _CLR
                             23 	.globl _NY
                             24 	.globl _NX
                             25 	.globl _DY
                             26 	.globl _DX
                             27 	.globl _SY
                             28 	.globl _SX
                             29 	.globl _MainLoop
                             30 	.globl _SetShortVec
                             31 	.globl _TransXZ
                             32 	.globl _TransXZIndex
                             33 	.globl _Project
                             34 	.globl _Update
                             35 	.globl _SetScreen8
                             36 	.globl _SetPage8
                             37 	.globl _DrawPoint8
                             38 	.globl _DrawLine
                             39 	.globl _DrawLineSimple
                             40 	.globl _DrawLine8
                             41 	.globl _VPDCommand
                             42 	.globl _waitRetrace
                             43 	.globl _WaitForVDP
                             44 	.globl _Joystick
                             45 	.globl _Joytrig
                             46 	.globl _GetKeyMatrixLine
                             47 	.globl _WriteToVRAM
                             48 ;--------------------------------------------------------
                             49 ; special function registers
                             50 ;--------------------------------------------------------
                    00A8     51 _g_slotPort	=	0x00a8
                             52 ;--------------------------------------------------------
                             53 ;  ram data
                             54 ;--------------------------------------------------------
                             55 	.area _DATA
   0000                      56 _SX::
   0000                      57 	.ds 2
   0002                      58 _SY::
   0002                      59 	.ds 2
   0004                      60 _DX::
   0004                      61 	.ds 2
   0006                      62 _DY::
   0006                      63 	.ds 2
   0008                      64 _NX::
   0008                      65 	.ds 2
   000A                      66 _NY::
   000A                      67 	.ds 2
   000C                      68 _CLR::
   000C                      69 	.ds 1
   000D                      70 _ARG::
   000D                      71 	.ds 1
   000E                      72 _CMD::
   000E                      73 	.ds 1
   000F                      74 _g_Camera::
   000F                      75 	.ds 6
   0015                      76 _g_Position::
   0015                      77 	.ds 6
   001B                      78 _g_Angle::
   001B                      79 	.ds 1
   001C                      80 _g_AngleIndex::
   001C                      81 	.ds 1
   001D                      82 _g_Local::
   001D                      83 	.ds 48
   004D                      84 _g_World::
   004D                      85 	.ds 48
   007D                      86 _g_Screen::
   007D                      87 	.ds 48
                             88 ;--------------------------------------------------------
                             89 ; overlayable items in  ram 
                             90 ;--------------------------------------------------------
                             91 	.area _OVERLAY
                             92 ;--------------------------------------------------------
                             93 ; external initialized ram data
                             94 ;--------------------------------------------------------
                             95 ;--------------------------------------------------------
                             96 ; global & static initialisations
                             97 ;--------------------------------------------------------
                             98 	.area _HOME
                             99 	.area _GSINIT
                            100 	.area _GSFINAL
                            101 	.area _GSINIT
                            102 ;--------------------------------------------------------
                            103 ; Home
                            104 ;--------------------------------------------------------
                            105 	.area _HOME
                            106 	.area _HOME
                            107 ;--------------------------------------------------------
                            108 ; code
                            109 ;--------------------------------------------------------
                            110 	.area _CODE
                            111 ;test.c:145: void main(void)
                            112 ;	genLabel
                            113 ;	genFunction
                            114 ;	---------------------------------
                            115 ; Function main
                            116 ; ---------------------------------
   0000                     117 _main_start::
   0000                     118 _main:
                            119 ;test.c:151: _endasm;
                            120 ;	genInline
                            121 	
   0000 F3                  122 		 di
   0001 ED 7B 4A FC         123 		 ld sp, (#0xFC4A)
   0005 FB                  124 		 ei
                            125 		
                            126 ;test.c:153: g_slotPort = (g_slotPort & 0xCF) | ((g_slotPort & 0x0C) << 2);
                            127 ;	genAnd
                            128 ;Z80 AOP_SFR for _g_slotPort banked:0 bc:1 de:0
   0006 DB A8               129 	in	a,(_g_slotPort)
   0008 E6 CF               130 	and	a,#0xCF
   000A 4F                  131 	ld	c,a
                            132 ;	genAnd
                            133 ;Z80 AOP_SFR for _g_slotPort banked:0 bc:1 de:0
   000B DB A8               134 	in	a,(_g_slotPort)
   000D E6 0C               135 	and	a,#0x0C
   000F 47                  136 	ld	b,a
                            137 ;	genLeftShift
   0010 CB 20               138 	sla	b
   0012 CB 20               139 	sla	b
                            140 ;	genOr
                            141 ;Z80 AOP_SFR for _g_slotPort banked:0 bc:1 de:0
   0014 79                  142 	ld	a,c
   0015 B0                  143 	or	a,b
   0016 D3 A8               144 	out	(_g_slotPort),a
                            145 ;test.c:155: MainLoop();
                            146 ;	genCall
                            147 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            148 ;	genLabel
                            149 ;	genEndFunction
   0018 C3r1Bs00            150 	jp	_MainLoop
   001B                     151 _main_end::
                            152 ;test.c:164: void MainLoop()
                            153 ;	genLabel
                            154 ;	genFunction
                            155 ;	---------------------------------
                            156 ; Function MainLoop
                            157 ; ---------------------------------
   001B                     158 _MainLoop_start::
   001B                     159 _MainLoop:
   001B DD E5               160 	push	ix
   001D DD 21 00 00         161 	ld	ix,#0
   0021 DD 39               162 	add	ix,sp
   0023 21 E8 FF            163 	ld	hl,#-24
   0026 39                  164 	add	hl,sp
   0027 F9                  165 	ld	sp,hl
                            166 ;test.c:166: unsigned char clsScreen8[15] = 
                            167 ;	genAddrOf
   0028 21 09 00            168 	ld	hl,#0x0009
   002B 39                  169 	add	hl,sp
   002C 4D                  170 	ld	c,l
   002D 44                  171 	ld	b,h
                            172 ;	genArrayInit
                            173 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   002E C5                  174 	push	bc
   002F 69                  175 	ld	l,c
   0030 60                  176 	ld	h,b
   0031 CDr00s00            177 	call	__initrleblock
   0034 F7 00               178 	.db	#-9,#0x00
   0036 06                  179 	.db	6
   0037 01 D4 00 00 00 C0   180 	.db	0x01, 0xD4, 0x00, 0x00, 0x00, 0xC0
   003D 00                  181 	.db	0
   003E C1                  182 	pop	bc
                            183 ;test.c:170: u8 x = 128, y = 96;
                            184 ;	genAssign
                            185 ;	AOP_STK for _MainLoop_x_1_1
   003F DD 36 F0 80         186 	ld	-16(ix),#0x80
                            187 ;	genAssign
                            188 ;	AOP_STK for _MainLoop_y_1_1
   0043 DD 36 EF 60         189 	ld	-17(ix),#0x60
                            190 ;test.c:177: SetShortVec(&g_Local[0], M2U(1),  M2U(1),  M2U(-1));
                            191 ;	genIpush
                            192 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 21 00 FF            193 	ld	hl,#0xFFFFFF00
   004A E5                  194 	push	hl
                            195 ;	genIpush
   004B 21 00 01            196 	ld	hl,#0x0100
   004E E5                  197 	push	hl
                            198 ;	genIpush
   004F 21 00 01            199 	ld	hl,#0x0100
   0052 E5                  200 	push	hl
                            201 ;	genIpush
   0053 21r1Ds00            202 	ld	hl,#_g_Local
   0056 E5                  203 	push	hl
                            204 ;	genCall
   0057 CDr90s06            205 	call	_SetShortVec
   005A F1                  206 	pop	af
   005B F1                  207 	pop	af
   005C F1                  208 	pop	af
   005D F1                  209 	pop	af
                            210 ;test.c:178: SetShortVec(&g_Local[1], M2U(1),  M2U(-1), M2U(-1));
                            211 ;	genPlus
                            212 ;	genPlusIncr
   005E 11r23s00            213 	ld	de,#_g_Local + 6
                            214 ;	genIpush
                            215 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0061 21 00 FF            216 	ld	hl,#0xFFFFFF00
   0064 E5                  217 	push	hl
                            218 ;	genIpush
   0065 21 00 FF            219 	ld	hl,#0xFFFFFF00
   0068 E5                  220 	push	hl
                            221 ;	genIpush
   0069 21 00 01            222 	ld	hl,#0x0100
   006C E5                  223 	push	hl
                            224 ;	genIpush
   006D D5                  225 	push	de
                            226 ;	genCall
   006E CDr90s06            227 	call	_SetShortVec
   0071 F1                  228 	pop	af
   0072 F1                  229 	pop	af
   0073 F1                  230 	pop	af
   0074 F1                  231 	pop	af
                            232 ;test.c:179: SetShortVec(&g_Local[2], M2U(-1), M2U(-1), M2U(-1));
                            233 ;	genPlus
                            234 ;	genPlusIncr
   0075 11r29s00            235 	ld	de,#_g_Local + 12
                            236 ;	genIpush
                            237 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0078 21 00 FF            238 	ld	hl,#0xFFFFFF00
   007B E5                  239 	push	hl
                            240 ;	genIpush
   007C 21 00 FF            241 	ld	hl,#0xFFFFFF00
   007F E5                  242 	push	hl
                            243 ;	genIpush
   0080 21 00 FF            244 	ld	hl,#0xFFFFFF00
   0083 E5                  245 	push	hl
                            246 ;	genIpush
   0084 D5                  247 	push	de
                            248 ;	genCall
   0085 CDr90s06            249 	call	_SetShortVec
   0088 F1                  250 	pop	af
   0089 F1                  251 	pop	af
   008A F1                  252 	pop	af
   008B F1                  253 	pop	af
                            254 ;test.c:180: SetShortVec(&g_Local[3], M2U(-1), M2U(1),  M2U(-1));
                            255 ;	genPlus
                            256 ;	genPlusIncr
   008C 11r2Fs00            257 	ld	de,#_g_Local + 18
                            258 ;	genIpush
                            259 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008F 21 00 FF            260 	ld	hl,#0xFFFFFF00
   0092 E5                  261 	push	hl
                            262 ;	genIpush
   0093 21 00 01            263 	ld	hl,#0x0100
   0096 E5                  264 	push	hl
                            265 ;	genIpush
   0097 21 00 FF            266 	ld	hl,#0xFFFFFF00
   009A E5                  267 	push	hl
                            268 ;	genIpush
   009B D5                  269 	push	de
                            270 ;	genCall
   009C CDr90s06            271 	call	_SetShortVec
   009F F1                  272 	pop	af
   00A0 F1                  273 	pop	af
   00A1 F1                  274 	pop	af
   00A2 F1                  275 	pop	af
                            276 ;test.c:181: SetShortVec(&g_Local[4], M2U(1),  M2U(1),  M2U(1));
                            277 ;	genPlus
                            278 ;	genPlusIncr
   00A3 11r35s00            279 	ld	de,#_g_Local + 24
                            280 ;	genIpush
                            281 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A6 21 00 01            282 	ld	hl,#0x0100
   00A9 E5                  283 	push	hl
                            284 ;	genIpush
   00AA 21 00 01            285 	ld	hl,#0x0100
   00AD E5                  286 	push	hl
                            287 ;	genIpush
   00AE 21 00 01            288 	ld	hl,#0x0100
   00B1 E5                  289 	push	hl
                            290 ;	genIpush
   00B2 D5                  291 	push	de
                            292 ;	genCall
   00B3 CDr90s06            293 	call	_SetShortVec
   00B6 F1                  294 	pop	af
   00B7 F1                  295 	pop	af
   00B8 F1                  296 	pop	af
   00B9 F1                  297 	pop	af
                            298 ;test.c:182: SetShortVec(&g_Local[5], M2U(1),  M2U(-1), M2U(1));
                            299 ;	genPlus
                            300 ;	genPlusIncr
   00BA 11r3Bs00            301 	ld	de,#_g_Local + 30
                            302 ;	genIpush
                            303 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00BD 21 00 01            304 	ld	hl,#0x0100
   00C0 E5                  305 	push	hl
                            306 ;	genIpush
   00C1 21 00 FF            307 	ld	hl,#0xFFFFFF00
   00C4 E5                  308 	push	hl
                            309 ;	genIpush
   00C5 21 00 01            310 	ld	hl,#0x0100
   00C8 E5                  311 	push	hl
                            312 ;	genIpush
   00C9 D5                  313 	push	de
                            314 ;	genCall
   00CA CDr90s06            315 	call	_SetShortVec
   00CD F1                  316 	pop	af
   00CE F1                  317 	pop	af
   00CF F1                  318 	pop	af
   00D0 F1                  319 	pop	af
                            320 ;test.c:183: SetShortVec(&g_Local[6], M2U(-1), M2U(-1), M2U(1));
                            321 ;	genPlus
                            322 ;	genPlusIncr
   00D1 11r41s00            323 	ld	de,#_g_Local + 36
                            324 ;	genIpush
                            325 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D4 21 00 01            326 	ld	hl,#0x0100
   00D7 E5                  327 	push	hl
                            328 ;	genIpush
   00D8 21 00 FF            329 	ld	hl,#0xFFFFFF00
   00DB E5                  330 	push	hl
                            331 ;	genIpush
   00DC 21 00 FF            332 	ld	hl,#0xFFFFFF00
   00DF E5                  333 	push	hl
                            334 ;	genIpush
   00E0 D5                  335 	push	de
                            336 ;	genCall
   00E1 CDr90s06            337 	call	_SetShortVec
   00E4 F1                  338 	pop	af
   00E5 F1                  339 	pop	af
   00E6 F1                  340 	pop	af
   00E7 F1                  341 	pop	af
                            342 ;test.c:184: SetShortVec(&g_Local[7], M2U(-1), M2U(1),  M2U(1));
                            343 ;	genPlus
                            344 ;	genPlusIncr
   00E8 11r47s00            345 	ld	de,#_g_Local + 42
                            346 ;	genIpush
                            347 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00EB 21 00 01            348 	ld	hl,#0x0100
   00EE E5                  349 	push	hl
                            350 ;	genIpush
   00EF 21 00 01            351 	ld	hl,#0x0100
   00F2 E5                  352 	push	hl
                            353 ;	genIpush
   00F3 21 00 FF            354 	ld	hl,#0xFFFFFF00
   00F6 E5                  355 	push	hl
                            356 ;	genIpush
   00F7 D5                  357 	push	de
                            358 ;	genCall
   00F8 CDr90s06            359 	call	_SetShortVec
   00FB F1                  360 	pop	af
   00FC F1                  361 	pop	af
   00FD F1                  362 	pop	af
   00FE F1                  363 	pop	af
                            364 ;test.c:186: SetShortVec(&g_Camera, M2U(0), M2U(0), M2U(3));
                            365 ;	genIpush
                            366 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00FF 21 00 03            367 	ld	hl,#0x0300
   0102 E5                  368 	push	hl
                            369 ;	genIpush
   0103 21 00 00            370 	ld	hl,#0x0000
   0106 E5                  371 	push	hl
                            372 ;	genIpush
   0107 21 00 00            373 	ld	hl,#0x0000
   010A E5                  374 	push	hl
                            375 ;	genIpush
   010B 21r0Fs00            376 	ld	hl,#_g_Camera
   010E E5                  377 	push	hl
                            378 ;	genCall
   010F CDr90s06            379 	call	_SetShortVec
   0112 F1                  380 	pop	af
   0113 F1                  381 	pop	af
   0114 F1                  382 	pop	af
   0115 F1                  383 	pop	af
                            384 ;test.c:188: SetShortVec(&g_Position, M2U(0), M2U(0), M2U(0));
                            385 ;	genIpush
                            386 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0116 21 00 00            387 	ld	hl,#0x0000
   0119 E5                  388 	push	hl
                            389 ;	genIpush
   011A 21 00 00            390 	ld	hl,#0x0000
   011D E5                  391 	push	hl
                            392 ;	genIpush
   011E 21 00 00            393 	ld	hl,#0x0000
   0121 E5                  394 	push	hl
                            395 ;	genIpush
   0122 21r15s00            396 	ld	hl,#_g_Position
   0125 E5                  397 	push	hl
                            398 ;	genCall
   0126 CDr90s06            399 	call	_SetShortVec
   0129 F1                  400 	pop	af
   012A F1                  401 	pop	af
   012B F1                  402 	pop	af
   012C F1                  403 	pop	af
                            404 ;test.c:190: g_Angle = 30;
                            405 ;	genAssign
   012D FD 21r1Bs00         406 	ld	iy,#_g_Angle
   0131 FD 36 00 1E         407 	ld	0(iy),#0x1E
                            408 ;test.c:192: SetScreen8();
                            409 ;	genCall
                            410 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0135 CDr73s14            411 	call	_SetScreen8
                            412 ;test.c:194: VPDCommand((int)&clsScreen8);
                            413 ;	genAddrOf
   0138 21 09 00            414 	ld	hl,#0x0009
   013B 39                  415 	add	hl,sp
   013C 5D                  416 	ld	e,l
   013D 54                  417 	ld	d,h
                            418 ;	genCast
                            419 ;	genIpush
                            420 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   013E D5                  421 	push	de
                            422 ;	genCall
   013F CDrD2s15            423 	call	_VPDCommand
   0142 F1                  424 	pop	af
                            425 ;test.c:196: while(bEnd == 0)
                            426 ;	genLabel
   0143                     427 00111$:
                            428 ;test.c:198: DrawPoint8(x,     y - 1, 0);
                            429 ;	genMinus
                            430 ;	AOP_STK for _MainLoop_y_1_1
   0143 DD 7E EF            431 	ld	a,-17(ix)
   0146 C6 FF               432 	add	a,#0xFF
   0148 5F                  433 	ld	e,a
                            434 ;	genIpush
                            435 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0149 D5                  436 	push	de
   014A 3E 00               437 	ld	a,#0x00
   014C F5                  438 	push	af
   014D 33                  439 	inc	sp
                            440 ;	genIpush
   014E 7B                  441 	ld	a,e
   014F F5                  442 	push	af
   0150 33                  443 	inc	sp
                            444 ;	genIpush
                            445 ;	AOP_STK for _MainLoop_x_1_1
   0151 DD 7E F0            446 	ld	a,-16(ix)
   0154 F5                  447 	push	af
   0155 33                  448 	inc	sp
                            449 ;	genCall
   0156 CDrB8s14            450 	call	_DrawPoint8
   0159 F1                  451 	pop	af
   015A 33                  452 	inc	sp
   015B D1                  453 	pop	de
                            454 ;test.c:199: DrawPoint8(x + 1, y,     0);
                            455 ;	genPlus
                            456 ;	AOP_STK for _MainLoop_x_1_1
                            457 ;	genPlusIncr
   015C DD 56 F0            458 	ld	d,-16(ix)
   015F 14                  459 	inc	d
                            460 ;	genIpush
                            461 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0160 D5                  462 	push	de
   0161 3E 00               463 	ld	a,#0x00
   0163 F5                  464 	push	af
   0164 33                  465 	inc	sp
                            466 ;	genIpush
                            467 ;	AOP_STK for _MainLoop_y_1_1
   0165 DD 7E EF            468 	ld	a,-17(ix)
   0168 F5                  469 	push	af
   0169 33                  470 	inc	sp
                            471 ;	genIpush
   016A D5                  472 	push	de
   016B 33                  473 	inc	sp
                            474 ;	genCall
   016C CDrB8s14            475 	call	_DrawPoint8
   016F F1                  476 	pop	af
   0170 33                  477 	inc	sp
   0171 D1                  478 	pop	de
                            479 ;test.c:200: DrawPoint8(x - 1, y,     0);
                            480 ;	genMinus
                            481 ;	AOP_STK for _MainLoop_x_1_1
   0172 DD 7E F0            482 	ld	a,-16(ix)
   0175 C6 FF               483 	add	a,#0xFF
   0177 47                  484 	ld	b,a
                            485 ;	genIpush
                            486 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0178 D5                  487 	push	de
   0179 3E 00               488 	ld	a,#0x00
   017B F5                  489 	push	af
   017C 33                  490 	inc	sp
                            491 ;	genIpush
                            492 ;	AOP_STK for _MainLoop_y_1_1
   017D DD 7E EF            493 	ld	a,-17(ix)
   0180 F5                  494 	push	af
   0181 33                  495 	inc	sp
                            496 ;	genIpush
   0182 C5                  497 	push	bc
   0183 33                  498 	inc	sp
                            499 ;	genCall
   0184 CDrB8s14            500 	call	_DrawPoint8
   0187 F1                  501 	pop	af
   0188 33                  502 	inc	sp
   0189 D1                  503 	pop	de
                            504 ;test.c:201: DrawPoint8(x,     y + 1, 0);
                            505 ;	genPlus
                            506 ;	AOP_STK for _MainLoop_y_1_1
                            507 ;	AOP_STK for _MainLoop_sloc0_1_0
                            508 ;	genPlusIncr
   018A DD 7E EF            509 	ld	a,-17(ix)
   018D C6 01               510 	add	a,#0x01
   018F DD 77 EC            511 	ld	-20(ix),a
                            512 ;	genIpush
                            513 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0192 D5                  514 	push	de
   0193 3E 00               515 	ld	a,#0x00
   0195 F5                  516 	push	af
   0196 33                  517 	inc	sp
                            518 ;	genIpush
                            519 ;	AOP_STK for _MainLoop_sloc0_1_0
   0197 DD 7E EC            520 	ld	a,-20(ix)
   019A F5                  521 	push	af
   019B 33                  522 	inc	sp
                            523 ;	genIpush
                            524 ;	AOP_STK for _MainLoop_x_1_1
   019C DD 7E F0            525 	ld	a,-16(ix)
   019F F5                  526 	push	af
   01A0 33                  527 	inc	sp
                            528 ;	genCall
   01A1 CDrB8s14            529 	call	_DrawPoint8
   01A4 F1                  530 	pop	af
   01A5 33                  531 	inc	sp
   01A6 D1                  532 	pop	de
                            533 ;test.c:206: addr = x + (y * 256);
                            534 ;	genCast
                            535 ;	AOP_STK for _MainLoop_x_1_1
                            536 ;	AOP_STK for _MainLoop_sloc1_1_0
   01A7 DD 7E F0            537 	ld	a,-16(ix)
   01AA DD 77 EA            538 	ld	-22(ix),a
   01AD DD 36 EB 00         539 	ld	-21(ix),#0x00
                            540 ;	genCast
                            541 ;	AOP_STK for _MainLoop_y_1_1
   01B1 DD 4E EF            542 	ld	c,-17(ix)
                            543 ;	genLeftShift
   01B4 41                  544 	ld	b,c
   01B5 0E 00               545 	ld	c,#0x00
                            546 ;	genPlus
                            547 ;	AOP_STK for _MainLoop_sloc1_1_0
   01B7 DD 7E EA            548 	ld	a,-22(ix)
   01BA 81                  549 	add	a,c
   01BB 4F                  550 	ld	c,a
   01BC DD 7E EB            551 	ld	a,-21(ix)
   01BF 88                  552 	adc	a,b
   01C0 47                  553 	ld	b,a
                            554 ;	genAssign
                            555 ;	(registers are the same)
                            556 ;test.c:207: WriteToVRAM(addr, 0x0F);
                            557 ;	genIpush
                            558 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   01C1 D5                  559 	push	de
   01C2 3E 0F               560 	ld	a,#0x0F
   01C4 F5                  561 	push	af
   01C5 33                  562 	inc	sp
                            563 ;	genIpush
   01C6 C5                  564 	push	bc
                            565 ;	genCall
   01C7 CDr6Bs16            566 	call	_WriteToVRAM
   01CA F1                  567 	pop	af
   01CB 33                  568 	inc	sp
   01CC D1                  569 	pop	de
                            570 ;test.c:209: x++;
                            571 ;	genAssign
                            572 ;	(registers are the same)
                            573 ;	genAssign
                            574 ;	AOP_STK for _MainLoop_x_1_1
   01CD DD 72 F0            575 	ld	-16(ix),d
                            576 ;test.c:210: if((i = Joystick(0) | Joystick(1) | Joystick(2)) != 0)
                            577 ;	genIpush
                            578 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   01D0 D5                  579 	push	de
   01D1 3E 00               580 	ld	a,#0x00
   01D3 F5                  581 	push	af
   01D4 33                  582 	inc	sp
                            583 ;	genCall
   01D5 CDr33s16            584 	call	_Joystick
   01D8 4D                  585 	ld	c,l
   01D9 33                  586 	inc	sp
   01DA D1                  587 	pop	de
                            588 ;	genIpush
                            589 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   01DB C5                  590 	push	bc
   01DC D5                  591 	push	de
   01DD 3E 01               592 	ld	a,#0x01
   01DF F5                  593 	push	af
   01E0 33                  594 	inc	sp
                            595 ;	genCall
   01E1 CDr33s16            596 	call	_Joystick
   01E4 45                  597 	ld	b,l
   01E5 33                  598 	inc	sp
   01E6 D1                  599 	pop	de
   01E7 78                  600 	ld	a,b
   01E8 C1                  601 	pop	bc
                            602 ;	genOr
   01E9 47                  603 	ld	b,a
   01EA B1                  604 	or	a,c
   01EB 4F                  605 	ld	c,a
                            606 ;	genIpush
                            607 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   01EC C5                  608 	push	bc
   01ED D5                  609 	push	de
   01EE 3E 02               610 	ld	a,#0x02
   01F0 F5                  611 	push	af
   01F1 33                  612 	inc	sp
                            613 ;	genCall
   01F2 CDr33s16            614 	call	_Joystick
   01F5 45                  615 	ld	b,l
   01F6 33                  616 	inc	sp
   01F7 D1                  617 	pop	de
   01F8 78                  618 	ld	a,b
   01F9 C1                  619 	pop	bc
                            620 ;	genOr
   01FA 47                  621 	ld	b,a
   01FB B1                  622 	or	a,c
   01FC 4F                  623 	ld	c,a
                            624 ;	genAssign
   01FD 41                  625 	ld	b,c
                            626 ;	genIfx
   01FE AF                  627 	xor	a,a
   01FF B1                  628 	or	a,c
   0200 CAr79s02            629 	jp	Z,00107$
                            630 ;test.c:212: switch (i)
                            631 ;	genCmpEq
                            632 ; genCmpEq: left 1, right 1, result 0
   0203 78                  633 	ld	a,b
   0204 D6 01               634 	sub	a,#0x01
   0206 28 13               635 	jr	Z,00101$
                            636 ;	genCmpEq
                            637 ; genCmpEq: left 1, right 1, result 0
   0208 78                  638 	ld	a,b
   0209 D6 03               639 	sub	a,#0x03
   020B 28 29               640 	jr	Z,00102$
                            641 ;	genCmpEq
                            642 ; genCmpEq: left 1, right 1, result 0
   020D 78                  643 	ld	a,b
   020E D6 05               644 	sub	a,#0x05
   0210 28 38               645 	jr	Z,00103$
                            646 ;	genCmpEq
                            647 ; genCmpEq: left 1, right 1, result 0
   0212 78                  648 	ld	a,b
   0213 D6 07               649 	sub	a,#0x07
   0215 CAr67s02            650 	jp	Z,00104$
                            651 ;	genGoto
   0218 C3r79s02            652 	jp	00107$
                            653 ;test.c:214: case 1: // ↑
                            654 ;	genLabel
   021B                     655 00101$:
                            656 ;test.c:215: y--;
                            657 ;	genAssign
                            658 ;	(registers are the same)
                            659 ;	genAssign
                            660 ;	AOP_STK for _MainLoop_y_1_1
   021B DD 73 EF            661 	ld	-17(ix),e
                            662 ;test.c:216: g_Position.y -= 10;
                            663 ;	genPlus
                            664 ;	genPlusIncr
   021E 01r17s00            665 	ld	bc,#_g_Position + 2
                            666 ;	genPointerGet
   0221 69                  667 	ld	l,c
   0222 60                  668 	ld	h,b
   0223 5E                  669 	ld	e,(hl)
   0224 23                  670 	inc	hl
   0225 56                  671 	ld	d,(hl)
                            672 ;	genMinus
   0226 7B                  673 	ld	a,e
   0227 C6 F6               674 	add	a,#0xF6
   0229 5F                  675 	ld	e,a
   022A 7A                  676 	ld	a,d
   022B CE FF               677 	adc	a,#0xFF
   022D 57                  678 	ld	d,a
                            679 ;	genAssign (pointer)
                            680 ;	isBitvar = 0
   022E 69                  681 	ld	l,c
   022F 60                  682 	ld	h,b
   0230 73                  683 	ld	(hl),e
   0231 23                  684 	inc	hl
   0232 72                  685 	ld	(hl),d
                            686 ;test.c:217: break;
                            687 ;	genGoto
   0233 C3r79s02            688 	jp	00107$
                            689 ;test.c:218: case 3: // →
                            690 ;	genLabel
   0236                     691 00102$:
                            692 ;test.c:219: g_Position.x += 10;
                            693 ;	genPointerGet
   0236 21r15s00            694 	ld	hl,#_g_Position
   0239 4E                  695 	ld	c,(hl)
   023A 23                  696 	inc	hl
   023B 46                  697 	ld	b,(hl)
                            698 ;	genPlus
                            699 ;	genPlusIncr
   023C 79                  700 	ld	a,c
   023D C6 0A               701 	add	a,#0x0A
   023F 4F                  702 	ld	c,a
   0240 78                  703 	ld	a,b
   0241 CE 00               704 	adc	a,#0x00
   0243 47                  705 	ld	b,a
                            706 ;	genAssign (pointer)
                            707 ;	isBitvar = 0
   0244 2B                  708 	dec	hl
   0245 71                  709 	ld	(hl),c
   0246 23                  710 	inc	hl
   0247 70                  711 	ld	(hl),b
                            712 ;test.c:220: break;
                            713 ;	genGoto
   0248 18 2F               714 	jr	00107$
                            715 ;test.c:221: case 5: // ↓
                            716 ;	genLabel
   024A                     717 00103$:
                            718 ;test.c:222: y++;
                            719 ;	genAssign
                            720 ;	AOP_STK for _MainLoop_sloc0_1_0
   024A DD 4E EC            721 	ld	c,-20(ix)
                            722 ;	genAssign
                            723 ;	AOP_STK for _MainLoop_y_1_1
   024D DD 71 EF            724 	ld	-17(ix),c
                            725 ;test.c:223: g_Position.y += 10;
                            726 ;	genPlus
                            727 ;	genPlusIncr
   0250 01r17s00            728 	ld	bc,#_g_Position + 2
                            729 ;	genPointerGet
   0253 69                  730 	ld	l,c
   0254 60                  731 	ld	h,b
   0255 5E                  732 	ld	e,(hl)
   0256 23                  733 	inc	hl
   0257 56                  734 	ld	d,(hl)
                            735 ;	genPlus
                            736 ;	genPlusIncr
   0258 7B                  737 	ld	a,e
   0259 C6 0A               738 	add	a,#0x0A
   025B 5F                  739 	ld	e,a
   025C 7A                  740 	ld	a,d
   025D CE 00               741 	adc	a,#0x00
   025F 57                  742 	ld	d,a
                            743 ;	genAssign (pointer)
                            744 ;	isBitvar = 0
   0260 69                  745 	ld	l,c
   0261 60                  746 	ld	h,b
   0262 73                  747 	ld	(hl),e
   0263 23                  748 	inc	hl
   0264 72                  749 	ld	(hl),d
                            750 ;test.c:224: break;
                            751 ;	genGoto
   0265 18 12               752 	jr	00107$
                            753 ;test.c:225: case 7: // ←
                            754 ;	genLabel
   0267                     755 00104$:
                            756 ;test.c:226: g_Position.x -= 10;
                            757 ;	genPointerGet
   0267 21r15s00            758 	ld	hl,#_g_Position
   026A 4E                  759 	ld	c,(hl)
   026B 23                  760 	inc	hl
   026C 46                  761 	ld	b,(hl)
                            762 ;	genMinus
   026D 79                  763 	ld	a,c
   026E C6 F6               764 	add	a,#0xF6
   0270 4F                  765 	ld	c,a
   0271 78                  766 	ld	a,b
   0272 CE FF               767 	adc	a,#0xFF
   0274 47                  768 	ld	b,a
                            769 ;	genAssign (pointer)
                            770 ;	isBitvar = 0
   0275 2B                  771 	dec	hl
   0276 71                  772 	ld	(hl),c
   0277 23                  773 	inc	hl
   0278 70                  774 	ld	(hl),b
                            775 ;test.c:228: }
                            776 ;	genLabel
   0279                     777 00107$:
                            778 ;test.c:231: DrawPoint8(x,     y - 1, 255);
                            779 ;	genMinus
                            780 ;	AOP_STK for _MainLoop_y_1_1
   0279 DD 7E EF            781 	ld	a,-17(ix)
   027C C6 FF               782 	add	a,#0xFF
   027E 4F                  783 	ld	c,a
                            784 ;	genIpush
                            785 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   027F 3E FF               786 	ld	a,#0xFF
   0281 F5                  787 	push	af
   0282 33                  788 	inc	sp
                            789 ;	genIpush
   0283 79                  790 	ld	a,c
   0284 F5                  791 	push	af
   0285 33                  792 	inc	sp
                            793 ;	genIpush
                            794 ;	AOP_STK for _MainLoop_x_1_1
   0286 DD 7E F0            795 	ld	a,-16(ix)
   0289 F5                  796 	push	af
   028A 33                  797 	inc	sp
                            798 ;	genCall
   028B CDrB8s14            799 	call	_DrawPoint8
   028E F1                  800 	pop	af
   028F 33                  801 	inc	sp
                            802 ;test.c:232: DrawPoint8(x + 1, y,     255);
                            803 ;	genPlus
                            804 ;	AOP_STK for _MainLoop_x_1_1
                            805 ;	genPlusIncr
   0290 DD 4E F0            806 	ld	c,-16(ix)
   0293 0C                  807 	inc	c
                            808 ;	genIpush
                            809 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0294 3E FF               810 	ld	a,#0xFF
   0296 F5                  811 	push	af
   0297 33                  812 	inc	sp
                            813 ;	genIpush
                            814 ;	AOP_STK for _MainLoop_y_1_1
   0298 DD 7E EF            815 	ld	a,-17(ix)
   029B F5                  816 	push	af
   029C 33                  817 	inc	sp
                            818 ;	genIpush
   029D 79                  819 	ld	a,c
   029E F5                  820 	push	af
   029F 33                  821 	inc	sp
                            822 ;	genCall
   02A0 CDrB8s14            823 	call	_DrawPoint8
   02A3 F1                  824 	pop	af
   02A4 33                  825 	inc	sp
                            826 ;test.c:233: DrawPoint8(x - 1, y,     255);
                            827 ;	genMinus
                            828 ;	AOP_STK for _MainLoop_x_1_1
   02A5 DD 7E F0            829 	ld	a,-16(ix)
   02A8 C6 FF               830 	add	a,#0xFF
   02AA 4F                  831 	ld	c,a
                            832 ;	genIpush
                            833 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02AB 3E FF               834 	ld	a,#0xFF
   02AD F5                  835 	push	af
   02AE 33                  836 	inc	sp
                            837 ;	genIpush
                            838 ;	AOP_STK for _MainLoop_y_1_1
   02AF DD 7E EF            839 	ld	a,-17(ix)
   02B2 F5                  840 	push	af
   02B3 33                  841 	inc	sp
                            842 ;	genIpush
   02B4 79                  843 	ld	a,c
   02B5 F5                  844 	push	af
   02B6 33                  845 	inc	sp
                            846 ;	genCall
   02B7 CDrB8s14            847 	call	_DrawPoint8
   02BA F1                  848 	pop	af
   02BB 33                  849 	inc	sp
                            850 ;test.c:234: DrawPoint8(x,     y + 1, 255);
                            851 ;	genPlus
                            852 ;	AOP_STK for _MainLoop_y_1_1
                            853 ;	genPlusIncr
   02BC DD 4E EF            854 	ld	c,-17(ix)
   02BF 0C                  855 	inc	c
                            856 ;	genIpush
                            857 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02C0 3E FF               858 	ld	a,#0xFF
   02C2 F5                  859 	push	af
   02C3 33                  860 	inc	sp
                            861 ;	genIpush
   02C4 79                  862 	ld	a,c
   02C5 F5                  863 	push	af
   02C6 33                  864 	inc	sp
                            865 ;	genIpush
                            866 ;	AOP_STK for _MainLoop_x_1_1
   02C7 DD 7E F0            867 	ld	a,-16(ix)
   02CA F5                  868 	push	af
   02CB 33                  869 	inc	sp
                            870 ;	genCall
   02CC CDrB8s14            871 	call	_DrawPoint8
   02CF F1                  872 	pop	af
   02D0 33                  873 	inc	sp
                            874 ;test.c:236: g_AngleIndex = g_Angle >> 2;
                            875 ;	genRightShift
   02D1 FD 21r1Bs00         876 	ld	iy,#_g_Angle
   02D5 FD 7E 00            877 	ld	a,0(iy)
   02D8 CB 3F               878 	srl	a
   02DA CB 3F               879 	srl	a
   02DC FD 21r1Cs00         880 	ld	iy,#_g_AngleIndex
   02E0 FD 77 00            881 	ld	0(iy),a
                            882 ;test.c:238: g_Angle += 4;
                            883 ;	genPlus
                            884 ;	genPlusIncr
   02E3 FD 21r1Bs00         885 	ld	iy,#_g_Angle
   02E7 FD 34 00            886 	inc	0(iy)
   02EA FD 34 00            887 	inc	0(iy)
   02ED FD 34 00            888 	inc	0(iy)
   02F0 FD 34 00            889 	inc	0(iy)
                            890 ;test.c:240: for(i=0; i<10; i++) // rows
                            891 ;	genAssign
                            892 ;	AOP_STK for _MainLoop_i_1_1
   02F3 DD 36 EE 00         893 	ld	-18(ix),#0x00
                            894 ;	genLabel
   02F7                     895 00118$:
                            896 ;	genCmpLt
                            897 ;	AOP_STK for _MainLoop_i_1_1
   02F7 DD 7E EE            898 	ld	a,-18(ix)
   02FA D6 0A               899 	sub	a,#0x0A
   02FC F2r43s01            900 	jp	P,00111$
                            901 ;test.c:242: keyLine = GetKeyMatrixLine(i);
                            902 ;	genIpush
                            903 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            904 ;	AOP_STK for _MainLoop_i_1_1
   02FF DD 7E EE            905 	ld	a,-18(ix)
   0302 F5                  906 	push	af
   0303 33                  907 	inc	sp
                            908 ;	genCall
   0304 CDr59s16            909 	call	_GetKeyMatrixLine
   0307 45                  910 	ld	b,l
   0308 33                  911 	inc	sp
                            912 ;	genAssign
                            913 ;	(registers are the same)
                            914 ;test.c:243: for(j=0; j<8; j++) // characters
                            915 ;	genPlus
                            916 ;	AOP_STK for _MainLoop_i_1_1
                            917 ;	genPlusIncr
   0309 DD 7E EE            918 	ld	a,-18(ix)
   030C C6 0A               919 	add	a,#0x0A
   030E 5F                  920 	ld	e,a
                            921 ;	genAssign
                            922 ;	AOP_STK for _MainLoop_sloc1_1_0
   030F DD 73 EA            923 	ld	-22(ix),e
                            924 ;	genAssign
                            925 ;	AOP_STK for _MainLoop_j_1_1
   0312 DD 36 ED 00         926 	ld	-19(ix),#0x00
                            927 ;	genLabel
   0316                     928 00114$:
                            929 ;	genCmpLt
                            930 ;	AOP_STK for _MainLoop_j_1_1
   0316 DD 7E ED            931 	ld	a,-19(ix)
   0319 D6 08               932 	sub	a,#0x08
   031B F2r85s03            933 	jp	P,00120$
                            934 ;test.c:245: if(keyLine & 1 << j)
                            935 ;	genLeftShift
                            936 ;	AOP_STK for _MainLoop_j_1_1
   031E DD 7E ED            937 	ld	a,-19(ix)
   0321 3C                  938 	inc	a
                            939 ;	AOP_STK for _MainLoop_sloc2_1_0
   0322 F5                  940 	push	af
   0323 DD 36 E8 01         941 	ld	-24(ix),#0x01
   0327 DD 36 E9 00         942 	ld	-23(ix),#0x00
   032B F1                  943 	pop	af
   032C 18 08               944 	jr	00142$
   032E                     945 00141$:
   032E DD CB E8 26         946 	sla	-24(ix)
   0332 DD CB E9 16         947 	rl	-23(ix)
   0336                     948 00142$:
   0336 3D                  949 	dec	a
   0337 20 F5               950 	jr	NZ,00141$
                            951 ;	genCast
   0339 50                  952 	ld	d,b
   033A 0E 00               953 	ld	c,#0x00
                            954 ;	genAnd
                            955 ;	AOP_STK for _MainLoop_sloc2_1_0
   033C 7A                  956 	ld	a,d
   033D DD A6 E8            957 	and	a,-24(ix)
   0340 57                  958 	ld	d,a
   0341 79                  959 	ld	a,c
   0342 DD A6 E9            960 	and	a,-23(ix)
                            961 ;	genIfx
   0345 4F                  962 	ld	c,a
   0346 B2                  963 	or	a,d
   0347 28 1D               964 	jr	Z,00109$
                            965 ;test.c:246: DrawPoint8(10 + j, 10 + i, 0);
                            966 ;	genPlus
                            967 ;	AOP_STK for _MainLoop_j_1_1
                            968 ;	genPlusIncr
   0349 DD 7E ED            969 	ld	a,-19(ix)
   034C C6 0A               970 	add	a,#0x0A
   034E 4F                  971 	ld	c,a
                            972 ;	genIpush
                            973 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   034F C5                  974 	push	bc
   0350 D5                  975 	push	de
   0351 3E 00               976 	ld	a,#0x00
   0353 F5                  977 	push	af
   0354 33                  978 	inc	sp
                            979 ;	genIpush
                            980 ;	AOP_STK for _MainLoop_sloc1_1_0
   0355 DD 7E EA            981 	ld	a,-22(ix)
   0358 F5                  982 	push	af
   0359 33                  983 	inc	sp
                            984 ;	genIpush
   035A 79                  985 	ld	a,c
   035B F5                  986 	push	af
   035C 33                  987 	inc	sp
                            988 ;	genCall
   035D CDrB8s14            989 	call	_DrawPoint8
   0360 F1                  990 	pop	af
   0361 33                  991 	inc	sp
   0362 D1                  992 	pop	de
   0363 C1                  993 	pop	bc
                            994 ;	genGoto
   0364 18 19               995 	jr	00116$
                            996 ;	genLabel
   0366                     997 00109$:
                            998 ;test.c:248: DrawPoint8(10 + j, 10 + i, 255);
                            999 ;	genPlus
                           1000 ;	AOP_STK for _MainLoop_j_1_1
                           1001 ;	genPlusIncr
   0366 DD 7E ED           1002 	ld	a,-19(ix)
   0369 C6 0A              1003 	add	a,#0x0A
   036B 4F                 1004 	ld	c,a
                           1005 ;	genIpush
                           1006 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   036C C5                 1007 	push	bc
   036D D5                 1008 	push	de
   036E 3E FF              1009 	ld	a,#0xFF
   0370 F5                 1010 	push	af
   0371 33                 1011 	inc	sp
                           1012 ;	genIpush
   0372 7B                 1013 	ld	a,e
   0373 F5                 1014 	push	af
   0374 33                 1015 	inc	sp
                           1016 ;	genIpush
   0375 79                 1017 	ld	a,c
   0376 F5                 1018 	push	af
   0377 33                 1019 	inc	sp
                           1020 ;	genCall
   0378 CDrB8s14           1021 	call	_DrawPoint8
   037B F1                 1022 	pop	af
   037C 33                 1023 	inc	sp
   037D D1                 1024 	pop	de
   037E C1                 1025 	pop	bc
                           1026 ;	genLabel
   037F                    1027 00116$:
                           1028 ;test.c:243: for(j=0; j<8; j++) // characters
                           1029 ;	genPlus
                           1030 ;	AOP_STK for _MainLoop_j_1_1
                           1031 ;	genPlusIncr
   037F DD 34 ED           1032 	inc	-19(ix)
                           1033 ;	genGoto
   0382 C3r16s03           1034 	jp	00114$
                           1035 ;	genLabel
   0385                    1036 00120$:
                           1037 ;test.c:240: for(i=0; i<10; i++) // rows
                           1038 ;	genPlus
                           1039 ;	AOP_STK for _MainLoop_i_1_1
                           1040 ;	genPlusIncr
   0385 DD 34 EE           1041 	inc	-18(ix)
                           1042 ;	genGoto
   0388 C3rF7s02           1043 	jp	00118$
                           1044 ;	genLabel
                           1045 ;	genEndFunction
   038B DD F9              1046 	ld	sp,ix
   038D DD E1              1047 	pop	ix
   038F C9                 1048 	ret
   0390                    1049 _MainLoop_end::
   0390                    1050 _g_Sinus:
   0390 00 00              1051 	.dw #0x0000
   0392 19 00              1052 	.dw #0x0019
   0394 31 00              1053 	.dw #0x0031
   0396 4A 00              1054 	.dw #0x004A
   0398 61 00              1055 	.dw #0x0061
   039A 78 00              1056 	.dw #0x0078
   039C 8E 00              1057 	.dw #0x008E
   039E A2 00              1058 	.dw #0x00A2
   03A0 B5 00              1059 	.dw #0x00B5
   03A2 C5 00              1060 	.dw #0x00C5
   03A4 D4 00              1061 	.dw #0x00D4
   03A6 E1 00              1062 	.dw #0x00E1
   03A8 EC 00              1063 	.dw #0x00EC
   03AA F4 00              1064 	.dw #0x00F4
   03AC FB 00              1065 	.dw #0x00FB
   03AE FE 00              1066 	.dw #0x00FE
   03B0 00 01              1067 	.dw #0x0100
   03B2 FE 00              1068 	.dw #0x00FE
   03B4 FB 00              1069 	.dw #0x00FB
   03B6 F4 00              1070 	.dw #0x00F4
   03B8 EC 00              1071 	.dw #0x00EC
   03BA E1 00              1072 	.dw #0x00E1
   03BC D4 00              1073 	.dw #0x00D4
   03BE C5 00              1074 	.dw #0x00C5
   03C0 B5 00              1075 	.dw #0x00B5
   03C2 A2 00              1076 	.dw #0x00A2
   03C4 8E 00              1077 	.dw #0x008E
   03C6 78 00              1078 	.dw #0x0078
   03C8 61 00              1079 	.dw #0x0061
   03CA 4A 00              1080 	.dw #0x004A
   03CC 31 00              1081 	.dw #0x0031
   03CE 19 00              1082 	.dw #0x0019
   03D0 00 00              1083 	.dw #0x0000
   03D2 E7 FF              1084 	.dw #0xFFE7
   03D4 CF FF              1085 	.dw #0xFFCF
   03D6 B6 FF              1086 	.dw #0xFFB6
   03D8 9F FF              1087 	.dw #0xFF9F
   03DA 88 FF              1088 	.dw #0xFF88
   03DC 72 FF              1089 	.dw #0xFF72
   03DE 5E FF              1090 	.dw #0xFF5E
   03E0 4B FF              1091 	.dw #0xFF4B
   03E2 3B FF              1092 	.dw #0xFF3B
   03E4 2C FF              1093 	.dw #0xFF2C
   03E6 1F FF              1094 	.dw #0xFF1F
   03E8 14 FF              1095 	.dw #0xFF14
   03EA 0C FF              1096 	.dw #0xFF0C
   03EC 05 FF              1097 	.dw #0xFF05
   03EE 02 FF              1098 	.dw #0xFF02
   03F0 00 FF              1099 	.dw #0xFF00
   03F2 02 FF              1100 	.dw #0xFF02
   03F4 05 FF              1101 	.dw #0xFF05
   03F6 0C FF              1102 	.dw #0xFF0C
   03F8 14 FF              1103 	.dw #0xFF14
   03FA 1F FF              1104 	.dw #0xFF1F
   03FC 2C FF              1105 	.dw #0xFF2C
   03FE 3B FF              1106 	.dw #0xFF3B
   0400 4B FF              1107 	.dw #0xFF4B
   0402 5E FF              1108 	.dw #0xFF5E
   0404 72 FF              1109 	.dw #0xFF72
   0406 88 FF              1110 	.dw #0xFF88
   0408 9F FF              1111 	.dw #0xFF9F
   040A B6 FF              1112 	.dw #0xFFB6
   040C CF FF              1113 	.dw #0xFFCF
   040E E7 FF              1114 	.dw #0xFFE7
   0410                    1115 _g_Cosinus:
   0410 00 01              1116 	.dw #0x0100
   0412 FE 00              1117 	.dw #0x00FE
   0414 FB 00              1118 	.dw #0x00FB
   0416 F4 00              1119 	.dw #0x00F4
   0418 EC 00              1120 	.dw #0x00EC
   041A E1 00              1121 	.dw #0x00E1
   041C D4 00              1122 	.dw #0x00D4
   041E C5 00              1123 	.dw #0x00C5
   0420 B5 00              1124 	.dw #0x00B5
   0422 A2 00              1125 	.dw #0x00A2
   0424 8E 00              1126 	.dw #0x008E
   0426 78 00              1127 	.dw #0x0078
   0428 61 00              1128 	.dw #0x0061
   042A 4A 00              1129 	.dw #0x004A
   042C 31 00              1130 	.dw #0x0031
   042E 19 00              1131 	.dw #0x0019
   0430 00 00              1132 	.dw #0x0000
   0432 E7 FF              1133 	.dw #0xFFE7
   0434 CF FF              1134 	.dw #0xFFCF
   0436 B6 FF              1135 	.dw #0xFFB6
   0438 9F FF              1136 	.dw #0xFF9F
   043A 88 FF              1137 	.dw #0xFF88
   043C 72 FF              1138 	.dw #0xFF72
   043E 5E FF              1139 	.dw #0xFF5E
   0440 4B FF              1140 	.dw #0xFF4B
   0442 3B FF              1141 	.dw #0xFF3B
   0444 2C FF              1142 	.dw #0xFF2C
   0446 1F FF              1143 	.dw #0xFF1F
   0448 14 FF              1144 	.dw #0xFF14
   044A 0C FF              1145 	.dw #0xFF0C
   044C 05 FF              1146 	.dw #0xFF05
   044E 02 FF              1147 	.dw #0xFF02
   0450 00 FF              1148 	.dw #0xFF00
   0452 02 FF              1149 	.dw #0xFF02
   0454 05 FF              1150 	.dw #0xFF05
   0456 0C FF              1151 	.dw #0xFF0C
   0458 14 FF              1152 	.dw #0xFF14
   045A 1F FF              1153 	.dw #0xFF1F
   045C 2C FF              1154 	.dw #0xFF2C
   045E 3B FF              1155 	.dw #0xFF3B
   0460 4B FF              1156 	.dw #0xFF4B
   0462 5E FF              1157 	.dw #0xFF5E
   0464 72 FF              1158 	.dw #0xFF72
   0466 88 FF              1159 	.dw #0xFF88
   0468 9F FF              1160 	.dw #0xFF9F
   046A B6 FF              1161 	.dw #0xFFB6
   046C CF FF              1162 	.dw #0xFFCF
   046E E7 FF              1163 	.dw #0xFFE7
   0470 00 00              1164 	.dw #0x0000
   0472 19 00              1165 	.dw #0x0019
   0474 31 00              1166 	.dw #0x0031
   0476 4A 00              1167 	.dw #0x004A
   0478 61 00              1168 	.dw #0x0061
   047A 78 00              1169 	.dw #0x0078
   047C 8E 00              1170 	.dw #0x008E
   047E A2 00              1171 	.dw #0x00A2
   0480 B5 00              1172 	.dw #0x00B5
   0482 C5 00              1173 	.dw #0x00C5
   0484 D4 00              1174 	.dw #0x00D4
   0486 E1 00              1175 	.dw #0x00E1
   0488 EC 00              1176 	.dw #0x00EC
   048A F4 00              1177 	.dw #0x00F4
   048C FB 00              1178 	.dw #0x00FB
   048E FE 00              1179 	.dw #0x00FE
   0490                    1180 _g_ProjectionX:
   0490 00 01              1181 	.dw #0x0100
   0492 96 00              1182 	.dw #0x0096
   0494 4B 00              1183 	.dw #0x004B
   0496 32 00              1184 	.dw #0x0032
   0498 25 00              1185 	.dw #0x0025
   049A 1E 00              1186 	.dw #0x001E
   049C 19 00              1187 	.dw #0x0019
   049E 15 00              1188 	.dw #0x0015
   04A0 12 00              1189 	.dw #0x0012
   04A2 10 00              1190 	.dw #0x0010
   04A4 0F 00              1191 	.dw #0x000F
   04A6 0D 00              1192 	.dw #0x000D
   04A8 0C 00              1193 	.dw #0x000C
   04AA 0B 00              1194 	.dw #0x000B
   04AC 0A 00              1195 	.dw #0x000A
   04AE 0A 00              1196 	.dw #0x000A
   04B0 09 00              1197 	.dw #0x0009
   04B2 08 00              1198 	.dw #0x0008
   04B4 08 00              1199 	.dw #0x0008
   04B6 07 00              1200 	.dw #0x0007
   04B8 07 00              1201 	.dw #0x0007
   04BA 07 00              1202 	.dw #0x0007
   04BC 06 00              1203 	.dw #0x0006
   04BE 06 00              1204 	.dw #0x0006
   04C0 06 00              1205 	.dw #0x0006
   04C2 06 00              1206 	.dw #0x0006
   04C4 05 00              1207 	.dw #0x0005
   04C6 05 00              1208 	.dw #0x0005
   04C8 05 00              1209 	.dw #0x0005
   04CA 05 00              1210 	.dw #0x0005
   04CC 05 00              1211 	.dw #0x0005
   04CE 04 00              1212 	.dw #0x0004
   04D0 04 00              1213 	.dw #0x0004
   04D2 04 00              1214 	.dw #0x0004
   04D4 04 00              1215 	.dw #0x0004
   04D6 04 00              1216 	.dw #0x0004
   04D8 04 00              1217 	.dw #0x0004
   04DA 04 00              1218 	.dw #0x0004
   04DC 03 00              1219 	.dw #0x0003
   04DE 03 00              1220 	.dw #0x0003
   04E0 03 00              1221 	.dw #0x0003
   04E2 03 00              1222 	.dw #0x0003
   04E4 03 00              1223 	.dw #0x0003
   04E6 03 00              1224 	.dw #0x0003
   04E8 03 00              1225 	.dw #0x0003
   04EA 03 00              1226 	.dw #0x0003
   04EC 03 00              1227 	.dw #0x0003
   04EE 03 00              1228 	.dw #0x0003
   04F0 03 00              1229 	.dw #0x0003
   04F2 03 00              1230 	.dw #0x0003
   04F4 03 00              1231 	.dw #0x0003
   04F6 02 00              1232 	.dw #0x0002
   04F8 02 00              1233 	.dw #0x0002
   04FA 02 00              1234 	.dw #0x0002
   04FC 02 00              1235 	.dw #0x0002
   04FE 02 00              1236 	.dw #0x0002
   0500 02 00              1237 	.dw #0x0002
   0502 02 00              1238 	.dw #0x0002
   0504 02 00              1239 	.dw #0x0002
   0506 02 00              1240 	.dw #0x0002
   0508 02 00              1241 	.dw #0x0002
   050A 02 00              1242 	.dw #0x0002
   050C 02 00              1243 	.dw #0x0002
   050E 02 00              1244 	.dw #0x0002
   0510 02 00              1245 	.dw #0x0002
   0512 02 00              1246 	.dw #0x0002
   0514 02 00              1247 	.dw #0x0002
   0516 02 00              1248 	.dw #0x0002
   0518 02 00              1249 	.dw #0x0002
   051A 02 00              1250 	.dw #0x0002
   051C 02 00              1251 	.dw #0x0002
   051E 02 00              1252 	.dw #0x0002
   0520 02 00              1253 	.dw #0x0002
   0522 02 00              1254 	.dw #0x0002
   0524 02 00              1255 	.dw #0x0002
   0526 02 00              1256 	.dw #0x0002
   0528 01 00              1257 	.dw #0x0001
   052A 01 00              1258 	.dw #0x0001
   052C 01 00              1259 	.dw #0x0001
   052E 01 00              1260 	.dw #0x0001
   0530 01 00              1261 	.dw #0x0001
   0532 01 00              1262 	.dw #0x0001
   0534 01 00              1263 	.dw #0x0001
   0536 01 00              1264 	.dw #0x0001
   0538 01 00              1265 	.dw #0x0001
   053A 01 00              1266 	.dw #0x0001
   053C 01 00              1267 	.dw #0x0001
   053E 01 00              1268 	.dw #0x0001
   0540 01 00              1269 	.dw #0x0001
   0542 01 00              1270 	.dw #0x0001
   0544 01 00              1271 	.dw #0x0001
   0546 01 00              1272 	.dw #0x0001
   0548 01 00              1273 	.dw #0x0001
   054A 01 00              1274 	.dw #0x0001
   054C 01 00              1275 	.dw #0x0001
   054E 01 00              1276 	.dw #0x0001
   0550 01 00              1277 	.dw #0x0001
   0552 01 00              1278 	.dw #0x0001
   0554 01 00              1279 	.dw #0x0001
   0556 01 00              1280 	.dw #0x0001
   0558 01 00              1281 	.dw #0x0001
   055A 01 00              1282 	.dw #0x0001
   055C 01 00              1283 	.dw #0x0001
   055E 01 00              1284 	.dw #0x0001
   0560 01 00              1285 	.dw #0x0001
   0562 01 00              1286 	.dw #0x0001
   0564 01 00              1287 	.dw #0x0001
   0566 01 00              1288 	.dw #0x0001
   0568 01 00              1289 	.dw #0x0001
   056A 01 00              1290 	.dw #0x0001
   056C 01 00              1291 	.dw #0x0001
   056E 01 00              1292 	.dw #0x0001
   0570 01 00              1293 	.dw #0x0001
   0572 01 00              1294 	.dw #0x0001
   0574 01 00              1295 	.dw #0x0001
   0576 01 00              1296 	.dw #0x0001
   0578 01 00              1297 	.dw #0x0001
   057A 01 00              1298 	.dw #0x0001
   057C 01 00              1299 	.dw #0x0001
   057E 01 00              1300 	.dw #0x0001
   0580 01 00              1301 	.dw #0x0001
   0582 01 00              1302 	.dw #0x0001
   0584 01 00              1303 	.dw #0x0001
   0586 01 00              1304 	.dw #0x0001
   0588 01 00              1305 	.dw #0x0001
   058A 01 00              1306 	.dw #0x0001
   058C 01 00              1307 	.dw #0x0001
   058E 01 00              1308 	.dw #0x0001
   0590                    1309 _g_ProjectionY:
   0590 00 01              1310 	.dw #0x0100
   0592 B5 00              1311 	.dw #0x00B5
   0594 5A 00              1312 	.dw #0x005A
   0596 3C 00              1313 	.dw #0x003C
   0598 2D 00              1314 	.dw #0x002D
   059A 24 00              1315 	.dw #0x0024
   059C 1E 00              1316 	.dw #0x001E
   059E 19 00              1317 	.dw #0x0019
   05A0 16 00              1318 	.dw #0x0016
   05A2 14 00              1319 	.dw #0x0014
   05A4 12 00              1320 	.dw #0x0012
   05A6 10 00              1321 	.dw #0x0010
   05A8 0F 00              1322 	.dw #0x000F
   05AA 0D 00              1323 	.dw #0x000D
   05AC 0C 00              1324 	.dw #0x000C
   05AE 0C 00              1325 	.dw #0x000C
   05B0 0B 00              1326 	.dw #0x000B
   05B2 0A 00              1327 	.dw #0x000A
   05B4 0A 00              1328 	.dw #0x000A
   05B6 09 00              1329 	.dw #0x0009
   05B8 09 00              1330 	.dw #0x0009
   05BA 08 00              1331 	.dw #0x0008
   05BC 08 00              1332 	.dw #0x0008
   05BE 07 00              1333 	.dw #0x0007
   05C0 07 00              1334 	.dw #0x0007
   05C2 07 00              1335 	.dw #0x0007
   05C4 06 00              1336 	.dw #0x0006
   05C6 06 00              1337 	.dw #0x0006
   05C8 06 00              1338 	.dw #0x0006
   05CA 06 00              1339 	.dw #0x0006
   05CC 06 00              1340 	.dw #0x0006
   05CE 05 00              1341 	.dw #0x0005
   05D0 05 00              1342 	.dw #0x0005
   05D2 05 00              1343 	.dw #0x0005
   05D4 05 00              1344 	.dw #0x0005
   05D6 05 00              1345 	.dw #0x0005
   05D8 05 00              1346 	.dw #0x0005
   05DA 04 00              1347 	.dw #0x0004
   05DC 04 00              1348 	.dw #0x0004
   05DE 04 00              1349 	.dw #0x0004
   05E0 04 00              1350 	.dw #0x0004
   05E2 04 00              1351 	.dw #0x0004
   05E4 04 00              1352 	.dw #0x0004
   05E6 04 00              1353 	.dw #0x0004
   05E8 04 00              1354 	.dw #0x0004
   05EA 04 00              1355 	.dw #0x0004
   05EC 03 00              1356 	.dw #0x0003
   05EE 03 00              1357 	.dw #0x0003
   05F0 03 00              1358 	.dw #0x0003
   05F2 03 00              1359 	.dw #0x0003
   05F4 03 00              1360 	.dw #0x0003
   05F6 03 00              1361 	.dw #0x0003
   05F8 03 00              1362 	.dw #0x0003
   05FA 03 00              1363 	.dw #0x0003
   05FC 03 00              1364 	.dw #0x0003
   05FE 03 00              1365 	.dw #0x0003
   0600 03 00              1366 	.dw #0x0003
   0602 03 00              1367 	.dw #0x0003
   0604 03 00              1368 	.dw #0x0003
   0606 03 00              1369 	.dw #0x0003
   0608 03 00              1370 	.dw #0x0003
   060A 02 00              1371 	.dw #0x0002
   060C 02 00              1372 	.dw #0x0002
   060E 02 00              1373 	.dw #0x0002
   0610 02 00              1374 	.dw #0x0002
   0612 02 00              1375 	.dw #0x0002
   0614 02 00              1376 	.dw #0x0002
   0616 02 00              1377 	.dw #0x0002
   0618 02 00              1378 	.dw #0x0002
   061A 02 00              1379 	.dw #0x0002
   061C 02 00              1380 	.dw #0x0002
   061E 02 00              1381 	.dw #0x0002
   0620 02 00              1382 	.dw #0x0002
   0622 02 00              1383 	.dw #0x0002
   0624 02 00              1384 	.dw #0x0002
   0626 02 00              1385 	.dw #0x0002
   0628 02 00              1386 	.dw #0x0002
   062A 02 00              1387 	.dw #0x0002
   062C 02 00              1388 	.dw #0x0002
   062E 02 00              1389 	.dw #0x0002
   0630 02 00              1390 	.dw #0x0002
   0632 02 00              1391 	.dw #0x0002
   0634 02 00              1392 	.dw #0x0002
   0636 02 00              1393 	.dw #0x0002
   0638 02 00              1394 	.dw #0x0002
   063A 02 00              1395 	.dw #0x0002
   063C 02 00              1396 	.dw #0x0002
   063E 02 00              1397 	.dw #0x0002
   0640 02 00              1398 	.dw #0x0002
   0642 02 00              1399 	.dw #0x0002
   0644 02 00              1400 	.dw #0x0002
   0646 01 00              1401 	.dw #0x0001
   0648 01 00              1402 	.dw #0x0001
   064A 01 00              1403 	.dw #0x0001
   064C 01 00              1404 	.dw #0x0001
   064E 01 00              1405 	.dw #0x0001
   0650 01 00              1406 	.dw #0x0001
   0652 01 00              1407 	.dw #0x0001
   0654 01 00              1408 	.dw #0x0001
   0656 01 00              1409 	.dw #0x0001
   0658 01 00              1410 	.dw #0x0001
   065A 01 00              1411 	.dw #0x0001
   065C 01 00              1412 	.dw #0x0001
   065E 01 00              1413 	.dw #0x0001
   0660 01 00              1414 	.dw #0x0001
   0662 01 00              1415 	.dw #0x0001
   0664 01 00              1416 	.dw #0x0001
   0666 01 00              1417 	.dw #0x0001
   0668 01 00              1418 	.dw #0x0001
   066A 01 00              1419 	.dw #0x0001
   066C 01 00              1420 	.dw #0x0001
   066E 01 00              1421 	.dw #0x0001
   0670 01 00              1422 	.dw #0x0001
   0672 01 00              1423 	.dw #0x0001
   0674 01 00              1424 	.dw #0x0001
   0676 01 00              1425 	.dw #0x0001
   0678 01 00              1426 	.dw #0x0001
   067A 01 00              1427 	.dw #0x0001
   067C 01 00              1428 	.dw #0x0001
   067E 01 00              1429 	.dw #0x0001
   0680 01 00              1430 	.dw #0x0001
   0682 01 00              1431 	.dw #0x0001
   0684 01 00              1432 	.dw #0x0001
   0686 01 00              1433 	.dw #0x0001
   0688 01 00              1434 	.dw #0x0001
   068A 01 00              1435 	.dw #0x0001
   068C 01 00              1436 	.dw #0x0001
   068E 01 00              1437 	.dw #0x0001
                           1438 ;test.c:267: void SetShortVec(ShortVec* ret, i16 x, i16 y, i16 z)
                           1439 ;	genLabel
                           1440 ;	genFunction
                           1441 ;	---------------------------------
                           1442 ; Function SetShortVec
                           1443 ; ---------------------------------
   0690                    1444 _SetShortVec_start::
   0690                    1445 _SetShortVec:
   0690 DD E5              1446 	push	ix
   0692 DD 21 00 00        1447 	ld	ix,#0
   0696 DD 39              1448 	add	ix,sp
                           1449 ;test.c:269: ret->x = x;
                           1450 ;	genAssign
                           1451 ;	AOP_STK for 
   0698 DD 4E 04           1452 	ld	c,4(ix)
   069B DD 46 05           1453 	ld	b,5(ix)
                           1454 ;	genAssign (pointer)
                           1455 ;	AOP_STK for 
                           1456 ;	isBitvar = 0
   069E 69                 1457 	ld	l,c
   069F 60                 1458 	ld	h,b
   06A0 DD 7E 06           1459 	ld	a,6(ix)
   06A3 77                 1460 	ld	(hl),a
   06A4 23                 1461 	inc	hl
   06A5 DD 7E 07           1462 	ld	a,7(ix)
   06A8 77                 1463 	ld	(hl),a
                           1464 ;test.c:270: ret->y = y;
                           1465 ;	genPlus
                           1466 ;	genPlusIncr
   06A9 59                 1467 	ld	e,c
   06AA 50                 1468 	ld	d,b
   06AB 13                 1469 	inc	de
   06AC 13                 1470 	inc	de
                           1471 ;	genAssign (pointer)
                           1472 ;	AOP_STK for 
                           1473 ;	isBitvar = 0
   06AD 6B                 1474 	ld	l,e
   06AE 62                 1475 	ld	h,d
   06AF DD 7E 08           1476 	ld	a,8(ix)
   06B2 77                 1477 	ld	(hl),a
   06B3 23                 1478 	inc	hl
   06B4 DD 7E 09           1479 	ld	a,9(ix)
   06B7 77                 1480 	ld	(hl),a
                           1481 ;test.c:271: ret->z = z;
                           1482 ;	genPlus
                           1483 ;	genPlusIncr
   06B8 03                 1484 	inc	bc
   06B9 03                 1485 	inc	bc
   06BA 03                 1486 	inc	bc
   06BB 03                 1487 	inc	bc
                           1488 ;	genAssign (pointer)
                           1489 ;	AOP_STK for 
                           1490 ;	isBitvar = 0
   06BC 69                 1491 	ld	l,c
   06BD 60                 1492 	ld	h,b
   06BE DD 7E 0A           1493 	ld	a,10(ix)
   06C1 77                 1494 	ld	(hl),a
   06C2 23                 1495 	inc	hl
   06C3 DD 7E 0B           1496 	ld	a,11(ix)
   06C6 77                 1497 	ld	(hl),a
                           1498 ;	genLabel
                           1499 ;	genEndFunction
   06C7 DD E1              1500 	pop	ix
   06C9 C9                 1501 	ret
   06CA                    1502 _SetShortVec_end::
                           1503 ;test.c:277: void TransXZ(ShortVec* ret, const ShortVec* vec, u8 g_Angle, const ShortVec* pos)
                           1504 ;	genLabel
                           1505 ;	genFunction
                           1506 ;	---------------------------------
                           1507 ; Function TransXZ
                           1508 ; ---------------------------------
   06CA                    1509 _TransXZ_start::
   06CA                    1510 _TransXZ:
   06CA DD E5              1511 	push	ix
   06CC DD 21 00 00        1512 	ld	ix,#0
   06D0 DD 39              1513 	add	ix,sp
   06D2 21 F3 FF           1514 	ld	hl,#-13
   06D5 39                 1515 	add	hl,sp
   06D6 F9                 1516 	ld	sp,hl
                           1517 ;test.c:279: g_Angle >>= 2; 
                           1518 ;	genRightShift
                           1519 ;	AOP_STK for 
   06D7 DD 7E 08           1520 	ld	a,8(ix)
   06DA CB 3F              1521 	srl	a
   06DC CB 3F              1522 	srl	a
   06DE DD 77 08           1523 	ld	8(ix),a
                           1524 ;test.c:280: ret->x = UxU(vec->x, g_Cosinus[g_Angle]) - UxU(vec->z, g_Sinus[g_Angle]);
                           1525 ;	genAssign
                           1526 ;	AOP_STK for 
   06E1 DD 4E 04           1527 	ld	c,4(ix)
   06E4 DD 46 05           1528 	ld	b,5(ix)
                           1529 ;	genAssign
                           1530 ;	AOP_STK for 
                           1531 ;	AOP_STK for _TransXZ_sloc0_1_0
   06E7 DD 7E 06           1532 	ld	a,6(ix)
   06EA DD 77 FE           1533 	ld	-2(ix),a
   06ED DD 7E 07           1534 	ld	a,7(ix)
   06F0 DD 77 FF           1535 	ld	-1(ix),a
                           1536 ;	genPointerGet
                           1537 ;	AOP_STK for _TransXZ_sloc0_1_0
   06F3 DD 6E FE           1538 	ld	l,-2(ix)
   06F6 DD 66 FF           1539 	ld	h,-1(ix)
   06F9 5E                 1540 	ld	e,(hl)
   06FA 23                 1541 	inc	hl
   06FB 56                 1542 	ld	d,(hl)
                           1543 ;	genRightShift
                           1544 ;	AOP_STK for _TransXZ_sloc1_1_0
   06FC DD 73 FC           1545 	ld	-4(ix),e
   06FF DD 72 FD           1546 	ld	-3(ix),d
   0702 DD CB FD 2E        1547 	sra	-3(ix)
   0706 DD CB FC 1E        1548 	rr	-4(ix)
   070A DD CB FD 2E        1549 	sra	-3(ix)
   070E DD CB FC 1E        1550 	rr	-4(ix)
   0712 DD CB FD 2E        1551 	sra	-3(ix)
   0716 DD CB FC 1E        1552 	rr	-4(ix)
   071A DD CB FD 2E        1553 	sra	-3(ix)
   071E DD CB FC 1E        1554 	rr	-4(ix)
                           1555 ;	genLeftShift
                           1556 ;	AOP_STK for 
                           1557 ;	AOP_STK for _TransXZ_sloc2_1_0
   0722 DD 7E 08           1558 	ld	a,8(ix)
   0725 87                 1559 	add	a,a
                           1560 ;	genPlus
                           1561 ;	AOP_STK for _TransXZ_sloc2_1_0
   0726 DD 77 FB           1562 	ld	-5(ix), a
   0729 C6r10              1563 	add	a,#<_g_Cosinus
   072B 57                 1564 	ld	d,a
   072C 3Es04              1565 	ld	a,#>_g_Cosinus
   072E CE 00              1566 	adc	a,#0x00
   0730 5F                 1567 	ld	e,a
                           1568 ;	genPointerGet
   0731 6A                 1569 	ld	l,d
   0732 63                 1570 	ld	h,e
   0733 56                 1571 	ld	d,(hl)
   0734 23                 1572 	inc	hl
   0735 5E                 1573 	ld	e,(hl)
                           1574 ;	genRightShift
                           1575 ;	AOP_STK for _TransXZ_sloc3_1_0
   0736 DD 72 F9           1576 	ld	-7(ix),d
   0739 DD 73 FA           1577 	ld	-6(ix),e
   073C DD CB FA 2E        1578 	sra	-6(ix)
   0740 DD CB F9 1E        1579 	rr	-7(ix)
   0744 DD CB FA 2E        1580 	sra	-6(ix)
   0748 DD CB F9 1E        1581 	rr	-7(ix)
   074C DD CB FA 2E        1582 	sra	-6(ix)
   0750 DD CB F9 1E        1583 	rr	-7(ix)
   0754 DD CB FA 2E        1584 	sra	-6(ix)
   0758 DD CB F9 1E        1585 	rr	-7(ix)
                           1586 ;	genIpush
                           1587 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   075C C5                 1588 	push	bc
                           1589 ;	AOP_STK for _TransXZ_sloc3_1_0
   075D DD 6E F9           1590 	ld	l,-7(ix)
   0760 DD 66 FA           1591 	ld	h,-6(ix)
   0763 E5                 1592 	push	hl
                           1593 ;	genIpush
                           1594 ;	AOP_STK for _TransXZ_sloc1_1_0
   0764 DD 6E FC           1595 	ld	l,-4(ix)
   0767 DD 66 FD           1596 	ld	h,-3(ix)
   076A E5                 1597 	push	hl
                           1598 ;	genCall
   076B CDr00s00           1599 	call	__mulint_rrx_s
                           1600 ;	AOP_STK for _TransXZ_sloc4_1_0
   076E DD 74 F8           1601 	ld	-8(ix),h
   0771 DD 75 F7           1602 	ld	-9(ix),l
   0774 F1                 1603 	pop	af
   0775 F1                 1604 	pop	af
   0776 C1                 1605 	pop	bc
                           1606 ;	genPlus
                           1607 ;	AOP_STK for _TransXZ_sloc0_1_0
                           1608 ;	genPlusIncr
   0777 DD 7E FE           1609 	ld	a,-2(ix)
   077A C6 04              1610 	add	a,#0x04
   077C 5F                 1611 	ld	e,a
   077D DD 7E FF           1612 	ld	a,-1(ix)
   0780 CE 00              1613 	adc	a,#0x00
   0782 57                 1614 	ld	d,a
                           1615 ;	genPointerGet
   0783 6B                 1616 	ld	l,e
   0784 62                 1617 	ld	h,d
   0785 5E                 1618 	ld	e,(hl)
   0786 23                 1619 	inc	hl
   0787 56                 1620 	ld	d,(hl)
                           1621 ;	genRightShift
                           1622 ;	AOP_STK for _TransXZ_sloc5_1_0
   0788 DD 73 F5           1623 	ld	-11(ix),e
   078B DD 72 F6           1624 	ld	-10(ix),d
   078E DD CB F6 2E        1625 	sra	-10(ix)
   0792 DD CB F5 1E        1626 	rr	-11(ix)
   0796 DD CB F6 2E        1627 	sra	-10(ix)
   079A DD CB F5 1E        1628 	rr	-11(ix)
   079E DD CB F6 2E        1629 	sra	-10(ix)
   07A2 DD CB F5 1E        1630 	rr	-11(ix)
   07A6 DD CB F6 2E        1631 	sra	-10(ix)
   07AA DD CB F5 1E        1632 	rr	-11(ix)
                           1633 ;	genPlus
                           1634 ;	AOP_STK for _TransXZ_sloc2_1_0
   07AE 3Er90              1635 	ld	a,#<_g_Sinus
   07B0 DD 86 FB           1636 	add	a,-5(ix)
   07B3 5F                 1637 	ld	e,a
   07B4 3Es03              1638 	ld	a,#>_g_Sinus
   07B6 CE 00              1639 	adc	a,#0x00
   07B8 57                 1640 	ld	d,a
                           1641 ;	genPointerGet
   07B9 6B                 1642 	ld	l,e
   07BA 62                 1643 	ld	h,d
   07BB 5E                 1644 	ld	e,(hl)
   07BC 23                 1645 	inc	hl
   07BD 56                 1646 	ld	d,(hl)
                           1647 ;	genRightShift
                           1648 ;	AOP_STK for _TransXZ_sloc6_1_0
   07BE DD 73 F3           1649 	ld	-13(ix),e
   07C1 DD 72 F4           1650 	ld	-12(ix),d
   07C4 DD CB F4 2E        1651 	sra	-12(ix)
   07C8 DD CB F3 1E        1652 	rr	-13(ix)
   07CC DD CB F4 2E        1653 	sra	-12(ix)
   07D0 DD CB F3 1E        1654 	rr	-13(ix)
   07D4 DD CB F4 2E        1655 	sra	-12(ix)
   07D8 DD CB F3 1E        1656 	rr	-13(ix)
   07DC DD CB F4 2E        1657 	sra	-12(ix)
   07E0 DD CB F3 1E        1658 	rr	-13(ix)
                           1659 ;	genIpush
                           1660 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   07E4 C5                 1661 	push	bc
                           1662 ;	AOP_STK for _TransXZ_sloc6_1_0
   07E5 DD 6E F3           1663 	ld	l,-13(ix)
   07E8 DD 66 F4           1664 	ld	h,-12(ix)
   07EB E5                 1665 	push	hl
                           1666 ;	genIpush
                           1667 ;	AOP_STK for _TransXZ_sloc5_1_0
   07EC DD 6E F5           1668 	ld	l,-11(ix)
   07EF DD 66 F6           1669 	ld	h,-10(ix)
   07F2 E5                 1670 	push	hl
                           1671 ;	genCall
   07F3 CDr00s00           1672 	call	__mulint_rrx_s
   07F6 54                 1673 	ld	d,h
   07F7 5D                 1674 	ld	e,l
   07F8 F1                 1675 	pop	af
   07F9 F1                 1676 	pop	af
   07FA C1                 1677 	pop	bc
                           1678 ;	genMinus
                           1679 ;	AOP_STK for _TransXZ_sloc4_1_0
   07FB DD 7E F7           1680 	ld	a,-9(ix)
   07FE 93                 1681 	sub	a,e
   07FF 5F                 1682 	ld	e,a
   0800 DD 7E F8           1683 	ld	a,-8(ix)
   0803 9A                 1684 	sbc	a,d
   0804 57                 1685 	ld	d,a
                           1686 ;	genAssign (pointer)
                           1687 ;	isBitvar = 0
   0805 69                 1688 	ld	l,c
   0806 60                 1689 	ld	h,b
   0807 73                 1690 	ld	(hl),e
   0808 23                 1691 	inc	hl
   0809 72                 1692 	ld	(hl),d
                           1693 ;test.c:281: ret->y = vec->y + pos->y;
                           1694 ;	genPlus
                           1695 ;	AOP_STK for _TransXZ_sloc4_1_0
                           1696 ;	genPlusIncr
   080A 79                 1697 	ld	a,c
   080B C6 02              1698 	add	a,#0x02
   080D DD 77 F7           1699 	ld	-9(ix),a
   0810 78                 1700 	ld	a,b
   0811 CE 00              1701 	adc	a,#0x00
   0813 DD 77 F8           1702 	ld	-8(ix),a
                           1703 ;	genPlus
                           1704 ;	AOP_STK for _TransXZ_sloc0_1_0
                           1705 ;	genPlusIncr
   0816 DD 5E FE           1706 	ld	e,-2(ix)
   0819 DD 56 FF           1707 	ld	d,-1(ix)
   081C 13                 1708 	inc	de
   081D 13                 1709 	inc	de
                           1710 ;	genPointerGet
                           1711 ;	AOP_STK for _TransXZ_sloc0_1_0
   081E 6B                 1712 	ld	l,e
   081F 62                 1713 	ld	h,d
   0820 7E                 1714 	ld	a,(hl)
   0821 DD 77 FE           1715 	ld	-2(ix),a
   0824 23                 1716 	inc	hl
   0825 7E                 1717 	ld	a,(hl)
   0826 DD 77 FF           1718 	ld	-1(ix),a
                           1719 ;	genAssign
                           1720 ;	AOP_STK for 
   0829 DD 5E 09           1721 	ld	e,9(ix)
   082C DD 56 0A           1722 	ld	d,10(ix)
                           1723 ;	genPlus
                           1724 ;	genPlusIncr
   082F 13                 1725 	inc	de
   0830 13                 1726 	inc	de
                           1727 ;	genPointerGet
   0831 6B                 1728 	ld	l,e
   0832 62                 1729 	ld	h,d
   0833 5E                 1730 	ld	e,(hl)
   0834 23                 1731 	inc	hl
   0835 56                 1732 	ld	d,(hl)
                           1733 ;	genPlus
                           1734 ;	AOP_STK for _TransXZ_sloc0_1_0
   0836 DD 7E FE           1735 	ld	a,-2(ix)
   0839 83                 1736 	add	a,e
   083A 5F                 1737 	ld	e,a
   083B DD 7E FF           1738 	ld	a,-1(ix)
   083E 8A                 1739 	adc	a,d
   083F 57                 1740 	ld	d,a
                           1741 ;	genAssign (pointer)
                           1742 ;	AOP_STK for _TransXZ_sloc4_1_0
                           1743 ;	isBitvar = 0
   0840 DD 6E F7           1744 	ld	l,-9(ix)
   0843 DD 66 F8           1745 	ld	h,-8(ix)
   0846 73                 1746 	ld	(hl),e
   0847 23                 1747 	inc	hl
   0848 72                 1748 	ld	(hl),d
                           1749 ;test.c:282: ret->z = UxU(vec->x, g_Sinus[g_Angle]) + UxU(vec->z, g_Cosinus[g_Angle]);
                           1750 ;	genPlus
                           1751 ;	genPlusIncr
   0849 03                 1752 	inc	bc
   084A 03                 1753 	inc	bc
   084B 03                 1754 	inc	bc
   084C 03                 1755 	inc	bc
                           1756 ;	genIpush
                           1757 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   084D C5                 1758 	push	bc
                           1759 ;	AOP_STK for _TransXZ_sloc6_1_0
   084E DD 6E F3           1760 	ld	l,-13(ix)
   0851 DD 66 F4           1761 	ld	h,-12(ix)
   0854 E5                 1762 	push	hl
                           1763 ;	genIpush
                           1764 ;	AOP_STK for _TransXZ_sloc1_1_0
   0855 DD 6E FC           1765 	ld	l,-4(ix)
   0858 DD 66 FD           1766 	ld	h,-3(ix)
   085B E5                 1767 	push	hl
                           1768 ;	genCall
   085C CDr00s00           1769 	call	__mulint_rrx_s
                           1770 ;	AOP_STK for _TransXZ_sloc6_1_0
   085F DD 74 F4           1771 	ld	-12(ix),h
   0862 DD 75 F3           1772 	ld	-13(ix),l
   0865 F1                 1773 	pop	af
   0866 F1                 1774 	pop	af
   0867 C1                 1775 	pop	bc
                           1776 ;	genIpush
                           1777 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0868 C5                 1778 	push	bc
                           1779 ;	AOP_STK for _TransXZ_sloc3_1_0
   0869 DD 6E F9           1780 	ld	l,-7(ix)
   086C DD 66 FA           1781 	ld	h,-6(ix)
   086F E5                 1782 	push	hl
                           1783 ;	genIpush
                           1784 ;	AOP_STK for _TransXZ_sloc5_1_0
   0870 DD 6E F5           1785 	ld	l,-11(ix)
   0873 DD 66 F6           1786 	ld	h,-10(ix)
   0876 E5                 1787 	push	hl
                           1788 ;	genCall
   0877 CDr00s00           1789 	call	__mulint_rrx_s
   087A 54                 1790 	ld	d,h
   087B 5D                 1791 	ld	e,l
   087C F1                 1792 	pop	af
   087D F1                 1793 	pop	af
   087E C1                 1794 	pop	bc
                           1795 ;	genPlus
                           1796 ;	AOP_STK for _TransXZ_sloc6_1_0
   087F DD 7E F3           1797 	ld	a,-13(ix)
   0882 83                 1798 	add	a,e
   0883 5F                 1799 	ld	e,a
   0884 DD 7E F4           1800 	ld	a,-12(ix)
   0887 8A                 1801 	adc	a,d
   0888 57                 1802 	ld	d,a
                           1803 ;	genAssign (pointer)
                           1804 ;	isBitvar = 0
   0889 69                 1805 	ld	l,c
   088A 60                 1806 	ld	h,b
   088B 73                 1807 	ld	(hl),e
   088C 23                 1808 	inc	hl
   088D 72                 1809 	ld	(hl),d
                           1810 ;	genLabel
                           1811 ;	genEndFunction
   088E DD F9              1812 	ld	sp,ix
   0890 DD E1              1813 	pop	ix
   0892 C9                 1814 	ret
   0893                    1815 _TransXZ_end::
                           1816 ;test.c:288: void TransXZIndex(i8 i)
                           1817 ;	genLabel
                           1818 ;	genFunction
                           1819 ;	---------------------------------
                           1820 ; Function TransXZIndex
                           1821 ; ---------------------------------
   0893                    1822 _TransXZIndex_start::
   0893                    1823 _TransXZIndex:
   0893 DD E5              1824 	push	ix
   0895 DD 21 00 00        1825 	ld	ix,#0
   0899 DD 39              1826 	add	ix,sp
   089B 21 F3 FF           1827 	ld	hl,#-13
   089E 39                 1828 	add	hl,sp
   089F F9                 1829 	ld	sp,hl
                           1830 ;test.c:290: g_World[i].x = UxU(g_Local[i].x, g_Cosinus[g_AngleIndex]) - UxU(g_Local[i].z, g_Sinus[g_AngleIndex]) + g_Position.x;
                           1831 ;	genMult
                           1832 ;	AOP_STK for 
   08A0 DD 7E 04           1833 	ld	a,4(ix)
   08A3 5F                 1834 	ld	e,a
   08A4 87                 1835 	add	a,a
   08A5 83                 1836 	add	a,e
   08A6 87                 1837 	add	a,a
                           1838 ;	genPlus
                           1839 ;	AOP_STK for _TransXZIndex_sloc0_1_0
   08A7 4F                 1840 	ld	c, a
   08A8 C6r4D              1841 	add	a,#<_g_World
   08AA DD 77 FE           1842 	ld	-2(ix),a
   08AD 3Es00              1843 	ld	a,#>_g_World
   08AF CE 00              1844 	adc	a,#0x00
   08B1 DD 77 FF           1845 	ld	-1(ix),a
                           1846 ;	genPlus
   08B4 3Er1D              1847 	ld	a,#<_g_Local
   08B6 81                 1848 	add	a,c
   08B7 47                 1849 	ld	b,a
   08B8 3Es00              1850 	ld	a,#>_g_Local
   08BA CE 00              1851 	adc	a,#0x00
   08BC 5F                 1852 	ld	e,a
                           1853 ;	genPointerGet
   08BD 68                 1854 	ld	l,b
   08BE 63                 1855 	ld	h,e
   08BF 46                 1856 	ld	b,(hl)
   08C0 23                 1857 	inc	hl
   08C1 5E                 1858 	ld	e,(hl)
                           1859 ;	genRightShift
                           1860 ;	AOP_STK for _TransXZIndex_sloc1_1_0
   08C2 DD 70 FC           1861 	ld	-4(ix),b
   08C5 DD 73 FD           1862 	ld	-3(ix),e
   08C8 DD CB FD 2E        1863 	sra	-3(ix)
   08CC DD CB FC 1E        1864 	rr	-4(ix)
   08D0 DD CB FD 2E        1865 	sra	-3(ix)
   08D4 DD CB FC 1E        1866 	rr	-4(ix)
   08D8 DD CB FD 2E        1867 	sra	-3(ix)
   08DC DD CB FC 1E        1868 	rr	-4(ix)
   08E0 DD CB FD 2E        1869 	sra	-3(ix)
   08E4 DD CB FC 1E        1870 	rr	-4(ix)
                           1871 ;	genLeftShift
                           1872 ;	AOP_STK for _TransXZIndex_sloc2_1_0
   08E8 FD 21r1Cs00        1873 	ld	iy,#_g_AngleIndex
   08EC FD 7E 00           1874 	ld	a,0(iy)
   08EF 87                 1875 	add	a,a
                           1876 ;	genPlus
                           1877 ;	AOP_STK for _TransXZIndex_sloc2_1_0
   08F0 DD 77 FB           1878 	ld	-5(ix), a
   08F3 C6r10              1879 	add	a,#<_g_Cosinus
   08F5 47                 1880 	ld	b,a
   08F6 3Es04              1881 	ld	a,#>_g_Cosinus
   08F8 CE 00              1882 	adc	a,#0x00
   08FA 5F                 1883 	ld	e,a
                           1884 ;	genPointerGet
   08FB 68                 1885 	ld	l,b
   08FC 63                 1886 	ld	h,e
   08FD 46                 1887 	ld	b,(hl)
   08FE 23                 1888 	inc	hl
   08FF 5E                 1889 	ld	e,(hl)
                           1890 ;	genRightShift
                           1891 ;	AOP_STK for _TransXZIndex_sloc3_1_0
   0900 DD 70 F9           1892 	ld	-7(ix),b
   0903 DD 73 FA           1893 	ld	-6(ix),e
   0906 DD CB FA 2E        1894 	sra	-6(ix)
   090A DD CB F9 1E        1895 	rr	-7(ix)
   090E DD CB FA 2E        1896 	sra	-6(ix)
   0912 DD CB F9 1E        1897 	rr	-7(ix)
   0916 DD CB FA 2E        1898 	sra	-6(ix)
   091A DD CB F9 1E        1899 	rr	-7(ix)
   091E DD CB FA 2E        1900 	sra	-6(ix)
   0922 DD CB F9 1E        1901 	rr	-7(ix)
                           1902 ;	genIpush
                           1903 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0926 C5                 1904 	push	bc
                           1905 ;	AOP_STK for _TransXZIndex_sloc3_1_0
   0927 DD 6E F9           1906 	ld	l,-7(ix)
   092A DD 66 FA           1907 	ld	h,-6(ix)
   092D E5                 1908 	push	hl
                           1909 ;	genIpush
                           1910 ;	AOP_STK for _TransXZIndex_sloc1_1_0
   092E DD 6E FC           1911 	ld	l,-4(ix)
   0931 DD 66 FD           1912 	ld	h,-3(ix)
   0934 E5                 1913 	push	hl
                           1914 ;	genCall
   0935 CDr00s00           1915 	call	__mulint_rrx_s
                           1916 ;	AOP_STK for _TransXZIndex_sloc1_1_0
   0938 DD 74 FD           1917 	ld	-3(ix),h
   093B DD 75 FC           1918 	ld	-4(ix),l
   093E F1                 1919 	pop	af
   093F F1                 1920 	pop	af
   0940 C1                 1921 	pop	bc
                           1922 ;	genPlus
                           1923 ;	AOP_STK for _TransXZIndex_sloc4_1_0
   0941 3Er1D              1924 	ld	a,#<_g_Local
   0943 81                 1925 	add	a,c
   0944 DD 77 F7           1926 	ld	-9(ix),a
   0947 3Es00              1927 	ld	a,#>_g_Local
   0949 CE 00              1928 	adc	a,#0x00
   094B DD 77 F8           1929 	ld	-8(ix),a
                           1930 ;	genPlus
                           1931 ;	AOP_STK for _TransXZIndex_sloc4_1_0
                           1932 ;	genPlusIncr
   094E DD 7E F7           1933 	ld	a,-9(ix)
   0951 C6 04              1934 	add	a,#0x04
   0953 57                 1935 	ld	d,a
   0954 DD 7E F8           1936 	ld	a,-8(ix)
   0957 CE 00              1937 	adc	a,#0x00
   0959 47                 1938 	ld	b,a
                           1939 ;	genPointerGet
   095A 6A                 1940 	ld	l,d
   095B 60                 1941 	ld	h,b
   095C 56                 1942 	ld	d,(hl)
   095D 23                 1943 	inc	hl
   095E 46                 1944 	ld	b,(hl)
                           1945 ;	genRightShift
                           1946 ;	AOP_STK for _TransXZIndex_sloc5_1_0
   095F DD 72 F5           1947 	ld	-11(ix),d
   0962 DD 70 F6           1948 	ld	-10(ix),b
   0965 DD CB F6 2E        1949 	sra	-10(ix)
   0969 DD CB F5 1E        1950 	rr	-11(ix)
   096D DD CB F6 2E        1951 	sra	-10(ix)
   0971 DD CB F5 1E        1952 	rr	-11(ix)
   0975 DD CB F6 2E        1953 	sra	-10(ix)
   0979 DD CB F5 1E        1954 	rr	-11(ix)
   097D DD CB F6 2E        1955 	sra	-10(ix)
   0981 DD CB F5 1E        1956 	rr	-11(ix)
                           1957 ;	genPlus
                           1958 ;	AOP_STK for _TransXZIndex_sloc2_1_0
   0985 3Er90              1959 	ld	a,#<_g_Sinus
   0987 DD 86 FB           1960 	add	a,-5(ix)
   098A 5F                 1961 	ld	e,a
   098B 3Es03              1962 	ld	a,#>_g_Sinus
   098D CE 00              1963 	adc	a,#0x00
   098F 47                 1964 	ld	b,a
                           1965 ;	genPointerGet
   0990 6B                 1966 	ld	l,e
   0991 60                 1967 	ld	h,b
   0992 5E                 1968 	ld	e,(hl)
   0993 23                 1969 	inc	hl
   0994 46                 1970 	ld	b,(hl)
                           1971 ;	genRightShift
                           1972 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   0995 DD 73 F3           1973 	ld	-13(ix),e
   0998 DD 70 F4           1974 	ld	-12(ix),b
   099B DD CB F4 2E        1975 	sra	-12(ix)
   099F DD CB F3 1E        1976 	rr	-13(ix)
   09A3 DD CB F4 2E        1977 	sra	-12(ix)
   09A7 DD CB F3 1E        1978 	rr	-13(ix)
   09AB DD CB F4 2E        1979 	sra	-12(ix)
   09AF DD CB F3 1E        1980 	rr	-13(ix)
   09B3 DD CB F4 2E        1981 	sra	-12(ix)
   09B7 DD CB F3 1E        1982 	rr	-13(ix)
                           1983 ;	genIpush
                           1984 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09BB C5                 1985 	push	bc
                           1986 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   09BC DD 6E F3           1987 	ld	l,-13(ix)
   09BF DD 66 F4           1988 	ld	h,-12(ix)
   09C2 E5                 1989 	push	hl
                           1990 ;	genIpush
                           1991 ;	AOP_STK for _TransXZIndex_sloc5_1_0
   09C3 DD 6E F5           1992 	ld	l,-11(ix)
   09C6 DD 66 F6           1993 	ld	h,-10(ix)
   09C9 E5                 1994 	push	hl
                           1995 ;	genCall
   09CA CDr00s00           1996 	call	__mulint_rrx_s
   09CD 44                 1997 	ld	b,h
   09CE 55                 1998 	ld	d,l
   09CF F1                 1999 	pop	af
   09D0 F1                 2000 	pop	af
   09D1 78                 2001 	ld	a,b
   09D2 C1                 2002 	pop	bc
   09D3 47                 2003 	ld	b,a
                           2004 ;	genMinus
                           2005 ;	AOP_STK for _TransXZIndex_sloc1_1_0
   09D4 DD 7E FC           2006 	ld	a,-4(ix)
   09D7 92                 2007 	sub	a,d
   09D8 DD 77 FC           2008 	ld	-4(ix),a
   09DB DD 7E FD           2009 	ld	a,-3(ix)
   09DE 98                 2010 	sbc	a,b
   09DF DD 77 FD           2011 	ld	-3(ix),a
                           2012 ;	genPointerGet
   09E2 21r15s00           2013 	ld	hl,#_g_Position
   09E5 5E                 2014 	ld	e,(hl)
   09E6 23                 2015 	inc	hl
   09E7 46                 2016 	ld	b,(hl)
                           2017 ;	genPlus
                           2018 ;	AOP_STK for _TransXZIndex_sloc1_1_0
   09E8 DD 7E FC           2019 	ld	a,-4(ix)
   09EB 83                 2020 	add	a,e
   09EC 5F                 2021 	ld	e,a
   09ED DD 7E FD           2022 	ld	a,-3(ix)
   09F0 88                 2023 	adc	a,b
   09F1 47                 2024 	ld	b,a
                           2025 ;	genAssign (pointer)
                           2026 ;	AOP_STK for _TransXZIndex_sloc0_1_0
                           2027 ;	isBitvar = 0
   09F2 DD 6E FE           2028 	ld	l,-2(ix)
   09F5 DD 66 FF           2029 	ld	h,-1(ix)
   09F8 73                 2030 	ld	(hl),e
   09F9 23                 2031 	inc	hl
   09FA 70                 2032 	ld	(hl),b
                           2033 ;test.c:291: g_World[i].y = g_Local[i].y + g_Position.y;
                           2034 ;	genPlus
   09FB 3Er4D              2035 	ld	a,#<_g_World
   09FD 81                 2036 	add	a,c
   09FE 4F                 2037 	ld	c,a
   09FF 3Es00              2038 	ld	a,#>_g_World
   0A01 CE 00              2039 	adc	a,#0x00
   0A03 47                 2040 	ld	b,a
                           2041 ;	genPlus
                           2042 ;	AOP_STK for _TransXZIndex_sloc1_1_0
                           2043 ;	genPlusIncr
   0A04 79                 2044 	ld	a,c
   0A05 C6 02              2045 	add	a,#0x02
   0A07 DD 77 FC           2046 	ld	-4(ix),a
   0A0A 78                 2047 	ld	a,b
   0A0B CE 00              2048 	adc	a,#0x00
   0A0D DD 77 FD           2049 	ld	-3(ix),a
                           2050 ;	genPlus
                           2051 ;	AOP_STK for _TransXZIndex_sloc4_1_0
                           2052 ;	genPlusIncr
   0A10 DD 5E F7           2053 	ld	e,-9(ix)
   0A13 DD 56 F8           2054 	ld	d,-8(ix)
   0A16 13                 2055 	inc	de
   0A17 13                 2056 	inc	de
                           2057 ;	genPointerGet
                           2058 ;	AOP_STK for _TransXZIndex_sloc0_1_0
   0A18 6B                 2059 	ld	l,e
   0A19 62                 2060 	ld	h,d
   0A1A 7E                 2061 	ld	a,(hl)
   0A1B DD 77 FE           2062 	ld	-2(ix),a
   0A1E 23                 2063 	inc	hl
   0A1F 7E                 2064 	ld	a,(hl)
   0A20 DD 77 FF           2065 	ld	-1(ix),a
                           2066 ;	genPlus
                           2067 ;	genPlusIncr
   0A23 11r17s00           2068 	ld	de,#_g_Position + 2
                           2069 ;	genPointerGet
   0A26 6B                 2070 	ld	l,e
   0A27 62                 2071 	ld	h,d
   0A28 5E                 2072 	ld	e,(hl)
   0A29 23                 2073 	inc	hl
   0A2A 56                 2074 	ld	d,(hl)
                           2075 ;	genPlus
                           2076 ;	AOP_STK for _TransXZIndex_sloc0_1_0
   0A2B DD 7E FE           2077 	ld	a,-2(ix)
   0A2E 83                 2078 	add	a,e
   0A2F 5F                 2079 	ld	e,a
   0A30 DD 7E FF           2080 	ld	a,-1(ix)
   0A33 8A                 2081 	adc	a,d
   0A34 57                 2082 	ld	d,a
                           2083 ;	genAssign (pointer)
                           2084 ;	AOP_STK for _TransXZIndex_sloc1_1_0
                           2085 ;	isBitvar = 0
   0A35 DD 6E FC           2086 	ld	l,-4(ix)
   0A38 DD 66 FD           2087 	ld	h,-3(ix)
   0A3B 73                 2088 	ld	(hl),e
   0A3C 23                 2089 	inc	hl
   0A3D 72                 2090 	ld	(hl),d
                           2091 ;test.c:292: g_World[i].z = UxU(g_Local[i].x, g_Sinus[g_AngleIndex]) + UxU(g_Local[i].z, g_Cosinus[g_AngleIndex]) + g_Position.z;
                           2092 ;	genPlus
                           2093 ;	genPlusIncr
   0A3E 03                 2094 	inc	bc
   0A3F 03                 2095 	inc	bc
   0A40 03                 2096 	inc	bc
   0A41 03                 2097 	inc	bc
                           2098 ;	genPointerGet
                           2099 ;	AOP_STK for _TransXZIndex_sloc4_1_0
   0A42 DD 6E F7           2100 	ld	l,-9(ix)
   0A45 DD 66 F8           2101 	ld	h,-8(ix)
   0A48 5E                 2102 	ld	e,(hl)
   0A49 23                 2103 	inc	hl
   0A4A 56                 2104 	ld	d,(hl)
                           2105 ;	genRightShift
   0A4B CB 2A              2106 	sra	d
   0A4D CB 1B              2107 	rr	e
   0A4F CB 2A              2108 	sra	d
   0A51 CB 1B              2109 	rr	e
   0A53 CB 2A              2110 	sra	d
   0A55 CB 1B              2111 	rr	e
   0A57 CB 2A              2112 	sra	d
   0A59 CB 1B              2113 	rr	e
                           2114 ;	genIpush
                           2115 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A5B C5                 2116 	push	bc
                           2117 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   0A5C DD 6E F3           2118 	ld	l,-13(ix)
   0A5F DD 66 F4           2119 	ld	h,-12(ix)
   0A62 E5                 2120 	push	hl
                           2121 ;	genIpush
   0A63 D5                 2122 	push	de
                           2123 ;	genCall
   0A64 CDr00s00           2124 	call	__mulint_rrx_s
                           2125 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   0A67 DD 74 F4           2126 	ld	-12(ix),h
   0A6A DD 75 F3           2127 	ld	-13(ix),l
   0A6D F1                 2128 	pop	af
   0A6E F1                 2129 	pop	af
   0A6F C1                 2130 	pop	bc
                           2131 ;	genIpush
                           2132 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A70 C5                 2133 	push	bc
                           2134 ;	AOP_STK for _TransXZIndex_sloc3_1_0
   0A71 DD 6E F9           2135 	ld	l,-7(ix)
   0A74 DD 66 FA           2136 	ld	h,-6(ix)
   0A77 E5                 2137 	push	hl
                           2138 ;	genIpush
                           2139 ;	AOP_STK for _TransXZIndex_sloc5_1_0
   0A78 DD 6E F5           2140 	ld	l,-11(ix)
   0A7B DD 66 F6           2141 	ld	h,-10(ix)
   0A7E E5                 2142 	push	hl
                           2143 ;	genCall
   0A7F CDr00s00           2144 	call	__mulint_rrx_s
   0A82 54                 2145 	ld	d,h
   0A83 5D                 2146 	ld	e,l
   0A84 F1                 2147 	pop	af
   0A85 F1                 2148 	pop	af
   0A86 C1                 2149 	pop	bc
                           2150 ;	genPlus
                           2151 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   0A87 DD 7E F3           2152 	ld	a,-13(ix)
   0A8A 83                 2153 	add	a,e
   0A8B DD 77 F3           2154 	ld	-13(ix),a
   0A8E DD 7E F4           2155 	ld	a,-12(ix)
   0A91 8A                 2156 	adc	a,d
   0A92 DD 77 F4           2157 	ld	-12(ix),a
                           2158 ;	genPlus
                           2159 ;	genPlusIncr
   0A95 11r19s00           2160 	ld	de,#_g_Position + 4
                           2161 ;	genPointerGet
   0A98 6B                 2162 	ld	l,e
   0A99 62                 2163 	ld	h,d
   0A9A 5E                 2164 	ld	e,(hl)
   0A9B 23                 2165 	inc	hl
   0A9C 56                 2166 	ld	d,(hl)
                           2167 ;	genPlus
                           2168 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   0A9D DD 7E F3           2169 	ld	a,-13(ix)
   0AA0 83                 2170 	add	a,e
   0AA1 5F                 2171 	ld	e,a
   0AA2 DD 7E F4           2172 	ld	a,-12(ix)
   0AA5 8A                 2173 	adc	a,d
   0AA6 57                 2174 	ld	d,a
                           2175 ;	genAssign (pointer)
                           2176 ;	isBitvar = 0
   0AA7 69                 2177 	ld	l,c
   0AA8 60                 2178 	ld	h,b
   0AA9 73                 2179 	ld	(hl),e
   0AAA 23                 2180 	inc	hl
   0AAB 72                 2181 	ld	(hl),d
                           2182 ;	genLabel
                           2183 ;	genEndFunction
   0AAC DD F9              2184 	ld	sp,ix
   0AAE DD E1              2185 	pop	ix
   0AB0 C9                 2186 	ret
   0AB1                    2187 _TransXZIndex_end::
                           2188 ;test.c:298: void Project(ShortVec* ret, const ShortVec* vec, const ShortVec* cam)
                           2189 ;	genLabel
                           2190 ;	genFunction
                           2191 ;	---------------------------------
                           2192 ; Function Project
                           2193 ; ---------------------------------
   0AB1                    2194 _Project_start::
   0AB1                    2195 _Project:
   0AB1 DD E5              2196 	push	ix
   0AB3 DD 21 00 00        2197 	ld	ix,#0
   0AB7 DD 39              2198 	add	ix,sp
   0AB9 21 F8 FF           2199 	ld	hl,#-8
   0ABC 39                 2200 	add	hl,sp
   0ABD F9                 2201 	ld	sp,hl
                           2202 ;test.c:301: ret->z = ((vec->z - cam->z) >> 5);
                           2203 ;	genAssign
                           2204 ;	AOP_STK for 
   0ABE DD 4E 04           2205 	ld	c,4(ix)
   0AC1 DD 46 05           2206 	ld	b,5(ix)
                           2207 ;	genPlus
                           2208 ;	AOP_STK for _Project_sloc0_1_0
                           2209 ;	genPlusIncr
   0AC4 79                 2210 	ld	a,c
   0AC5 C6 04              2211 	add	a,#0x04
   0AC7 DD 77 FE           2212 	ld	-2(ix),a
   0ACA 78                 2213 	ld	a,b
   0ACB CE 00              2214 	adc	a,#0x00
   0ACD DD 77 FF           2215 	ld	-1(ix),a
                           2216 ;	genAssign
                           2217 ;	AOP_STK for 
                           2218 ;	AOP_STK for _Project_sloc1_1_0
   0AD0 DD 7E 06           2219 	ld	a,6(ix)
   0AD3 DD 77 FC           2220 	ld	-4(ix),a
   0AD6 DD 7E 07           2221 	ld	a,7(ix)
   0AD9 DD 77 FD           2222 	ld	-3(ix),a
                           2223 ;	genPlus
                           2224 ;	AOP_STK for _Project_sloc1_1_0
                           2225 ;	genPlusIncr
   0ADC DD 7E FC           2226 	ld	a,-4(ix)
   0ADF C6 04              2227 	add	a,#0x04
   0AE1 5F                 2228 	ld	e,a
   0AE2 DD 7E FD           2229 	ld	a,-3(ix)
   0AE5 CE 00              2230 	adc	a,#0x00
   0AE7 57                 2231 	ld	d,a
                           2232 ;	genPointerGet
                           2233 ;	AOP_STK for _Project_sloc2_1_0
   0AE8 6B                 2234 	ld	l,e
   0AE9 62                 2235 	ld	h,d
   0AEA 7E                 2236 	ld	a,(hl)
   0AEB DD 77 FA           2237 	ld	-6(ix),a
   0AEE 23                 2238 	inc	hl
   0AEF 7E                 2239 	ld	a,(hl)
   0AF0 DD 77 FB           2240 	ld	-5(ix),a
                           2241 ;	genAssign
                           2242 ;	AOP_STK for 
                           2243 ;	AOP_STK for _Project_sloc3_1_0
   0AF3 DD 7E 08           2244 	ld	a,8(ix)
   0AF6 DD 77 F8           2245 	ld	-8(ix),a
   0AF9 DD 7E 09           2246 	ld	a,9(ix)
   0AFC DD 77 F9           2247 	ld	-7(ix),a
                           2248 ;	genPlus
                           2249 ;	AOP_STK for _Project_sloc3_1_0
                           2250 ;	genPlusIncr
   0AFF DD 7E F8           2251 	ld	a,-8(ix)
   0B02 C6 04              2252 	add	a,#0x04
   0B04 5F                 2253 	ld	e,a
   0B05 DD 7E F9           2254 	ld	a,-7(ix)
   0B08 CE 00              2255 	adc	a,#0x00
   0B0A 57                 2256 	ld	d,a
                           2257 ;	genPointerGet
   0B0B 6B                 2258 	ld	l,e
   0B0C 62                 2259 	ld	h,d
   0B0D 5E                 2260 	ld	e,(hl)
   0B0E 23                 2261 	inc	hl
   0B0F 56                 2262 	ld	d,(hl)
                           2263 ;	genMinus
                           2264 ;	AOP_STK for _Project_sloc2_1_0
   0B10 DD 7E FA           2265 	ld	a,-6(ix)
   0B13 93                 2266 	sub	a,e
   0B14 5F                 2267 	ld	e,a
   0B15 DD 7E FB           2268 	ld	a,-5(ix)
   0B18 9A                 2269 	sbc	a,d
   0B19 57                 2270 	ld	d,a
                           2271 ;	genRightShift
                           2272 ;	AOP_STK for _Project_sloc2_1_0
   0B1A DD 73 FA           2273 	ld	-6(ix),e
   0B1D DD 72 FB           2274 	ld	-5(ix),d
   0B20 DD CB FB 2E        2275 	sra	-5(ix)
   0B24 DD CB FA 1E        2276 	rr	-6(ix)
   0B28 DD CB FB 2E        2277 	sra	-5(ix)
   0B2C DD CB FA 1E        2278 	rr	-6(ix)
   0B30 DD CB FB 2E        2279 	sra	-5(ix)
   0B34 DD CB FA 1E        2280 	rr	-6(ix)
   0B38 DD CB FB 2E        2281 	sra	-5(ix)
   0B3C DD CB FA 1E        2282 	rr	-6(ix)
   0B40 DD CB FB 2E        2283 	sra	-5(ix)
   0B44 DD CB FA 1E        2284 	rr	-6(ix)
                           2285 ;	genAssign (pointer)
                           2286 ;	AOP_STK for _Project_sloc0_1_0
                           2287 ;	AOP_STK for _Project_sloc2_1_0
                           2288 ;	isBitvar = 0
   0B48 DD 6E FE           2289 	ld	l,-2(ix)
   0B4B DD 66 FF           2290 	ld	h,-1(ix)
   0B4E DD 7E FA           2291 	ld	a,-6(ix)
   0B51 77                 2292 	ld	(hl),a
   0B52 23                 2293 	inc	hl
   0B53 DD 7E FB           2294 	ld	a,-5(ix)
   0B56 77                 2295 	ld	(hl),a
                           2296 ;test.c:302: ret->x = 128 + (vec->x - cam->x) / ret->z;
                           2297 ;	genPointerGet
                           2298 ;	AOP_STK for _Project_sloc1_1_0
                           2299 ;	AOP_STK for _Project_sloc0_1_0
   0B57 DD 6E FC           2300 	ld	l,-4(ix)
   0B5A DD 66 FD           2301 	ld	h,-3(ix)
   0B5D 7E                 2302 	ld	a,(hl)
   0B5E DD 77 FE           2303 	ld	-2(ix),a
   0B61 23                 2304 	inc	hl
   0B62 7E                 2305 	ld	a,(hl)
   0B63 DD 77 FF           2306 	ld	-1(ix),a
                           2307 ;	genPointerGet
                           2308 ;	AOP_STK for _Project_sloc3_1_0
   0B66 DD 6E F8           2309 	ld	l,-8(ix)
   0B69 DD 66 F9           2310 	ld	h,-7(ix)
   0B6C 5E                 2311 	ld	e,(hl)
   0B6D 23                 2312 	inc	hl
   0B6E 56                 2313 	ld	d,(hl)
                           2314 ;	genMinus
                           2315 ;	AOP_STK for _Project_sloc0_1_0
   0B6F DD 7E FE           2316 	ld	a,-2(ix)
   0B72 93                 2317 	sub	a,e
   0B73 5F                 2318 	ld	e,a
   0B74 DD 7E FF           2319 	ld	a,-1(ix)
   0B77 9A                 2320 	sbc	a,d
   0B78 57                 2321 	ld	d,a
                           2322 ;	genIpush
                           2323 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B79 C5                 2324 	push	bc
                           2325 ;	AOP_STK for _Project_sloc2_1_0
   0B7A DD 6E FA           2326 	ld	l,-6(ix)
   0B7D DD 66 FB           2327 	ld	h,-5(ix)
   0B80 E5                 2328 	push	hl
                           2329 ;	genIpush
   0B81 D5                 2330 	push	de
                           2331 ;	genCall
   0B82 CDr00s00           2332 	call	__divsint_rrx_s
   0B85 54                 2333 	ld	d,h
   0B86 5D                 2334 	ld	e,l
   0B87 F1                 2335 	pop	af
   0B88 F1                 2336 	pop	af
   0B89 C1                 2337 	pop	bc
                           2338 ;	genPlus
                           2339 ;	genPlusIncr
   0B8A 7B                 2340 	ld	a,e
   0B8B C6 80              2341 	add	a,#0x80
   0B8D 5F                 2342 	ld	e,a
   0B8E 7A                 2343 	ld	a,d
   0B8F CE 00              2344 	adc	a,#0x00
   0B91 57                 2345 	ld	d,a
                           2346 ;	genAssign (pointer)
                           2347 ;	isBitvar = 0
   0B92 69                 2348 	ld	l,c
   0B93 60                 2349 	ld	h,b
   0B94 73                 2350 	ld	(hl),e
   0B95 23                 2351 	inc	hl
   0B96 72                 2352 	ld	(hl),d
                           2353 ;test.c:303: ret->y = 106 + (vec->y - cam->y) / ret->z;
                           2354 ;	genPlus
                           2355 ;	genPlusIncr
   0B97 03                 2356 	inc	bc
   0B98 03                 2357 	inc	bc
                           2358 ;	genPlus
                           2359 ;	AOP_STK for _Project_sloc1_1_0
                           2360 ;	genPlusIncr
   0B99 DD 5E FC           2361 	ld	e,-4(ix)
   0B9C DD 56 FD           2362 	ld	d,-3(ix)
   0B9F 13                 2363 	inc	de
   0BA0 13                 2364 	inc	de
                           2365 ;	genPointerGet
                           2366 ;	AOP_STK for _Project_sloc1_1_0
   0BA1 6B                 2367 	ld	l,e
   0BA2 62                 2368 	ld	h,d
   0BA3 7E                 2369 	ld	a,(hl)
   0BA4 DD 77 FC           2370 	ld	-4(ix),a
   0BA7 23                 2371 	inc	hl
   0BA8 7E                 2372 	ld	a,(hl)
   0BA9 DD 77 FD           2373 	ld	-3(ix),a
                           2374 ;	genPlus
                           2375 ;	AOP_STK for _Project_sloc3_1_0
                           2376 ;	genPlusIncr
   0BAC DD 5E F8           2377 	ld	e,-8(ix)
   0BAF DD 56 F9           2378 	ld	d,-7(ix)
   0BB2 13                 2379 	inc	de
   0BB3 13                 2380 	inc	de
                           2381 ;	genPointerGet
   0BB4 6B                 2382 	ld	l,e
   0BB5 62                 2383 	ld	h,d
   0BB6 5E                 2384 	ld	e,(hl)
   0BB7 23                 2385 	inc	hl
   0BB8 56                 2386 	ld	d,(hl)
                           2387 ;	genMinus
                           2388 ;	AOP_STK for _Project_sloc1_1_0
   0BB9 DD 7E FC           2389 	ld	a,-4(ix)
   0BBC 93                 2390 	sub	a,e
   0BBD 5F                 2391 	ld	e,a
   0BBE DD 7E FD           2392 	ld	a,-3(ix)
   0BC1 9A                 2393 	sbc	a,d
   0BC2 57                 2394 	ld	d,a
                           2395 ;	genIpush
                           2396 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BC3 C5                 2397 	push	bc
                           2398 ;	AOP_STK for _Project_sloc2_1_0
   0BC4 DD 6E FA           2399 	ld	l,-6(ix)
   0BC7 DD 66 FB           2400 	ld	h,-5(ix)
   0BCA E5                 2401 	push	hl
                           2402 ;	genIpush
   0BCB D5                 2403 	push	de
                           2404 ;	genCall
   0BCC CDr00s00           2405 	call	__divsint_rrx_s
   0BCF 54                 2406 	ld	d,h
   0BD0 5D                 2407 	ld	e,l
   0BD1 F1                 2408 	pop	af
   0BD2 F1                 2409 	pop	af
   0BD3 C1                 2410 	pop	bc
                           2411 ;	genPlus
                           2412 ;	genPlusIncr
   0BD4 7B                 2413 	ld	a,e
   0BD5 C6 6A              2414 	add	a,#0x6A
   0BD7 5F                 2415 	ld	e,a
   0BD8 7A                 2416 	ld	a,d
   0BD9 CE 00              2417 	adc	a,#0x00
   0BDB 57                 2418 	ld	d,a
                           2419 ;	genAssign (pointer)
                           2420 ;	isBitvar = 0
   0BDC 69                 2421 	ld	l,c
   0BDD 60                 2422 	ld	h,b
   0BDE 73                 2423 	ld	(hl),e
   0BDF 23                 2424 	inc	hl
   0BE0 72                 2425 	ld	(hl),d
                           2426 ;	genLabel
                           2427 ;	genEndFunction
   0BE1 DD F9              2428 	ld	sp,ix
   0BE3 DD E1              2429 	pop	ix
   0BE5 C9                 2430 	ret
   0BE6                    2431 _Project_end::
                           2432 ;test.c:322: void Update()
                           2433 ;	genLabel
                           2434 ;	genFunction
                           2435 ;	---------------------------------
                           2436 ; Function Update
                           2437 ; ---------------------------------
   0BE6                    2438 _Update_start::
   0BE6                    2439 _Update:
   0BE6 DD E5              2440 	push	ix
   0BE8 DD 21 00 00        2441 	ld	ix,#0
   0BEC DD 39              2442 	add	ix,sp
   0BEE 21 FD FF           2443 	ld	hl,#-3
   0BF1 39                 2444 	add	hl,sp
   0BF2 F9                 2445 	ld	sp,hl
                           2446 ;test.c:328: DRAW_LINE(g_Screen[0].x, g_Screen[0].y, g_Screen[1].x, g_Screen[1].y, 0);
                           2447 ;	genPointerGet
   0BF3 21r7Ds00           2448 	ld	hl,#_g_Screen
   0BF6 7E                 2449 	ld	a,(hl)
   0BF7 FD 21r00s00        2450 	ld	iy,#_SX
   0BFB FD 77 00           2451 	ld	0(iy),a
   0BFE 23                 2452 	inc	hl
   0BFF 7E                 2453 	ld	a,(hl)
   0C00 FD 77 01           2454 	ld	1(iy),a
                           2455 ;	genPlus
                           2456 ;	genPlusIncr
   0C03 01r7Fs00           2457 	ld	bc,#_g_Screen + 2
                           2458 ;	genPointerGet
   0C06 69                 2459 	ld	l,c
   0C07 60                 2460 	ld	h,b
   0C08 7E                 2461 	ld	a,(hl)
   0C09 FD 21r02s00        2462 	ld	iy,#_SY
   0C0D FD 77 00           2463 	ld	0(iy),a
   0C10 23                 2464 	inc	hl
   0C11 7E                 2465 	ld	a,(hl)
   0C12 FD 77 01           2466 	ld	1(iy),a
                           2467 ;	genPlus
                           2468 ;	genPlusIncr
   0C15 01r83s00           2469 	ld	bc,#_g_Screen + 6
                           2470 ;	genPointerGet
   0C18 69                 2471 	ld	l,c
   0C19 60                 2472 	ld	h,b
   0C1A 7E                 2473 	ld	a,(hl)
   0C1B FD 21r04s00        2474 	ld	iy,#_DX
   0C1F FD 77 00           2475 	ld	0(iy),a
   0C22 23                 2476 	inc	hl
   0C23 7E                 2477 	ld	a,(hl)
   0C24 FD 77 01           2478 	ld	1(iy),a
                           2479 ;	genPlus
                           2480 ;	genPlusIncr
                           2481 ;	genPlus
                           2482 ;	genPlusIncr
   0C27 01r85s00           2483 	ld	bc,#_g_Screen + 6 + 2
                           2484 ;	genPointerGet
   0C2A 69                 2485 	ld	l,c
   0C2B 60                 2486 	ld	h,b
   0C2C 7E                 2487 	ld	a,(hl)
   0C2D FD 21r06s00        2488 	ld	iy,#_DY
   0C31 FD 77 00           2489 	ld	0(iy),a
   0C34 23                 2490 	inc	hl
   0C35 7E                 2491 	ld	a,(hl)
   0C36 FD 77 01           2492 	ld	1(iy),a
                           2493 ;	genAssign
   0C39 FD 21r0Cs00        2494 	ld	iy,#_CLR
   0C3D FD 36 00 00        2495 	ld	0(iy),#0x00
                           2496 ;	genCall
                           2497 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C41 CDr57s15           2498 	call	_DrawLineSimple
                           2499 ;test.c:329: DRAW_LINE(g_Screen[1].x, g_Screen[1].y, g_Screen[2].x, g_Screen[2].y, 0);
                           2500 ;	genPlus
                           2501 ;	genPlusIncr
   0C44 01r83s00           2502 	ld	bc,#_g_Screen + 6
                           2503 ;	genPointerGet
   0C47 69                 2504 	ld	l,c
   0C48 60                 2505 	ld	h,b
   0C49 7E                 2506 	ld	a,(hl)
   0C4A FD 21r00s00        2507 	ld	iy,#_SX
   0C4E FD 77 00           2508 	ld	0(iy),a
   0C51 23                 2509 	inc	hl
   0C52 7E                 2510 	ld	a,(hl)
   0C53 FD 77 01           2511 	ld	1(iy),a
                           2512 ;	genPlus
                           2513 ;	genPlusIncr
                           2514 ;	genPlus
                           2515 ;	genPlusIncr
   0C56 01r85s00           2516 	ld	bc,#_g_Screen + 6 + 2
                           2517 ;	genPointerGet
   0C59 69                 2518 	ld	l,c
   0C5A 60                 2519 	ld	h,b
   0C5B 7E                 2520 	ld	a,(hl)
   0C5C FD 21r02s00        2521 	ld	iy,#_SY
   0C60 FD 77 00           2522 	ld	0(iy),a
   0C63 23                 2523 	inc	hl
   0C64 7E                 2524 	ld	a,(hl)
   0C65 FD 77 01           2525 	ld	1(iy),a
                           2526 ;	genPlus
                           2527 ;	genPlusIncr
   0C68 01r89s00           2528 	ld	bc,#_g_Screen + 12
                           2529 ;	genPointerGet
   0C6B 69                 2530 	ld	l,c
   0C6C 60                 2531 	ld	h,b
   0C6D 7E                 2532 	ld	a,(hl)
   0C6E FD 21r04s00        2533 	ld	iy,#_DX
   0C72 FD 77 00           2534 	ld	0(iy),a
   0C75 23                 2535 	inc	hl
   0C76 7E                 2536 	ld	a,(hl)
   0C77 FD 77 01           2537 	ld	1(iy),a
                           2538 ;	genPlus
                           2539 ;	genPlusIncr
                           2540 ;	genPlus
                           2541 ;	genPlusIncr
   0C7A 01r8Bs00           2542 	ld	bc,#_g_Screen + 12 + 2
                           2543 ;	genPointerGet
   0C7D 69                 2544 	ld	l,c
   0C7E 60                 2545 	ld	h,b
   0C7F 7E                 2546 	ld	a,(hl)
   0C80 FD 21r06s00        2547 	ld	iy,#_DY
   0C84 FD 77 00           2548 	ld	0(iy),a
   0C87 23                 2549 	inc	hl
   0C88 7E                 2550 	ld	a,(hl)
   0C89 FD 77 01           2551 	ld	1(iy),a
                           2552 ;	genAssign
   0C8C FD 21r0Cs00        2553 	ld	iy,#_CLR
   0C90 FD 36 00 00        2554 	ld	0(iy),#0x00
                           2555 ;	genCall
                           2556 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C94 CDr57s15           2557 	call	_DrawLineSimple
                           2558 ;test.c:330: DRAW_LINE(g_Screen[2].x, g_Screen[2].y, g_Screen[3].x, g_Screen[3].y, 0);
                           2559 ;	genPlus
                           2560 ;	genPlusIncr
   0C97 01r89s00           2561 	ld	bc,#_g_Screen + 12
                           2562 ;	genPointerGet
   0C9A 69                 2563 	ld	l,c
   0C9B 60                 2564 	ld	h,b
   0C9C 7E                 2565 	ld	a,(hl)
   0C9D FD 21r00s00        2566 	ld	iy,#_SX
   0CA1 FD 77 00           2567 	ld	0(iy),a
   0CA4 23                 2568 	inc	hl
   0CA5 7E                 2569 	ld	a,(hl)
   0CA6 FD 77 01           2570 	ld	1(iy),a
                           2571 ;	genPlus
                           2572 ;	genPlusIncr
                           2573 ;	genPlus
                           2574 ;	genPlusIncr
   0CA9 01r8Bs00           2575 	ld	bc,#_g_Screen + 12 + 2
                           2576 ;	genPointerGet
   0CAC 69                 2577 	ld	l,c
   0CAD 60                 2578 	ld	h,b
   0CAE 7E                 2579 	ld	a,(hl)
   0CAF FD 21r02s00        2580 	ld	iy,#_SY
   0CB3 FD 77 00           2581 	ld	0(iy),a
   0CB6 23                 2582 	inc	hl
   0CB7 7E                 2583 	ld	a,(hl)
   0CB8 FD 77 01           2584 	ld	1(iy),a
                           2585 ;	genPlus
                           2586 ;	genPlusIncr
   0CBB 01r8Fs00           2587 	ld	bc,#_g_Screen + 18
                           2588 ;	genPointerGet
   0CBE 69                 2589 	ld	l,c
   0CBF 60                 2590 	ld	h,b
   0CC0 7E                 2591 	ld	a,(hl)
   0CC1 FD 21r04s00        2592 	ld	iy,#_DX
   0CC5 FD 77 00           2593 	ld	0(iy),a
   0CC8 23                 2594 	inc	hl
   0CC9 7E                 2595 	ld	a,(hl)
   0CCA FD 77 01           2596 	ld	1(iy),a
                           2597 ;	genPlus
                           2598 ;	genPlusIncr
                           2599 ;	genPlus
                           2600 ;	genPlusIncr
   0CCD 01r91s00           2601 	ld	bc,#_g_Screen + 18 + 2
                           2602 ;	genPointerGet
   0CD0 69                 2603 	ld	l,c
   0CD1 60                 2604 	ld	h,b
   0CD2 7E                 2605 	ld	a,(hl)
   0CD3 FD 21r06s00        2606 	ld	iy,#_DY
   0CD7 FD 77 00           2607 	ld	0(iy),a
   0CDA 23                 2608 	inc	hl
   0CDB 7E                 2609 	ld	a,(hl)
   0CDC FD 77 01           2610 	ld	1(iy),a
                           2611 ;	genAssign
   0CDF FD 21r0Cs00        2612 	ld	iy,#_CLR
   0CE3 FD 36 00 00        2613 	ld	0(iy),#0x00
                           2614 ;	genCall
                           2615 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CE7 CDr57s15           2616 	call	_DrawLineSimple
                           2617 ;test.c:331: DRAW_LINE(g_Screen[3].x, g_Screen[3].y, g_Screen[0].x, g_Screen[0].y, 0);
                           2618 ;	genPlus
                           2619 ;	genPlusIncr
   0CEA 01r8Fs00           2620 	ld	bc,#_g_Screen + 18
                           2621 ;	genPointerGet
   0CED 69                 2622 	ld	l,c
   0CEE 60                 2623 	ld	h,b
   0CEF 7E                 2624 	ld	a,(hl)
   0CF0 FD 21r00s00        2625 	ld	iy,#_SX
   0CF4 FD 77 00           2626 	ld	0(iy),a
   0CF7 23                 2627 	inc	hl
   0CF8 7E                 2628 	ld	a,(hl)
   0CF9 FD 77 01           2629 	ld	1(iy),a
                           2630 ;	genPlus
                           2631 ;	genPlusIncr
                           2632 ;	genPlus
                           2633 ;	genPlusIncr
   0CFC 01r91s00           2634 	ld	bc,#_g_Screen + 18 + 2
                           2635 ;	genPointerGet
   0CFF 69                 2636 	ld	l,c
   0D00 60                 2637 	ld	h,b
   0D01 7E                 2638 	ld	a,(hl)
   0D02 FD 21r02s00        2639 	ld	iy,#_SY
   0D06 FD 77 00           2640 	ld	0(iy),a
   0D09 23                 2641 	inc	hl
   0D0A 7E                 2642 	ld	a,(hl)
   0D0B FD 77 01           2643 	ld	1(iy),a
                           2644 ;	genPointerGet
   0D0E 21r7Ds00           2645 	ld	hl,#_g_Screen
   0D11 7E                 2646 	ld	a,(hl)
   0D12 FD 21r04s00        2647 	ld	iy,#_DX
   0D16 FD 77 00           2648 	ld	0(iy),a
   0D19 23                 2649 	inc	hl
   0D1A 7E                 2650 	ld	a,(hl)
   0D1B FD 77 01           2651 	ld	1(iy),a
                           2652 ;	genPlus
                           2653 ;	genPlusIncr
   0D1E 01r7Fs00           2654 	ld	bc,#_g_Screen + 2
                           2655 ;	genPointerGet
   0D21 69                 2656 	ld	l,c
   0D22 60                 2657 	ld	h,b
   0D23 7E                 2658 	ld	a,(hl)
   0D24 FD 21r06s00        2659 	ld	iy,#_DY
   0D28 FD 77 00           2660 	ld	0(iy),a
   0D2B 23                 2661 	inc	hl
   0D2C 7E                 2662 	ld	a,(hl)
   0D2D FD 77 01           2663 	ld	1(iy),a
                           2664 ;	genAssign
   0D30 FD 21r0Cs00        2665 	ld	iy,#_CLR
   0D34 FD 36 00 00        2666 	ld	0(iy),#0x00
                           2667 ;	genCall
                           2668 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D38 CDr57s15           2669 	call	_DrawLineSimple
                           2670 ;test.c:333: DRAW_LINE(g_Screen[4].x, g_Screen[4].y, g_Screen[5].x, g_Screen[5].y, 0);
                           2671 ;	genPlus
                           2672 ;	genPlusIncr
   0D3B 01r95s00           2673 	ld	bc,#_g_Screen + 24
                           2674 ;	genPointerGet
   0D3E 69                 2675 	ld	l,c
   0D3F 60                 2676 	ld	h,b
   0D40 7E                 2677 	ld	a,(hl)
   0D41 FD 21r00s00        2678 	ld	iy,#_SX
   0D45 FD 77 00           2679 	ld	0(iy),a
   0D48 23                 2680 	inc	hl
   0D49 7E                 2681 	ld	a,(hl)
   0D4A FD 77 01           2682 	ld	1(iy),a
                           2683 ;	genPlus
                           2684 ;	genPlusIncr
                           2685 ;	genPlus
                           2686 ;	genPlusIncr
   0D4D 01r97s00           2687 	ld	bc,#_g_Screen + 24 + 2
                           2688 ;	genPointerGet
   0D50 69                 2689 	ld	l,c
   0D51 60                 2690 	ld	h,b
   0D52 7E                 2691 	ld	a,(hl)
   0D53 FD 21r02s00        2692 	ld	iy,#_SY
   0D57 FD 77 00           2693 	ld	0(iy),a
   0D5A 23                 2694 	inc	hl
   0D5B 7E                 2695 	ld	a,(hl)
   0D5C FD 77 01           2696 	ld	1(iy),a
                           2697 ;	genPlus
                           2698 ;	genPlusIncr
   0D5F 01r9Bs00           2699 	ld	bc,#_g_Screen + 30
                           2700 ;	genPointerGet
   0D62 69                 2701 	ld	l,c
   0D63 60                 2702 	ld	h,b
   0D64 7E                 2703 	ld	a,(hl)
   0D65 FD 21r04s00        2704 	ld	iy,#_DX
   0D69 FD 77 00           2705 	ld	0(iy),a
   0D6C 23                 2706 	inc	hl
   0D6D 7E                 2707 	ld	a,(hl)
   0D6E FD 77 01           2708 	ld	1(iy),a
                           2709 ;	genPlus
                           2710 ;	genPlusIncr
                           2711 ;	genPlus
                           2712 ;	genPlusIncr
   0D71 01r9Ds00           2713 	ld	bc,#_g_Screen + 30 + 2
                           2714 ;	genPointerGet
   0D74 69                 2715 	ld	l,c
   0D75 60                 2716 	ld	h,b
   0D76 7E                 2717 	ld	a,(hl)
   0D77 FD 21r06s00        2718 	ld	iy,#_DY
   0D7B FD 77 00           2719 	ld	0(iy),a
   0D7E 23                 2720 	inc	hl
   0D7F 7E                 2721 	ld	a,(hl)
   0D80 FD 77 01           2722 	ld	1(iy),a
                           2723 ;	genAssign
   0D83 FD 21r0Cs00        2724 	ld	iy,#_CLR
   0D87 FD 36 00 00        2725 	ld	0(iy),#0x00
                           2726 ;	genCall
                           2727 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D8B CDr57s15           2728 	call	_DrawLineSimple
                           2729 ;test.c:334: DRAW_LINE(g_Screen[5].x, g_Screen[5].y, g_Screen[6].x, g_Screen[6].y, 0);
                           2730 ;	genPlus
                           2731 ;	genPlusIncr
   0D8E 01r9Bs00           2732 	ld	bc,#_g_Screen + 30
                           2733 ;	genPointerGet
   0D91 69                 2734 	ld	l,c
   0D92 60                 2735 	ld	h,b
   0D93 7E                 2736 	ld	a,(hl)
   0D94 FD 21r00s00        2737 	ld	iy,#_SX
   0D98 FD 77 00           2738 	ld	0(iy),a
   0D9B 23                 2739 	inc	hl
   0D9C 7E                 2740 	ld	a,(hl)
   0D9D FD 77 01           2741 	ld	1(iy),a
                           2742 ;	genPlus
                           2743 ;	genPlusIncr
                           2744 ;	genPlus
                           2745 ;	genPlusIncr
   0DA0 01r9Ds00           2746 	ld	bc,#_g_Screen + 30 + 2
                           2747 ;	genPointerGet
   0DA3 69                 2748 	ld	l,c
   0DA4 60                 2749 	ld	h,b
   0DA5 7E                 2750 	ld	a,(hl)
   0DA6 FD 21r02s00        2751 	ld	iy,#_SY
   0DAA FD 77 00           2752 	ld	0(iy),a
   0DAD 23                 2753 	inc	hl
   0DAE 7E                 2754 	ld	a,(hl)
   0DAF FD 77 01           2755 	ld	1(iy),a
                           2756 ;	genPlus
                           2757 ;	genPlusIncr
   0DB2 01rA1s00           2758 	ld	bc,#_g_Screen + 36
                           2759 ;	genPointerGet
   0DB5 69                 2760 	ld	l,c
   0DB6 60                 2761 	ld	h,b
   0DB7 7E                 2762 	ld	a,(hl)
   0DB8 FD 21r04s00        2763 	ld	iy,#_DX
   0DBC FD 77 00           2764 	ld	0(iy),a
   0DBF 23                 2765 	inc	hl
   0DC0 7E                 2766 	ld	a,(hl)
   0DC1 FD 77 01           2767 	ld	1(iy),a
                           2768 ;	genPlus
                           2769 ;	genPlusIncr
                           2770 ;	genPlus
                           2771 ;	genPlusIncr
   0DC4 01rA3s00           2772 	ld	bc,#_g_Screen + 36 + 2
                           2773 ;	genPointerGet
   0DC7 69                 2774 	ld	l,c
   0DC8 60                 2775 	ld	h,b
   0DC9 7E                 2776 	ld	a,(hl)
   0DCA FD 21r06s00        2777 	ld	iy,#_DY
   0DCE FD 77 00           2778 	ld	0(iy),a
   0DD1 23                 2779 	inc	hl
   0DD2 7E                 2780 	ld	a,(hl)
   0DD3 FD 77 01           2781 	ld	1(iy),a
                           2782 ;	genAssign
   0DD6 FD 21r0Cs00        2783 	ld	iy,#_CLR
   0DDA FD 36 00 00        2784 	ld	0(iy),#0x00
                           2785 ;	genCall
                           2786 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DDE CDr57s15           2787 	call	_DrawLineSimple
                           2788 ;test.c:335: DRAW_LINE(g_Screen[6].x, g_Screen[6].y, g_Screen[7].x, g_Screen[7].y, 0);
                           2789 ;	genPlus
                           2790 ;	genPlusIncr
   0DE1 01rA1s00           2791 	ld	bc,#_g_Screen + 36
                           2792 ;	genPointerGet
   0DE4 69                 2793 	ld	l,c
   0DE5 60                 2794 	ld	h,b
   0DE6 7E                 2795 	ld	a,(hl)
   0DE7 FD 21r00s00        2796 	ld	iy,#_SX
   0DEB FD 77 00           2797 	ld	0(iy),a
   0DEE 23                 2798 	inc	hl
   0DEF 7E                 2799 	ld	a,(hl)
   0DF0 FD 77 01           2800 	ld	1(iy),a
                           2801 ;	genPlus
                           2802 ;	genPlusIncr
                           2803 ;	genPlus
                           2804 ;	genPlusIncr
   0DF3 01rA3s00           2805 	ld	bc,#_g_Screen + 36 + 2
                           2806 ;	genPointerGet
   0DF6 69                 2807 	ld	l,c
   0DF7 60                 2808 	ld	h,b
   0DF8 7E                 2809 	ld	a,(hl)
   0DF9 FD 21r02s00        2810 	ld	iy,#_SY
   0DFD FD 77 00           2811 	ld	0(iy),a
   0E00 23                 2812 	inc	hl
   0E01 7E                 2813 	ld	a,(hl)
   0E02 FD 77 01           2814 	ld	1(iy),a
                           2815 ;	genPlus
                           2816 ;	genPlusIncr
   0E05 01rA7s00           2817 	ld	bc,#_g_Screen + 42
                           2818 ;	genPointerGet
   0E08 69                 2819 	ld	l,c
   0E09 60                 2820 	ld	h,b
   0E0A 7E                 2821 	ld	a,(hl)
   0E0B FD 21r04s00        2822 	ld	iy,#_DX
   0E0F FD 77 00           2823 	ld	0(iy),a
   0E12 23                 2824 	inc	hl
   0E13 7E                 2825 	ld	a,(hl)
   0E14 FD 77 01           2826 	ld	1(iy),a
                           2827 ;	genPlus
                           2828 ;	genPlusIncr
                           2829 ;	genPlus
                           2830 ;	genPlusIncr
   0E17 01rA9s00           2831 	ld	bc,#_g_Screen + 42 + 2
                           2832 ;	genPointerGet
   0E1A 69                 2833 	ld	l,c
   0E1B 60                 2834 	ld	h,b
   0E1C 7E                 2835 	ld	a,(hl)
   0E1D FD 21r06s00        2836 	ld	iy,#_DY
   0E21 FD 77 00           2837 	ld	0(iy),a
   0E24 23                 2838 	inc	hl
   0E25 7E                 2839 	ld	a,(hl)
   0E26 FD 77 01           2840 	ld	1(iy),a
                           2841 ;	genAssign
   0E29 FD 21r0Cs00        2842 	ld	iy,#_CLR
   0E2D FD 36 00 00        2843 	ld	0(iy),#0x00
                           2844 ;	genCall
                           2845 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E31 CDr57s15           2846 	call	_DrawLineSimple
                           2847 ;test.c:336: DRAW_LINE(g_Screen[7].x, g_Screen[7].y, g_Screen[4].x, g_Screen[4].y, 0);
                           2848 ;	genPlus
                           2849 ;	genPlusIncr
   0E34 01rA7s00           2850 	ld	bc,#_g_Screen + 42
                           2851 ;	genPointerGet
   0E37 69                 2852 	ld	l,c
   0E38 60                 2853 	ld	h,b
   0E39 7E                 2854 	ld	a,(hl)
   0E3A FD 21r00s00        2855 	ld	iy,#_SX
   0E3E FD 77 00           2856 	ld	0(iy),a
   0E41 23                 2857 	inc	hl
   0E42 7E                 2858 	ld	a,(hl)
   0E43 FD 77 01           2859 	ld	1(iy),a
                           2860 ;	genPlus
                           2861 ;	genPlusIncr
                           2862 ;	genPlus
                           2863 ;	genPlusIncr
   0E46 01rA9s00           2864 	ld	bc,#_g_Screen + 42 + 2
                           2865 ;	genPointerGet
   0E49 69                 2866 	ld	l,c
   0E4A 60                 2867 	ld	h,b
   0E4B 7E                 2868 	ld	a,(hl)
   0E4C FD 21r02s00        2869 	ld	iy,#_SY
   0E50 FD 77 00           2870 	ld	0(iy),a
   0E53 23                 2871 	inc	hl
   0E54 7E                 2872 	ld	a,(hl)
   0E55 FD 77 01           2873 	ld	1(iy),a
                           2874 ;	genPlus
                           2875 ;	genPlusIncr
   0E58 01r95s00           2876 	ld	bc,#_g_Screen + 24
                           2877 ;	genPointerGet
   0E5B 69                 2878 	ld	l,c
   0E5C 60                 2879 	ld	h,b
   0E5D 7E                 2880 	ld	a,(hl)
   0E5E FD 21r04s00        2881 	ld	iy,#_DX
   0E62 FD 77 00           2882 	ld	0(iy),a
   0E65 23                 2883 	inc	hl
   0E66 7E                 2884 	ld	a,(hl)
   0E67 FD 77 01           2885 	ld	1(iy),a
                           2886 ;	genPlus
                           2887 ;	genPlusIncr
                           2888 ;	genPlus
                           2889 ;	genPlusIncr
   0E6A 01r97s00           2890 	ld	bc,#_g_Screen + 24 + 2
                           2891 ;	genPointerGet
   0E6D 69                 2892 	ld	l,c
   0E6E 60                 2893 	ld	h,b
   0E6F 7E                 2894 	ld	a,(hl)
   0E70 FD 21r06s00        2895 	ld	iy,#_DY
   0E74 FD 77 00           2896 	ld	0(iy),a
   0E77 23                 2897 	inc	hl
   0E78 7E                 2898 	ld	a,(hl)
   0E79 FD 77 01           2899 	ld	1(iy),a
                           2900 ;	genAssign
   0E7C FD 21r0Cs00        2901 	ld	iy,#_CLR
   0E80 FD 36 00 00        2902 	ld	0(iy),#0x00
                           2903 ;	genCall
                           2904 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E84 CDr57s15           2905 	call	_DrawLineSimple
                           2906 ;test.c:338: DRAW_LINE(g_Screen[0].x, g_Screen[0].y, g_Screen[4].x, g_Screen[4].y, 0);
                           2907 ;	genPointerGet
   0E87 21r7Ds00           2908 	ld	hl,#_g_Screen
   0E8A 7E                 2909 	ld	a,(hl)
   0E8B FD 21r00s00        2910 	ld	iy,#_SX
   0E8F FD 77 00           2911 	ld	0(iy),a
   0E92 23                 2912 	inc	hl
   0E93 7E                 2913 	ld	a,(hl)
   0E94 FD 77 01           2914 	ld	1(iy),a
                           2915 ;	genPlus
                           2916 ;	genPlusIncr
   0E97 01r7Fs00           2917 	ld	bc,#_g_Screen + 2
                           2918 ;	genPointerGet
   0E9A 69                 2919 	ld	l,c
   0E9B 60                 2920 	ld	h,b
   0E9C 7E                 2921 	ld	a,(hl)
   0E9D FD 21r02s00        2922 	ld	iy,#_SY
   0EA1 FD 77 00           2923 	ld	0(iy),a
   0EA4 23                 2924 	inc	hl
   0EA5 7E                 2925 	ld	a,(hl)
   0EA6 FD 77 01           2926 	ld	1(iy),a
                           2927 ;	genPlus
                           2928 ;	genPlusIncr
   0EA9 01r95s00           2929 	ld	bc,#_g_Screen + 24
                           2930 ;	genPointerGet
   0EAC 69                 2931 	ld	l,c
   0EAD 60                 2932 	ld	h,b
   0EAE 7E                 2933 	ld	a,(hl)
   0EAF FD 21r04s00        2934 	ld	iy,#_DX
   0EB3 FD 77 00           2935 	ld	0(iy),a
   0EB6 23                 2936 	inc	hl
   0EB7 7E                 2937 	ld	a,(hl)
   0EB8 FD 77 01           2938 	ld	1(iy),a
                           2939 ;	genPlus
                           2940 ;	genPlusIncr
                           2941 ;	genPlus
                           2942 ;	genPlusIncr
   0EBB 01r97s00           2943 	ld	bc,#_g_Screen + 24 + 2
                           2944 ;	genPointerGet
   0EBE 69                 2945 	ld	l,c
   0EBF 60                 2946 	ld	h,b
   0EC0 7E                 2947 	ld	a,(hl)
   0EC1 FD 21r06s00        2948 	ld	iy,#_DY
   0EC5 FD 77 00           2949 	ld	0(iy),a
   0EC8 23                 2950 	inc	hl
   0EC9 7E                 2951 	ld	a,(hl)
   0ECA FD 77 01           2952 	ld	1(iy),a
                           2953 ;	genAssign
   0ECD FD 21r0Cs00        2954 	ld	iy,#_CLR
   0ED1 FD 36 00 00        2955 	ld	0(iy),#0x00
                           2956 ;	genCall
                           2957 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0ED5 CDr57s15           2958 	call	_DrawLineSimple
                           2959 ;test.c:339: DRAW_LINE(g_Screen[1].x, g_Screen[1].y, g_Screen[5].x, g_Screen[5].y, 0);
                           2960 ;	genPlus
                           2961 ;	genPlusIncr
   0ED8 01r83s00           2962 	ld	bc,#_g_Screen + 6
                           2963 ;	genPointerGet
   0EDB 69                 2964 	ld	l,c
   0EDC 60                 2965 	ld	h,b
   0EDD 7E                 2966 	ld	a,(hl)
   0EDE FD 21r00s00        2967 	ld	iy,#_SX
   0EE2 FD 77 00           2968 	ld	0(iy),a
   0EE5 23                 2969 	inc	hl
   0EE6 7E                 2970 	ld	a,(hl)
   0EE7 FD 77 01           2971 	ld	1(iy),a
                           2972 ;	genPlus
                           2973 ;	genPlusIncr
                           2974 ;	genPlus
                           2975 ;	genPlusIncr
   0EEA 01r85s00           2976 	ld	bc,#_g_Screen + 6 + 2
                           2977 ;	genPointerGet
   0EED 69                 2978 	ld	l,c
   0EEE 60                 2979 	ld	h,b
   0EEF 7E                 2980 	ld	a,(hl)
   0EF0 FD 21r02s00        2981 	ld	iy,#_SY
   0EF4 FD 77 00           2982 	ld	0(iy),a
   0EF7 23                 2983 	inc	hl
   0EF8 7E                 2984 	ld	a,(hl)
   0EF9 FD 77 01           2985 	ld	1(iy),a
                           2986 ;	genPlus
                           2987 ;	genPlusIncr
   0EFC 01r9Bs00           2988 	ld	bc,#_g_Screen + 30
                           2989 ;	genPointerGet
   0EFF 69                 2990 	ld	l,c
   0F00 60                 2991 	ld	h,b
   0F01 7E                 2992 	ld	a,(hl)
   0F02 FD 21r04s00        2993 	ld	iy,#_DX
   0F06 FD 77 00           2994 	ld	0(iy),a
   0F09 23                 2995 	inc	hl
   0F0A 7E                 2996 	ld	a,(hl)
   0F0B FD 77 01           2997 	ld	1(iy),a
                           2998 ;	genPlus
                           2999 ;	genPlusIncr
                           3000 ;	genPlus
                           3001 ;	genPlusIncr
   0F0E 01r9Ds00           3002 	ld	bc,#_g_Screen + 30 + 2
                           3003 ;	genPointerGet
   0F11 69                 3004 	ld	l,c
   0F12 60                 3005 	ld	h,b
   0F13 7E                 3006 	ld	a,(hl)
   0F14 FD 21r06s00        3007 	ld	iy,#_DY
   0F18 FD 77 00           3008 	ld	0(iy),a
   0F1B 23                 3009 	inc	hl
   0F1C 7E                 3010 	ld	a,(hl)
   0F1D FD 77 01           3011 	ld	1(iy),a
                           3012 ;	genAssign
   0F20 FD 21r0Cs00        3013 	ld	iy,#_CLR
   0F24 FD 36 00 00        3014 	ld	0(iy),#0x00
                           3015 ;	genCall
                           3016 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F28 CDr57s15           3017 	call	_DrawLineSimple
                           3018 ;test.c:340: DRAW_LINE(g_Screen[2].x, g_Screen[2].y, g_Screen[6].x, g_Screen[6].y, 0);
                           3019 ;	genPlus
                           3020 ;	genPlusIncr
   0F2B 01r89s00           3021 	ld	bc,#_g_Screen + 12
                           3022 ;	genPointerGet
   0F2E 69                 3023 	ld	l,c
   0F2F 60                 3024 	ld	h,b
   0F30 7E                 3025 	ld	a,(hl)
   0F31 FD 21r00s00        3026 	ld	iy,#_SX
   0F35 FD 77 00           3027 	ld	0(iy),a
   0F38 23                 3028 	inc	hl
   0F39 7E                 3029 	ld	a,(hl)
   0F3A FD 77 01           3030 	ld	1(iy),a
                           3031 ;	genPlus
                           3032 ;	genPlusIncr
                           3033 ;	genPlus
                           3034 ;	genPlusIncr
   0F3D 01r8Bs00           3035 	ld	bc,#_g_Screen + 12 + 2
                           3036 ;	genPointerGet
   0F40 69                 3037 	ld	l,c
   0F41 60                 3038 	ld	h,b
   0F42 7E                 3039 	ld	a,(hl)
   0F43 FD 21r02s00        3040 	ld	iy,#_SY
   0F47 FD 77 00           3041 	ld	0(iy),a
   0F4A 23                 3042 	inc	hl
   0F4B 7E                 3043 	ld	a,(hl)
   0F4C FD 77 01           3044 	ld	1(iy),a
                           3045 ;	genPlus
                           3046 ;	genPlusIncr
   0F4F 01rA1s00           3047 	ld	bc,#_g_Screen + 36
                           3048 ;	genPointerGet
   0F52 69                 3049 	ld	l,c
   0F53 60                 3050 	ld	h,b
   0F54 7E                 3051 	ld	a,(hl)
   0F55 FD 21r04s00        3052 	ld	iy,#_DX
   0F59 FD 77 00           3053 	ld	0(iy),a
   0F5C 23                 3054 	inc	hl
   0F5D 7E                 3055 	ld	a,(hl)
   0F5E FD 77 01           3056 	ld	1(iy),a
                           3057 ;	genPlus
                           3058 ;	genPlusIncr
                           3059 ;	genPlus
                           3060 ;	genPlusIncr
   0F61 01rA3s00           3061 	ld	bc,#_g_Screen + 36 + 2
                           3062 ;	genPointerGet
   0F64 69                 3063 	ld	l,c
   0F65 60                 3064 	ld	h,b
   0F66 7E                 3065 	ld	a,(hl)
   0F67 FD 21r06s00        3066 	ld	iy,#_DY
   0F6B FD 77 00           3067 	ld	0(iy),a
   0F6E 23                 3068 	inc	hl
   0F6F 7E                 3069 	ld	a,(hl)
   0F70 FD 77 01           3070 	ld	1(iy),a
                           3071 ;	genAssign
   0F73 FD 21r0Cs00        3072 	ld	iy,#_CLR
   0F77 FD 36 00 00        3073 	ld	0(iy),#0x00
                           3074 ;	genCall
                           3075 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F7B CDr57s15           3076 	call	_DrawLineSimple
                           3077 ;test.c:341: DRAW_LINE(g_Screen[3].x, g_Screen[3].y, g_Screen[7].x, g_Screen[7].y, 0);
                           3078 ;	genPlus
                           3079 ;	genPlusIncr
   0F7E 01r8Fs00           3080 	ld	bc,#_g_Screen + 18
                           3081 ;	genPointerGet
   0F81 69                 3082 	ld	l,c
   0F82 60                 3083 	ld	h,b
   0F83 7E                 3084 	ld	a,(hl)
   0F84 FD 21r00s00        3085 	ld	iy,#_SX
   0F88 FD 77 00           3086 	ld	0(iy),a
   0F8B 23                 3087 	inc	hl
   0F8C 7E                 3088 	ld	a,(hl)
   0F8D FD 77 01           3089 	ld	1(iy),a
                           3090 ;	genPlus
                           3091 ;	genPlusIncr
                           3092 ;	genPlus
                           3093 ;	genPlusIncr
   0F90 01r91s00           3094 	ld	bc,#_g_Screen + 18 + 2
                           3095 ;	genPointerGet
   0F93 69                 3096 	ld	l,c
   0F94 60                 3097 	ld	h,b
   0F95 7E                 3098 	ld	a,(hl)
   0F96 FD 21r02s00        3099 	ld	iy,#_SY
   0F9A FD 77 00           3100 	ld	0(iy),a
   0F9D 23                 3101 	inc	hl
   0F9E 7E                 3102 	ld	a,(hl)
   0F9F FD 77 01           3103 	ld	1(iy),a
                           3104 ;	genPlus
                           3105 ;	genPlusIncr
   0FA2 01rA7s00           3106 	ld	bc,#_g_Screen + 42
                           3107 ;	genPointerGet
   0FA5 69                 3108 	ld	l,c
   0FA6 60                 3109 	ld	h,b
   0FA7 7E                 3110 	ld	a,(hl)
   0FA8 FD 21r04s00        3111 	ld	iy,#_DX
   0FAC FD 77 00           3112 	ld	0(iy),a
   0FAF 23                 3113 	inc	hl
   0FB0 7E                 3114 	ld	a,(hl)
   0FB1 FD 77 01           3115 	ld	1(iy),a
                           3116 ;	genPlus
                           3117 ;	genPlusIncr
                           3118 ;	genPlus
                           3119 ;	genPlusIncr
   0FB4 01rA9s00           3120 	ld	bc,#_g_Screen + 42 + 2
                           3121 ;	genPointerGet
   0FB7 69                 3122 	ld	l,c
   0FB8 60                 3123 	ld	h,b
   0FB9 7E                 3124 	ld	a,(hl)
   0FBA FD 21r06s00        3125 	ld	iy,#_DY
   0FBE FD 77 00           3126 	ld	0(iy),a
   0FC1 23                 3127 	inc	hl
   0FC2 7E                 3128 	ld	a,(hl)
   0FC3 FD 77 01           3129 	ld	1(iy),a
                           3130 ;	genAssign
   0FC6 FD 21r0Cs00        3131 	ld	iy,#_CLR
   0FCA FD 36 00 00        3132 	ld	0(iy),#0x00
                           3133 ;	genCall
                           3134 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FCE CDr57s15           3135 	call	_DrawLineSimple
                           3136 ;test.c:343: for(i=0; i<POINT_NUM; i++)
                           3137 ;	genAssign
                           3138 ;	AOP_STK for _Update_i_1_1
   0FD1 DD 36 FF 00        3139 	ld	-1(ix),#0x00
                           3140 ;	genAssign
   0FD5 06 00              3141 	ld	b,#0x00
                           3142 ;	genLabel
   0FD7                    3143 00101$:
                           3144 ;	genCmpLt
                           3145 ;	AOP_STK for _Update_i_1_1
   0FD7 DD 7E FF           3146 	ld	a,-1(ix)
   0FDA D6 08              3147 	sub	a,#0x08
   0FDC F2r90s10           3148 	jp	P,00104$
                           3149 ;test.c:346: DrawPoint8(g_Screen[i].x, g_Screen[i].y, 0);
                           3150 ;	genPlus
                           3151 ;	AOP_STK for _Update_sloc0_1_0
   0FDF 3Er7D              3152 	ld	a,#<_g_Screen
   0FE1 80                 3153 	add	a,b
   0FE2 DD 77 FD           3154 	ld	-3(ix),a
   0FE5 3Es00              3155 	ld	a,#>_g_Screen
   0FE7 CE 00              3156 	adc	a,#0x00
   0FE9 DD 77 FE           3157 	ld	-2(ix),a
                           3158 ;	genPlus
                           3159 ;	AOP_STK for _Update_sloc0_1_0
                           3160 ;	genPlusIncr
   0FEC DD 7E FD           3161 	ld	a,-3(ix)
   0FEF C6 02              3162 	add	a,#0x02
   0FF1 4F                 3163 	ld	c,a
   0FF2 DD 7E FE           3164 	ld	a,-2(ix)
   0FF5 CE 00              3165 	adc	a,#0x00
   0FF7 5F                 3166 	ld	e,a
                           3167 ;	genPointerGet
   0FF8 69                 3168 	ld	l,c
   0FF9 63                 3169 	ld	h,e
   0FFA 4E                 3170 	ld	c,(hl)
   0FFB 23                 3171 	inc	hl
   0FFC 5E                 3172 	ld	e,(hl)
                           3173 ;	genCast
                           3174 ;	genPointerGet
                           3175 ;	AOP_STK for _Update_sloc0_1_0
   0FFD DD 6E FD           3176 	ld	l,-3(ix)
   1000 DD 66 FE           3177 	ld	h,-2(ix)
   1003 5E                 3178 	ld	e,(hl)
   1004 23                 3179 	inc	hl
   1005 56                 3180 	ld	d,(hl)
                           3181 ;	genCast
                           3182 ;	genIpush
                           3183 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1006 C5                 3184 	push	bc
   1007 3E 00              3185 	ld	a,#0x00
   1009 F5                 3186 	push	af
   100A 33                 3187 	inc	sp
                           3188 ;	genIpush
   100B 79                 3189 	ld	a,c
   100C F5                 3190 	push	af
   100D 33                 3191 	inc	sp
                           3192 ;	genIpush
   100E 7B                 3193 	ld	a,e
   100F F5                 3194 	push	af
   1010 33                 3195 	inc	sp
                           3196 ;	genCall
   1011 CDrB8s14           3197 	call	_DrawPoint8
   1014 F1                 3198 	pop	af
   1015 33                 3199 	inc	sp
   1016 C1                 3200 	pop	bc
                           3201 ;test.c:350: TransXZIndex(i);
                           3202 ;	genIpush
                           3203 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1017 C5                 3204 	push	bc
                           3205 ;	AOP_STK for _Update_i_1_1
   1018 DD 7E FF           3206 	ld	a,-1(ix)
   101B F5                 3207 	push	af
   101C 33                 3208 	inc	sp
                           3209 ;	genCall
   101D CDr93s08           3210 	call	_TransXZIndex
   1020 33                 3211 	inc	sp
   1021 C1                 3212 	pop	bc
                           3213 ;test.c:351: Project(&g_Screen[i], &g_World[i], &g_Camera);
                           3214 ;	genPlus
                           3215 ;	AOP_STK for _Update_sloc0_1_0
   1022 3Er4D              3216 	ld	a,#<_g_World
   1024 80                 3217 	add	a,b
   1025 DD 77 FD           3218 	ld	-3(ix),a
   1028 3Es00              3219 	ld	a,#>_g_World
   102A CE 00              3220 	adc	a,#0x00
   102C DD 77 FE           3221 	ld	-2(ix),a
                           3222 ;	genPlus
   102F 3Er7D              3223 	ld	a,#<_g_Screen
   1031 80                 3224 	add	a,b
   1032 4F                 3225 	ld	c,a
   1033 3Es00              3226 	ld	a,#>_g_Screen
   1035 CE 00              3227 	adc	a,#0x00
   1037 5F                 3228 	ld	e,a
                           3229 ;	genIpush
                           3230 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1038 C5                 3231 	push	bc
   1039 21r0Fs00           3232 	ld	hl,#_g_Camera
   103C E5                 3233 	push	hl
                           3234 ;	genIpush
                           3235 ;	AOP_STK for _Update_sloc0_1_0
   103D DD 6E FD           3236 	ld	l,-3(ix)
   1040 DD 66 FE           3237 	ld	h,-2(ix)
   1043 E5                 3238 	push	hl
                           3239 ;	genIpush
   1044 69                 3240 	ld	l,c
   1045 63                 3241 	ld	h,e
   1046 E5                 3242 	push	hl
                           3243 ;	genCall
   1047 CDrB1s0A           3244 	call	_Project
   104A F1                 3245 	pop	af
   104B F1                 3246 	pop	af
   104C F1                 3247 	pop	af
   104D C1                 3248 	pop	bc
                           3249 ;test.c:354: DrawPoint8(g_Screen[i].x, g_Screen[i].y, 255);
                           3250 ;	genPlus
                           3251 ;	AOP_STK for _Update_sloc0_1_0
   104E 3Er7D              3252 	ld	a,#<_g_Screen
   1050 80                 3253 	add	a,b
   1051 DD 77 FD           3254 	ld	-3(ix),a
   1054 3Es00              3255 	ld	a,#>_g_Screen
   1056 CE 00              3256 	adc	a,#0x00
   1058 DD 77 FE           3257 	ld	-2(ix),a
                           3258 ;	genPlus
                           3259 ;	AOP_STK for _Update_sloc0_1_0
                           3260 ;	genPlusIncr
   105B DD 7E FD           3261 	ld	a,-3(ix)
   105E C6 02              3262 	add	a,#0x02
   1060 4F                 3263 	ld	c,a
   1061 DD 7E FE           3264 	ld	a,-2(ix)
   1064 CE 00              3265 	adc	a,#0x00
   1066 5F                 3266 	ld	e,a
                           3267 ;	genPointerGet
   1067 69                 3268 	ld	l,c
   1068 63                 3269 	ld	h,e
   1069 4E                 3270 	ld	c,(hl)
   106A 23                 3271 	inc	hl
   106B 5E                 3272 	ld	e,(hl)
                           3273 ;	genCast
                           3274 ;	genPointerGet
                           3275 ;	AOP_STK for _Update_sloc0_1_0
   106C DD 6E FD           3276 	ld	l,-3(ix)
   106F DD 66 FE           3277 	ld	h,-2(ix)
   1072 5E                 3278 	ld	e,(hl)
   1073 23                 3279 	inc	hl
   1074 56                 3280 	ld	d,(hl)
                           3281 ;	genCast
                           3282 ;	genIpush
                           3283 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1075 C5                 3284 	push	bc
   1076 3E FF              3285 	ld	a,#0xFF
   1078 F5                 3286 	push	af
   1079 33                 3287 	inc	sp
                           3288 ;	genIpush
   107A 79                 3289 	ld	a,c
   107B F5                 3290 	push	af
   107C 33                 3291 	inc	sp
                           3292 ;	genIpush
   107D 7B                 3293 	ld	a,e
   107E F5                 3294 	push	af
   107F 33                 3295 	inc	sp
                           3296 ;	genCall
   1080 CDrB8s14           3297 	call	_DrawPoint8
   1083 F1                 3298 	pop	af
   1084 33                 3299 	inc	sp
   1085 C1                 3300 	pop	bc
                           3301 ;test.c:343: for(i=0; i<POINT_NUM; i++)
                           3302 ;	genPlus
                           3303 ;	genPlusIncr
   1086 78                 3304 	ld	a,b
   1087 C6 06              3305 	add	a,#0x06
   1089 47                 3306 	ld	b,a
                           3307 ;	genPlus
                           3308 ;	AOP_STK for _Update_i_1_1
                           3309 ;	genPlusIncr
   108A DD 34 FF           3310 	inc	-1(ix)
                           3311 ;	genGoto
   108D C3rD7s0F           3312 	jp	00101$
                           3313 ;	genLabel
   1090                    3314 00104$:
                           3315 ;test.c:357: DRAW_LINE(g_Screen[0].x, g_Screen[0].y, g_Screen[1].x, g_Screen[1].y, 128);
                           3316 ;	genPointerGet
   1090 21r7Ds00           3317 	ld	hl,#_g_Screen
   1093 7E                 3318 	ld	a,(hl)
   1094 FD 21r00s00        3319 	ld	iy,#_SX
   1098 FD 77 00           3320 	ld	0(iy),a
   109B 23                 3321 	inc	hl
   109C 7E                 3322 	ld	a,(hl)
   109D FD 77 01           3323 	ld	1(iy),a
                           3324 ;	genPlus
                           3325 ;	genPlusIncr
   10A0 01r7Fs00           3326 	ld	bc,#_g_Screen + 2
                           3327 ;	genPointerGet
   10A3 69                 3328 	ld	l,c
   10A4 60                 3329 	ld	h,b
   10A5 7E                 3330 	ld	a,(hl)
   10A6 FD 21r02s00        3331 	ld	iy,#_SY
   10AA FD 77 00           3332 	ld	0(iy),a
   10AD 23                 3333 	inc	hl
   10AE 7E                 3334 	ld	a,(hl)
   10AF FD 77 01           3335 	ld	1(iy),a
                           3336 ;	genPlus
                           3337 ;	genPlusIncr
   10B2 01r83s00           3338 	ld	bc,#_g_Screen + 6
                           3339 ;	genPointerGet
   10B5 69                 3340 	ld	l,c
   10B6 60                 3341 	ld	h,b
   10B7 7E                 3342 	ld	a,(hl)
   10B8 FD 21r04s00        3343 	ld	iy,#_DX
   10BC FD 77 00           3344 	ld	0(iy),a
   10BF 23                 3345 	inc	hl
   10C0 7E                 3346 	ld	a,(hl)
   10C1 FD 77 01           3347 	ld	1(iy),a
                           3348 ;	genPlus
                           3349 ;	genPlusIncr
                           3350 ;	genPlus
                           3351 ;	genPlusIncr
   10C4 01r85s00           3352 	ld	bc,#_g_Screen + 6 + 2
                           3353 ;	genPointerGet
   10C7 69                 3354 	ld	l,c
   10C8 60                 3355 	ld	h,b
   10C9 7E                 3356 	ld	a,(hl)
   10CA FD 21r06s00        3357 	ld	iy,#_DY
   10CE FD 77 00           3358 	ld	0(iy),a
   10D1 23                 3359 	inc	hl
   10D2 7E                 3360 	ld	a,(hl)
   10D3 FD 77 01           3361 	ld	1(iy),a
                           3362 ;	genAssign
   10D6 FD 21r0Cs00        3363 	ld	iy,#_CLR
   10DA FD 36 00 80        3364 	ld	0(iy),#0x80
                           3365 ;	genCall
                           3366 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10DE CDr57s15           3367 	call	_DrawLineSimple
                           3368 ;test.c:358: DRAW_LINE(g_Screen[1].x, g_Screen[1].y, g_Screen[2].x, g_Screen[2].y, 128);
                           3369 ;	genPlus
                           3370 ;	genPlusIncr
   10E1 01r83s00           3371 	ld	bc,#_g_Screen + 6
                           3372 ;	genPointerGet
   10E4 69                 3373 	ld	l,c
   10E5 60                 3374 	ld	h,b
   10E6 7E                 3375 	ld	a,(hl)
   10E7 FD 21r00s00        3376 	ld	iy,#_SX
   10EB FD 77 00           3377 	ld	0(iy),a
   10EE 23                 3378 	inc	hl
   10EF 7E                 3379 	ld	a,(hl)
   10F0 FD 77 01           3380 	ld	1(iy),a
                           3381 ;	genPlus
                           3382 ;	genPlusIncr
                           3383 ;	genPlus
                           3384 ;	genPlusIncr
   10F3 01r85s00           3385 	ld	bc,#_g_Screen + 6 + 2
                           3386 ;	genPointerGet
   10F6 69                 3387 	ld	l,c
   10F7 60                 3388 	ld	h,b
   10F8 7E                 3389 	ld	a,(hl)
   10F9 FD 21r02s00        3390 	ld	iy,#_SY
   10FD FD 77 00           3391 	ld	0(iy),a
   1100 23                 3392 	inc	hl
   1101 7E                 3393 	ld	a,(hl)
   1102 FD 77 01           3394 	ld	1(iy),a
                           3395 ;	genPlus
                           3396 ;	genPlusIncr
   1105 01r89s00           3397 	ld	bc,#_g_Screen + 12
                           3398 ;	genPointerGet
   1108 69                 3399 	ld	l,c
   1109 60                 3400 	ld	h,b
   110A 7E                 3401 	ld	a,(hl)
   110B FD 21r04s00        3402 	ld	iy,#_DX
   110F FD 77 00           3403 	ld	0(iy),a
   1112 23                 3404 	inc	hl
   1113 7E                 3405 	ld	a,(hl)
   1114 FD 77 01           3406 	ld	1(iy),a
                           3407 ;	genPlus
                           3408 ;	genPlusIncr
                           3409 ;	genPlus
                           3410 ;	genPlusIncr
   1117 01r8Bs00           3411 	ld	bc,#_g_Screen + 12 + 2
                           3412 ;	genPointerGet
   111A 69                 3413 	ld	l,c
   111B 60                 3414 	ld	h,b
   111C 7E                 3415 	ld	a,(hl)
   111D FD 21r06s00        3416 	ld	iy,#_DY
   1121 FD 77 00           3417 	ld	0(iy),a
   1124 23                 3418 	inc	hl
   1125 7E                 3419 	ld	a,(hl)
   1126 FD 77 01           3420 	ld	1(iy),a
                           3421 ;	genAssign
   1129 FD 21r0Cs00        3422 	ld	iy,#_CLR
   112D FD 36 00 80        3423 	ld	0(iy),#0x80
                           3424 ;	genCall
                           3425 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1131 CDr57s15           3426 	call	_DrawLineSimple
                           3427 ;test.c:359: DRAW_LINE(g_Screen[2].x, g_Screen[2].y, g_Screen[3].x, g_Screen[3].y, 128);
                           3428 ;	genPlus
                           3429 ;	genPlusIncr
   1134 01r89s00           3430 	ld	bc,#_g_Screen + 12
                           3431 ;	genPointerGet
   1137 69                 3432 	ld	l,c
   1138 60                 3433 	ld	h,b
   1139 7E                 3434 	ld	a,(hl)
   113A FD 21r00s00        3435 	ld	iy,#_SX
   113E FD 77 00           3436 	ld	0(iy),a
   1141 23                 3437 	inc	hl
   1142 7E                 3438 	ld	a,(hl)
   1143 FD 77 01           3439 	ld	1(iy),a
                           3440 ;	genPlus
                           3441 ;	genPlusIncr
                           3442 ;	genPlus
                           3443 ;	genPlusIncr
   1146 01r8Bs00           3444 	ld	bc,#_g_Screen + 12 + 2
                           3445 ;	genPointerGet
   1149 69                 3446 	ld	l,c
   114A 60                 3447 	ld	h,b
   114B 7E                 3448 	ld	a,(hl)
   114C FD 21r02s00        3449 	ld	iy,#_SY
   1150 FD 77 00           3450 	ld	0(iy),a
   1153 23                 3451 	inc	hl
   1154 7E                 3452 	ld	a,(hl)
   1155 FD 77 01           3453 	ld	1(iy),a
                           3454 ;	genPlus
                           3455 ;	genPlusIncr
   1158 01r8Fs00           3456 	ld	bc,#_g_Screen + 18
                           3457 ;	genPointerGet
   115B 69                 3458 	ld	l,c
   115C 60                 3459 	ld	h,b
   115D 7E                 3460 	ld	a,(hl)
   115E FD 21r04s00        3461 	ld	iy,#_DX
   1162 FD 77 00           3462 	ld	0(iy),a
   1165 23                 3463 	inc	hl
   1166 7E                 3464 	ld	a,(hl)
   1167 FD 77 01           3465 	ld	1(iy),a
                           3466 ;	genPlus
                           3467 ;	genPlusIncr
                           3468 ;	genPlus
                           3469 ;	genPlusIncr
   116A 01r91s00           3470 	ld	bc,#_g_Screen + 18 + 2
                           3471 ;	genPointerGet
   116D 69                 3472 	ld	l,c
   116E 60                 3473 	ld	h,b
   116F 7E                 3474 	ld	a,(hl)
   1170 FD 21r06s00        3475 	ld	iy,#_DY
   1174 FD 77 00           3476 	ld	0(iy),a
   1177 23                 3477 	inc	hl
   1178 7E                 3478 	ld	a,(hl)
   1179 FD 77 01           3479 	ld	1(iy),a
                           3480 ;	genAssign
   117C FD 21r0Cs00        3481 	ld	iy,#_CLR
   1180 FD 36 00 80        3482 	ld	0(iy),#0x80
                           3483 ;	genCall
                           3484 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1184 CDr57s15           3485 	call	_DrawLineSimple
                           3486 ;test.c:360: DRAW_LINE(g_Screen[3].x, g_Screen[3].y, g_Screen[0].x, g_Screen[0].y, 128);
                           3487 ;	genPlus
                           3488 ;	genPlusIncr
   1187 01r8Fs00           3489 	ld	bc,#_g_Screen + 18
                           3490 ;	genPointerGet
   118A 69                 3491 	ld	l,c
   118B 60                 3492 	ld	h,b
   118C 7E                 3493 	ld	a,(hl)
   118D FD 21r00s00        3494 	ld	iy,#_SX
   1191 FD 77 00           3495 	ld	0(iy),a
   1194 23                 3496 	inc	hl
   1195 7E                 3497 	ld	a,(hl)
   1196 FD 77 01           3498 	ld	1(iy),a
                           3499 ;	genPlus
                           3500 ;	genPlusIncr
                           3501 ;	genPlus
                           3502 ;	genPlusIncr
   1199 01r91s00           3503 	ld	bc,#_g_Screen + 18 + 2
                           3504 ;	genPointerGet
   119C 69                 3505 	ld	l,c
   119D 60                 3506 	ld	h,b
   119E 7E                 3507 	ld	a,(hl)
   119F FD 21r02s00        3508 	ld	iy,#_SY
   11A3 FD 77 00           3509 	ld	0(iy),a
   11A6 23                 3510 	inc	hl
   11A7 7E                 3511 	ld	a,(hl)
   11A8 FD 77 01           3512 	ld	1(iy),a
                           3513 ;	genPointerGet
   11AB 21r7Ds00           3514 	ld	hl,#_g_Screen
   11AE 7E                 3515 	ld	a,(hl)
   11AF FD 21r04s00        3516 	ld	iy,#_DX
   11B3 FD 77 00           3517 	ld	0(iy),a
   11B6 23                 3518 	inc	hl
   11B7 7E                 3519 	ld	a,(hl)
   11B8 FD 77 01           3520 	ld	1(iy),a
                           3521 ;	genPlus
                           3522 ;	genPlusIncr
   11BB 01r7Fs00           3523 	ld	bc,#_g_Screen + 2
                           3524 ;	genPointerGet
   11BE 69                 3525 	ld	l,c
   11BF 60                 3526 	ld	h,b
   11C0 7E                 3527 	ld	a,(hl)
   11C1 FD 21r06s00        3528 	ld	iy,#_DY
   11C5 FD 77 00           3529 	ld	0(iy),a
   11C8 23                 3530 	inc	hl
   11C9 7E                 3531 	ld	a,(hl)
   11CA FD 77 01           3532 	ld	1(iy),a
                           3533 ;	genAssign
   11CD FD 21r0Cs00        3534 	ld	iy,#_CLR
   11D1 FD 36 00 80        3535 	ld	0(iy),#0x80
                           3536 ;	genCall
                           3537 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11D5 CDr57s15           3538 	call	_DrawLineSimple
                           3539 ;test.c:362: DRAW_LINE(g_Screen[4].x, g_Screen[4].y, g_Screen[5].x, g_Screen[5].y, 128);
                           3540 ;	genPlus
                           3541 ;	genPlusIncr
   11D8 01r95s00           3542 	ld	bc,#_g_Screen + 24
                           3543 ;	genPointerGet
   11DB 69                 3544 	ld	l,c
   11DC 60                 3545 	ld	h,b
   11DD 7E                 3546 	ld	a,(hl)
   11DE FD 21r00s00        3547 	ld	iy,#_SX
   11E2 FD 77 00           3548 	ld	0(iy),a
   11E5 23                 3549 	inc	hl
   11E6 7E                 3550 	ld	a,(hl)
   11E7 FD 77 01           3551 	ld	1(iy),a
                           3552 ;	genPlus
                           3553 ;	genPlusIncr
                           3554 ;	genPlus
                           3555 ;	genPlusIncr
   11EA 01r97s00           3556 	ld	bc,#_g_Screen + 24 + 2
                           3557 ;	genPointerGet
   11ED 69                 3558 	ld	l,c
   11EE 60                 3559 	ld	h,b
   11EF 7E                 3560 	ld	a,(hl)
   11F0 FD 21r02s00        3561 	ld	iy,#_SY
   11F4 FD 77 00           3562 	ld	0(iy),a
   11F7 23                 3563 	inc	hl
   11F8 7E                 3564 	ld	a,(hl)
   11F9 FD 77 01           3565 	ld	1(iy),a
                           3566 ;	genPlus
                           3567 ;	genPlusIncr
   11FC 01r9Bs00           3568 	ld	bc,#_g_Screen + 30
                           3569 ;	genPointerGet
   11FF 69                 3570 	ld	l,c
   1200 60                 3571 	ld	h,b
   1201 7E                 3572 	ld	a,(hl)
   1202 FD 21r04s00        3573 	ld	iy,#_DX
   1206 FD 77 00           3574 	ld	0(iy),a
   1209 23                 3575 	inc	hl
   120A 7E                 3576 	ld	a,(hl)
   120B FD 77 01           3577 	ld	1(iy),a
                           3578 ;	genPlus
                           3579 ;	genPlusIncr
                           3580 ;	genPlus
                           3581 ;	genPlusIncr
   120E 01r9Ds00           3582 	ld	bc,#_g_Screen + 30 + 2
                           3583 ;	genPointerGet
   1211 69                 3584 	ld	l,c
   1212 60                 3585 	ld	h,b
   1213 7E                 3586 	ld	a,(hl)
   1214 FD 21r06s00        3587 	ld	iy,#_DY
   1218 FD 77 00           3588 	ld	0(iy),a
   121B 23                 3589 	inc	hl
   121C 7E                 3590 	ld	a,(hl)
   121D FD 77 01           3591 	ld	1(iy),a
                           3592 ;	genAssign
   1220 FD 21r0Cs00        3593 	ld	iy,#_CLR
   1224 FD 36 00 80        3594 	ld	0(iy),#0x80
                           3595 ;	genCall
                           3596 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1228 CDr57s15           3597 	call	_DrawLineSimple
                           3598 ;test.c:363: DRAW_LINE(g_Screen[5].x, g_Screen[5].y, g_Screen[6].x, g_Screen[6].y, 128);
                           3599 ;	genPlus
                           3600 ;	genPlusIncr
   122B 01r9Bs00           3601 	ld	bc,#_g_Screen + 30
                           3602 ;	genPointerGet
   122E 69                 3603 	ld	l,c
   122F 60                 3604 	ld	h,b
   1230 7E                 3605 	ld	a,(hl)
   1231 FD 21r00s00        3606 	ld	iy,#_SX
   1235 FD 77 00           3607 	ld	0(iy),a
   1238 23                 3608 	inc	hl
   1239 7E                 3609 	ld	a,(hl)
   123A FD 77 01           3610 	ld	1(iy),a
                           3611 ;	genPlus
                           3612 ;	genPlusIncr
                           3613 ;	genPlus
                           3614 ;	genPlusIncr
   123D 01r9Ds00           3615 	ld	bc,#_g_Screen + 30 + 2
                           3616 ;	genPointerGet
   1240 69                 3617 	ld	l,c
   1241 60                 3618 	ld	h,b
   1242 7E                 3619 	ld	a,(hl)
   1243 FD 21r02s00        3620 	ld	iy,#_SY
   1247 FD 77 00           3621 	ld	0(iy),a
   124A 23                 3622 	inc	hl
   124B 7E                 3623 	ld	a,(hl)
   124C FD 77 01           3624 	ld	1(iy),a
                           3625 ;	genPlus
                           3626 ;	genPlusIncr
   124F 01rA1s00           3627 	ld	bc,#_g_Screen + 36
                           3628 ;	genPointerGet
   1252 69                 3629 	ld	l,c
   1253 60                 3630 	ld	h,b
   1254 7E                 3631 	ld	a,(hl)
   1255 FD 21r04s00        3632 	ld	iy,#_DX
   1259 FD 77 00           3633 	ld	0(iy),a
   125C 23                 3634 	inc	hl
   125D 7E                 3635 	ld	a,(hl)
   125E FD 77 01           3636 	ld	1(iy),a
                           3637 ;	genPlus
                           3638 ;	genPlusIncr
                           3639 ;	genPlus
                           3640 ;	genPlusIncr
   1261 01rA3s00           3641 	ld	bc,#_g_Screen + 36 + 2
                           3642 ;	genPointerGet
   1264 69                 3643 	ld	l,c
   1265 60                 3644 	ld	h,b
   1266 7E                 3645 	ld	a,(hl)
   1267 FD 21r06s00        3646 	ld	iy,#_DY
   126B FD 77 00           3647 	ld	0(iy),a
   126E 23                 3648 	inc	hl
   126F 7E                 3649 	ld	a,(hl)
   1270 FD 77 01           3650 	ld	1(iy),a
                           3651 ;	genAssign
   1273 FD 21r0Cs00        3652 	ld	iy,#_CLR
   1277 FD 36 00 80        3653 	ld	0(iy),#0x80
                           3654 ;	genCall
                           3655 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   127B CDr57s15           3656 	call	_DrawLineSimple
                           3657 ;test.c:364: DRAW_LINE(g_Screen[6].x, g_Screen[6].y, g_Screen[7].x, g_Screen[7].y, 128);
                           3658 ;	genPlus
                           3659 ;	genPlusIncr
   127E 01rA1s00           3660 	ld	bc,#_g_Screen + 36
                           3661 ;	genPointerGet
   1281 69                 3662 	ld	l,c
   1282 60                 3663 	ld	h,b
   1283 7E                 3664 	ld	a,(hl)
   1284 FD 21r00s00        3665 	ld	iy,#_SX
   1288 FD 77 00           3666 	ld	0(iy),a
   128B 23                 3667 	inc	hl
   128C 7E                 3668 	ld	a,(hl)
   128D FD 77 01           3669 	ld	1(iy),a
                           3670 ;	genPlus
                           3671 ;	genPlusIncr
                           3672 ;	genPlus
                           3673 ;	genPlusIncr
   1290 01rA3s00           3674 	ld	bc,#_g_Screen + 36 + 2
                           3675 ;	genPointerGet
   1293 69                 3676 	ld	l,c
   1294 60                 3677 	ld	h,b
   1295 7E                 3678 	ld	a,(hl)
   1296 FD 21r02s00        3679 	ld	iy,#_SY
   129A FD 77 00           3680 	ld	0(iy),a
   129D 23                 3681 	inc	hl
   129E 7E                 3682 	ld	a,(hl)
   129F FD 77 01           3683 	ld	1(iy),a
                           3684 ;	genPlus
                           3685 ;	genPlusIncr
   12A2 01rA7s00           3686 	ld	bc,#_g_Screen + 42
                           3687 ;	genPointerGet
   12A5 69                 3688 	ld	l,c
   12A6 60                 3689 	ld	h,b
   12A7 7E                 3690 	ld	a,(hl)
   12A8 FD 21r04s00        3691 	ld	iy,#_DX
   12AC FD 77 00           3692 	ld	0(iy),a
   12AF 23                 3693 	inc	hl
   12B0 7E                 3694 	ld	a,(hl)
   12B1 FD 77 01           3695 	ld	1(iy),a
                           3696 ;	genPlus
                           3697 ;	genPlusIncr
                           3698 ;	genPlus
                           3699 ;	genPlusIncr
   12B4 01rA9s00           3700 	ld	bc,#_g_Screen + 42 + 2
                           3701 ;	genPointerGet
   12B7 69                 3702 	ld	l,c
   12B8 60                 3703 	ld	h,b
   12B9 7E                 3704 	ld	a,(hl)
   12BA FD 21r06s00        3705 	ld	iy,#_DY
   12BE FD 77 00           3706 	ld	0(iy),a
   12C1 23                 3707 	inc	hl
   12C2 7E                 3708 	ld	a,(hl)
   12C3 FD 77 01           3709 	ld	1(iy),a
                           3710 ;	genAssign
   12C6 FD 21r0Cs00        3711 	ld	iy,#_CLR
   12CA FD 36 00 80        3712 	ld	0(iy),#0x80
                           3713 ;	genCall
                           3714 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12CE CDr57s15           3715 	call	_DrawLineSimple
                           3716 ;test.c:365: DRAW_LINE(g_Screen[7].x, g_Screen[7].y, g_Screen[4].x, g_Screen[4].y, 128);
                           3717 ;	genPlus
                           3718 ;	genPlusIncr
   12D1 01rA7s00           3719 	ld	bc,#_g_Screen + 42
                           3720 ;	genPointerGet
   12D4 69                 3721 	ld	l,c
   12D5 60                 3722 	ld	h,b
   12D6 7E                 3723 	ld	a,(hl)
   12D7 FD 21r00s00        3724 	ld	iy,#_SX
   12DB FD 77 00           3725 	ld	0(iy),a
   12DE 23                 3726 	inc	hl
   12DF 7E                 3727 	ld	a,(hl)
   12E0 FD 77 01           3728 	ld	1(iy),a
                           3729 ;	genPlus
                           3730 ;	genPlusIncr
                           3731 ;	genPlus
                           3732 ;	genPlusIncr
   12E3 01rA9s00           3733 	ld	bc,#_g_Screen + 42 + 2
                           3734 ;	genPointerGet
   12E6 69                 3735 	ld	l,c
   12E7 60                 3736 	ld	h,b
   12E8 7E                 3737 	ld	a,(hl)
   12E9 FD 21r02s00        3738 	ld	iy,#_SY
   12ED FD 77 00           3739 	ld	0(iy),a
   12F0 23                 3740 	inc	hl
   12F1 7E                 3741 	ld	a,(hl)
   12F2 FD 77 01           3742 	ld	1(iy),a
                           3743 ;	genPlus
                           3744 ;	genPlusIncr
   12F5 01r95s00           3745 	ld	bc,#_g_Screen + 24
                           3746 ;	genPointerGet
   12F8 69                 3747 	ld	l,c
   12F9 60                 3748 	ld	h,b
   12FA 7E                 3749 	ld	a,(hl)
   12FB FD 21r04s00        3750 	ld	iy,#_DX
   12FF FD 77 00           3751 	ld	0(iy),a
   1302 23                 3752 	inc	hl
   1303 7E                 3753 	ld	a,(hl)
   1304 FD 77 01           3754 	ld	1(iy),a
                           3755 ;	genPlus
                           3756 ;	genPlusIncr
                           3757 ;	genPlus
                           3758 ;	genPlusIncr
   1307 01r97s00           3759 	ld	bc,#_g_Screen + 24 + 2
                           3760 ;	genPointerGet
   130A 69                 3761 	ld	l,c
   130B 60                 3762 	ld	h,b
   130C 7E                 3763 	ld	a,(hl)
   130D FD 21r06s00        3764 	ld	iy,#_DY
   1311 FD 77 00           3765 	ld	0(iy),a
   1314 23                 3766 	inc	hl
   1315 7E                 3767 	ld	a,(hl)
   1316 FD 77 01           3768 	ld	1(iy),a
                           3769 ;	genAssign
   1319 FD 21r0Cs00        3770 	ld	iy,#_CLR
   131D FD 36 00 80        3771 	ld	0(iy),#0x80
                           3772 ;	genCall
                           3773 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1321 CDr57s15           3774 	call	_DrawLineSimple
                           3775 ;test.c:367: DRAW_LINE(g_Screen[0].x, g_Screen[0].y, g_Screen[4].x, g_Screen[4].y, 128);
                           3776 ;	genPointerGet
   1324 21r7Ds00           3777 	ld	hl,#_g_Screen
   1327 7E                 3778 	ld	a,(hl)
   1328 FD 21r00s00        3779 	ld	iy,#_SX
   132C FD 77 00           3780 	ld	0(iy),a
   132F 23                 3781 	inc	hl
   1330 7E                 3782 	ld	a,(hl)
   1331 FD 77 01           3783 	ld	1(iy),a
                           3784 ;	genPlus
                           3785 ;	genPlusIncr
   1334 01r7Fs00           3786 	ld	bc,#_g_Screen + 2
                           3787 ;	genPointerGet
   1337 69                 3788 	ld	l,c
   1338 60                 3789 	ld	h,b
   1339 7E                 3790 	ld	a,(hl)
   133A FD 21r02s00        3791 	ld	iy,#_SY
   133E FD 77 00           3792 	ld	0(iy),a
   1341 23                 3793 	inc	hl
   1342 7E                 3794 	ld	a,(hl)
   1343 FD 77 01           3795 	ld	1(iy),a
                           3796 ;	genPlus
                           3797 ;	genPlusIncr
   1346 01r95s00           3798 	ld	bc,#_g_Screen + 24
                           3799 ;	genPointerGet
   1349 69                 3800 	ld	l,c
   134A 60                 3801 	ld	h,b
   134B 7E                 3802 	ld	a,(hl)
   134C FD 21r04s00        3803 	ld	iy,#_DX
   1350 FD 77 00           3804 	ld	0(iy),a
   1353 23                 3805 	inc	hl
   1354 7E                 3806 	ld	a,(hl)
   1355 FD 77 01           3807 	ld	1(iy),a
                           3808 ;	genPlus
                           3809 ;	genPlusIncr
                           3810 ;	genPlus
                           3811 ;	genPlusIncr
   1358 01r97s00           3812 	ld	bc,#_g_Screen + 24 + 2
                           3813 ;	genPointerGet
   135B 69                 3814 	ld	l,c
   135C 60                 3815 	ld	h,b
   135D 7E                 3816 	ld	a,(hl)
   135E FD 21r06s00        3817 	ld	iy,#_DY
   1362 FD 77 00           3818 	ld	0(iy),a
   1365 23                 3819 	inc	hl
   1366 7E                 3820 	ld	a,(hl)
   1367 FD 77 01           3821 	ld	1(iy),a
                           3822 ;	genAssign
   136A FD 21r0Cs00        3823 	ld	iy,#_CLR
   136E FD 36 00 80        3824 	ld	0(iy),#0x80
                           3825 ;	genCall
                           3826 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1372 CDr57s15           3827 	call	_DrawLineSimple
                           3828 ;test.c:368: DRAW_LINE(g_Screen[1].x, g_Screen[1].y, g_Screen[5].x, g_Screen[5].y, 128);
                           3829 ;	genPlus
                           3830 ;	genPlusIncr
   1375 01r83s00           3831 	ld	bc,#_g_Screen + 6
                           3832 ;	genPointerGet
   1378 69                 3833 	ld	l,c
   1379 60                 3834 	ld	h,b
   137A 7E                 3835 	ld	a,(hl)
   137B FD 21r00s00        3836 	ld	iy,#_SX
   137F FD 77 00           3837 	ld	0(iy),a
   1382 23                 3838 	inc	hl
   1383 7E                 3839 	ld	a,(hl)
   1384 FD 77 01           3840 	ld	1(iy),a
                           3841 ;	genPlus
                           3842 ;	genPlusIncr
                           3843 ;	genPlus
                           3844 ;	genPlusIncr
   1387 01r85s00           3845 	ld	bc,#_g_Screen + 6 + 2
                           3846 ;	genPointerGet
   138A 69                 3847 	ld	l,c
   138B 60                 3848 	ld	h,b
   138C 7E                 3849 	ld	a,(hl)
   138D FD 21r02s00        3850 	ld	iy,#_SY
   1391 FD 77 00           3851 	ld	0(iy),a
   1394 23                 3852 	inc	hl
   1395 7E                 3853 	ld	a,(hl)
   1396 FD 77 01           3854 	ld	1(iy),a
                           3855 ;	genPlus
                           3856 ;	genPlusIncr
   1399 01r9Bs00           3857 	ld	bc,#_g_Screen + 30
                           3858 ;	genPointerGet
   139C 69                 3859 	ld	l,c
   139D 60                 3860 	ld	h,b
   139E 7E                 3861 	ld	a,(hl)
   139F FD 21r04s00        3862 	ld	iy,#_DX
   13A3 FD 77 00           3863 	ld	0(iy),a
   13A6 23                 3864 	inc	hl
   13A7 7E                 3865 	ld	a,(hl)
   13A8 FD 77 01           3866 	ld	1(iy),a
                           3867 ;	genPlus
                           3868 ;	genPlusIncr
                           3869 ;	genPlus
                           3870 ;	genPlusIncr
   13AB 01r9Ds00           3871 	ld	bc,#_g_Screen + 30 + 2
                           3872 ;	genPointerGet
   13AE 69                 3873 	ld	l,c
   13AF 60                 3874 	ld	h,b
   13B0 7E                 3875 	ld	a,(hl)
   13B1 FD 21r06s00        3876 	ld	iy,#_DY
   13B5 FD 77 00           3877 	ld	0(iy),a
   13B8 23                 3878 	inc	hl
   13B9 7E                 3879 	ld	a,(hl)
   13BA FD 77 01           3880 	ld	1(iy),a
                           3881 ;	genAssign
   13BD FD 21r0Cs00        3882 	ld	iy,#_CLR
   13C1 FD 36 00 80        3883 	ld	0(iy),#0x80
                           3884 ;	genCall
                           3885 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13C5 CDr57s15           3886 	call	_DrawLineSimple
                           3887 ;test.c:369: DRAW_LINE(g_Screen[2].x, g_Screen[2].y, g_Screen[6].x, g_Screen[6].y, 128);
                           3888 ;	genPlus
                           3889 ;	genPlusIncr
   13C8 01r89s00           3890 	ld	bc,#_g_Screen + 12
                           3891 ;	genPointerGet
   13CB 69                 3892 	ld	l,c
   13CC 60                 3893 	ld	h,b
   13CD 7E                 3894 	ld	a,(hl)
   13CE FD 21r00s00        3895 	ld	iy,#_SX
   13D2 FD 77 00           3896 	ld	0(iy),a
   13D5 23                 3897 	inc	hl
   13D6 7E                 3898 	ld	a,(hl)
   13D7 FD 77 01           3899 	ld	1(iy),a
                           3900 ;	genPlus
                           3901 ;	genPlusIncr
                           3902 ;	genPlus
                           3903 ;	genPlusIncr
   13DA 01r8Bs00           3904 	ld	bc,#_g_Screen + 12 + 2
                           3905 ;	genPointerGet
   13DD 69                 3906 	ld	l,c
   13DE 60                 3907 	ld	h,b
   13DF 7E                 3908 	ld	a,(hl)
   13E0 FD 21r02s00        3909 	ld	iy,#_SY
   13E4 FD 77 00           3910 	ld	0(iy),a
   13E7 23                 3911 	inc	hl
   13E8 7E                 3912 	ld	a,(hl)
   13E9 FD 77 01           3913 	ld	1(iy),a
                           3914 ;	genPlus
                           3915 ;	genPlusIncr
   13EC 01rA1s00           3916 	ld	bc,#_g_Screen + 36
                           3917 ;	genPointerGet
   13EF 69                 3918 	ld	l,c
   13F0 60                 3919 	ld	h,b
   13F1 7E                 3920 	ld	a,(hl)
   13F2 FD 21r04s00        3921 	ld	iy,#_DX
   13F6 FD 77 00           3922 	ld	0(iy),a
   13F9 23                 3923 	inc	hl
   13FA 7E                 3924 	ld	a,(hl)
   13FB FD 77 01           3925 	ld	1(iy),a
                           3926 ;	genPlus
                           3927 ;	genPlusIncr
                           3928 ;	genPlus
                           3929 ;	genPlusIncr
   13FE 01rA3s00           3930 	ld	bc,#_g_Screen + 36 + 2
                           3931 ;	genPointerGet
   1401 69                 3932 	ld	l,c
   1402 60                 3933 	ld	h,b
   1403 7E                 3934 	ld	a,(hl)
   1404 FD 21r06s00        3935 	ld	iy,#_DY
   1408 FD 77 00           3936 	ld	0(iy),a
   140B 23                 3937 	inc	hl
   140C 7E                 3938 	ld	a,(hl)
   140D FD 77 01           3939 	ld	1(iy),a
                           3940 ;	genAssign
   1410 FD 21r0Cs00        3941 	ld	iy,#_CLR
   1414 FD 36 00 80        3942 	ld	0(iy),#0x80
                           3943 ;	genCall
                           3944 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1418 CDr57s15           3945 	call	_DrawLineSimple
                           3946 ;test.c:370: DRAW_LINE(g_Screen[3].x, g_Screen[3].y, g_Screen[7].x, g_Screen[7].y, 128);
                           3947 ;	genPlus
                           3948 ;	genPlusIncr
   141B 01r8Fs00           3949 	ld	bc,#_g_Screen + 18
                           3950 ;	genPointerGet
   141E 69                 3951 	ld	l,c
   141F 60                 3952 	ld	h,b
   1420 7E                 3953 	ld	a,(hl)
   1421 FD 21r00s00        3954 	ld	iy,#_SX
   1425 FD 77 00           3955 	ld	0(iy),a
   1428 23                 3956 	inc	hl
   1429 7E                 3957 	ld	a,(hl)
   142A FD 77 01           3958 	ld	1(iy),a
                           3959 ;	genPlus
                           3960 ;	genPlusIncr
                           3961 ;	genPlus
                           3962 ;	genPlusIncr
   142D 01r91s00           3963 	ld	bc,#_g_Screen + 18 + 2
                           3964 ;	genPointerGet
   1430 69                 3965 	ld	l,c
   1431 60                 3966 	ld	h,b
   1432 7E                 3967 	ld	a,(hl)
   1433 FD 21r02s00        3968 	ld	iy,#_SY
   1437 FD 77 00           3969 	ld	0(iy),a
   143A 23                 3970 	inc	hl
   143B 7E                 3971 	ld	a,(hl)
   143C FD 77 01           3972 	ld	1(iy),a
                           3973 ;	genPlus
                           3974 ;	genPlusIncr
   143F 01rA7s00           3975 	ld	bc,#_g_Screen + 42
                           3976 ;	genPointerGet
   1442 69                 3977 	ld	l,c
   1443 60                 3978 	ld	h,b
   1444 7E                 3979 	ld	a,(hl)
   1445 FD 21r04s00        3980 	ld	iy,#_DX
   1449 FD 77 00           3981 	ld	0(iy),a
   144C 23                 3982 	inc	hl
   144D 7E                 3983 	ld	a,(hl)
   144E FD 77 01           3984 	ld	1(iy),a
                           3985 ;	genPlus
                           3986 ;	genPlusIncr
                           3987 ;	genPlus
                           3988 ;	genPlusIncr
   1451 01rA9s00           3989 	ld	bc,#_g_Screen + 42 + 2
                           3990 ;	genPointerGet
   1454 69                 3991 	ld	l,c
   1455 60                 3992 	ld	h,b
   1456 7E                 3993 	ld	a,(hl)
   1457 FD 21r06s00        3994 	ld	iy,#_DY
   145B FD 77 00           3995 	ld	0(iy),a
   145E 23                 3996 	inc	hl
   145F 7E                 3997 	ld	a,(hl)
   1460 FD 77 01           3998 	ld	1(iy),a
                           3999 ;	genAssign
   1463 FD 21r0Cs00        4000 	ld	iy,#_CLR
   1467 FD 36 00 80        4001 	ld	0(iy),#0x80
                           4002 ;	genCall
                           4003 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   146B CDr57s15           4004 	call	_DrawLineSimple
                           4005 ;	genLabel
                           4006 ;	genEndFunction
   146E DD F9              4007 	ld	sp,ix
   1470 DD E1              4008 	pop	ix
   1472 C9                 4009 	ret
   1473                    4010 _Update_end::
                           4011 ;test.c:403: void SetScreen8()
                           4012 ;	genLabel
                           4013 ;	genFunction
                           4014 ;	---------------------------------
                           4015 ; Function SetScreen8
                           4016 ; ---------------------------------
   1473                    4017 _SetScreen8_start::
   1473                    4018 _SetScreen8:
                           4019 ;test.c:439: _endasm;
                           4020 ;	genInline
                           4021 	
                           4022 	
                           4023 	
                           4024 	
   1473 3A DF F3           4025 		 ld a,(#0xF3DF)
   1476 CB DF              4026 		 set #3,a
   1478 CB D7              4027 		 set #2,a
   147A CB CF              4028 		 set #1,a
   147C 32 DF F3           4029 		 ld (#0xF3DF),a
                           4030 	
   147F F3                 4031 		 di
                           4032 	
   1480 D3 99              4033 		 out (#0x99),a
   1482 3E 80              4034 		 ld a,#0x80+#0
   1484 D3 99              4035 		 out (#0x99),a
                           4036 	
                           4037 	
   1486 3A E0 F3           4038 		 ld a,(#0xF3E0)
   1489 CB A7              4039 		 res #4,a
   148B CB 9F              4040 		 res #3,a
   148D 32 E0 F3           4041 		 ld (#0xF3E0),a
                           4042 	
   1490 D3 99              4043 		 out (#0x99),a
   1492 3E 81              4044 		 ld a,#0x80+#1
   1494 D3 99              4045 		 out (#0x99),a
                           4046 	
                           4047 	
   1496 3E 1F              4048 		 ld a,#0x1F
   1498 D3 99              4049 		 out (#0x99),a
   149A 3E 82              4050 		 ld a,#0x80+2
   149C D3 99              4051 		 out (#0x99),a
                           4052 	
   149E FB                 4053 		 ei
                           4054 	
                           4055 		
                           4056 ;	genLabel
                           4057 ;	genEndFunction
   149F C9                 4058 	ret
   14A0                    4059 _SetScreen8_end::
                           4060 ;test.c:445: void SetPage8(i8 page)
                           4061 ;	genLabel
                           4062 ;	genFunction
                           4063 ;	---------------------------------
                           4064 ; Function SetPage8
                           4065 ; ---------------------------------
   14A0                    4066 _SetPage8_start::
   14A0                    4067 _SetPage8:
   14A0 DD E5              4068 	push	ix
   14A2 DD 21 00 00        4069 	ld	ix,#0
   14A6 DD 39              4070 	add	ix,sp
                           4071 ;test.c:459: _endasm;
                           4072 ;	genInline
                           4073 	
                           4074 	
   14A8 DD 7E 04           4075 		 ld a,4(ix)
   14AB F6 1F              4076 		 or #0x1F
   14AD F3                 4077 		 di
   14AE D3 99              4078 		 out (#0x99),a
   14B0 3E 82              4079 		 ld a,#0x80+2
   14B2 D3 99              4080 		 out (#0x99),a
   14B4 FB                 4081 		 ei
                           4082 	
                           4083 		
                           4084 ;	genLabel
                           4085 ;	genEndFunction
   14B5 DD E1              4086 	pop	ix
   14B7 C9                 4087 	ret
   14B8                    4088 _SetPage8_end::
                           4089 ;test.c:465: void DrawPoint8(char posX, char posY, char color)
                           4090 ;	genLabel
                           4091 ;	genFunction
                           4092 ;	---------------------------------
                           4093 ; Function DrawPoint8
                           4094 ; ---------------------------------
   14B8                    4095 _DrawPoint8_start::
   14B8                    4096 _DrawPoint8:
   14B8 DD E5              4097 	push	ix
   14BA DD 21 00 00        4098 	ld	ix,#0
   14BE DD 39              4099 	add	ix,sp
                           4100 ;test.c:469: WaitForVDP();
                           4101 ;	genCall
                           4102 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14C0 CDr1Bs16           4103 	call	_WaitForVDP
                           4104 ;test.c:517: _endasm;
                           4105 ;	genInline
                           4106 	
                           4107 	
                           4108 	
                           4109 	
   14C3 DD 7E 04           4110 		 ld a,4(ix)
   14C6 F3                 4111 		 di
   14C7 D3 99              4112 		 out (#0x99),a
   14C9 3E A4              4113 		 ld a,#0x80+#36
   14CB D3 99              4114 		 out (#0x99),a
                           4115 	
   14CD AF                 4116 		 xor a
   14CE D3 99              4117 		 out (#0x99),a
   14D0 3E A5              4118 		 ld a,#0x80+#37
   14D2 D3 99              4119 		 out (#0x99),a
                           4120 	
                           4121 	
   14D4 DD 7E 05           4122 		 ld a,5(ix)
   14D7 D3 99              4123 		 out (#0x99),a
   14D9 3E A6              4124 		 ld a,#0x80+#38
   14DB D3 99              4125 		 out (#0x99),a
                           4126 	
   14DD AF                 4127 		 xor a
   14DE D3 99              4128 		 out (#0x99),a
   14E0 3E A7              4129 		 ld a,#0x80+#39
   14E2 D3 99              4130 		 out (#0x99),a
                           4131 	
                           4132 	
   14E4 DD 7E 06           4133 		 ld a,6(ix)
   14E7 D3 99              4134 		 out (#0x99),a
   14E9 3E AC              4135 		 ld a,#0x80+#44
   14EB D3 99              4136 		 out (#0x99),a
                           4137 	
                           4138 	
   14ED AF                 4139 		 xor a
   14EE D3 99              4140 		 out (#0x99),a
   14F0 3E AD              4141 		 ld a,#0x80+#45
   14F2 D3 99              4142 		 out (#0x99),a
                           4143 	
                           4144 	
   14F4 3E 50              4145 		 ld a,#0x50
   14F6 D3 99              4146 		 out (#0x99),a
   14F8 3E AE              4147 		 ld a,#0x80+#46
   14FA D3 99              4148 		 out (#0x99),a
                           4149 	
   14FC FB                 4150 		 ei
                           4151 	
                           4152 		
                           4153 ;	genLabel
                           4154 ;	genEndFunction
   14FD DD E1              4155 	pop	ix
   14FF C9                 4156 	ret
   1500                    4157 _DrawPoint8_end::
                           4158 ;test.c:523: void DrawLine(int posX1, int posY1, int posX2, int posY2, char color)
                           4159 ;	genLabel
                           4160 ;	genFunction
                           4161 ;	---------------------------------
                           4162 ; Function DrawLine
                           4163 ; ---------------------------------
   1500                    4164 _DrawLine_start::
   1500                    4165 _DrawLine:
   1500 DD E5              4166 	push	ix
   1502 DD 21 00 00        4167 	ld	ix,#0
   1506 DD 39              4168 	add	ix,sp
                           4169 ;test.c:525: SX  = posX1; 
                           4170 ;	genAssign
                           4171 ;	AOP_STK for 
   1508 DD 7E 04           4172 	ld	a,4(ix)
   150B FD 21r00s00        4173 	ld	iy,#_SX
   150F FD 77 00           4174 	ld	0(iy),a
   1512 DD 7E 05           4175 	ld	a,5(ix)
   1515 FD 77 01           4176 	ld	1(iy),a
                           4177 ;test.c:526: SY  = posY1; 
                           4178 ;	genAssign
                           4179 ;	AOP_STK for 
   1518 DD 7E 06           4180 	ld	a,6(ix)
   151B FD 21r02s00        4181 	ld	iy,#_SY
   151F FD 77 00           4182 	ld	0(iy),a
   1522 DD 7E 07           4183 	ld	a,7(ix)
   1525 FD 77 01           4184 	ld	1(iy),a
                           4185 ;test.c:527: DX  = posX2; 
                           4186 ;	genAssign
                           4187 ;	AOP_STK for 
   1528 DD 7E 08           4188 	ld	a,8(ix)
   152B FD 21r04s00        4189 	ld	iy,#_DX
   152F FD 77 00           4190 	ld	0(iy),a
   1532 DD 7E 09           4191 	ld	a,9(ix)
   1535 FD 77 01           4192 	ld	1(iy),a
                           4193 ;test.c:528: DY  = posY2; 
                           4194 ;	genAssign
                           4195 ;	AOP_STK for 
   1538 DD 7E 0A           4196 	ld	a,10(ix)
   153B FD 21r06s00        4197 	ld	iy,#_DY
   153F FD 77 00           4198 	ld	0(iy),a
   1542 DD 7E 0B           4199 	ld	a,11(ix)
   1545 FD 77 01           4200 	ld	1(iy),a
                           4201 ;test.c:529: CLR = color;
                           4202 ;	genAssign
                           4203 ;	AOP_STK for 
   1548 DD 7E 0C           4204 	ld	a,12(ix)
   154B FD 21r0Cs00        4205 	ld	iy,#_CLR
   154F FD 77 00           4206 	ld	0(iy),a
                           4207 ;test.c:531: DrawLineSimple();
                           4208 ;	genCall
                           4209 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4210 ;	genLabel
                           4211 ;	genEndFunction
   1552 DD E1              4212 	pop	ix
   1554 C3r57s15           4213 	jp	_DrawLineSimple
   1557                    4214 _DrawLine_end::
                           4215 ;test.c:537: void DrawLineSimple()
                           4216 ;	genLabel
                           4217 ;	genFunction
                           4218 ;	---------------------------------
                           4219 ; Function DrawLineSimple
                           4220 ; ---------------------------------
   1557                    4221 _DrawLineSimple_start::
   1557                    4222 _DrawLineSimple:
                           4223 ;test.c:539: WaitForVDP();
                           4224 ;	genCall
                           4225 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1557 CDr1Bs16           4226 	call	_WaitForVDP
                           4227 ;test.c:611: _endasm;
                           4228 ;	genInline
                           4229 	
                           4230 	
                           4231 ;
                           4232 ;
                           4233 ;
                           4234 ;
                           4235 	
   155A                    4236 	Do_Line_VDP:
                           4237 ;
   155A AF                 4238 		       xor a ;
   155B 2Ar06s00           4239 		       ld hl,(_DY)
   155E ED 5Br02s00        4240 		       ld de,(_SY)
   1562 ED 52              4241 		       sbc hl,de ;
                           4242 	
   1564 17                 4243 		       rla ;
   1565 32r0Ds00           4244 		       ld (_ARG),a
                           4245 	
   1568 A7                 4246 		       and a ;
   1569 CAr72s15           4247 		       jp z,DeltaX ;
   156C EB                 4248 		       ex de,hl ;
   156D 21 00 00           4249 		 ld hl,#0 ;
   1570 ED 52              4250 		       sbc hl,de ;
                           4251 	
                           4252 ;
   1572                    4253 	DeltaX:
   1572 E5                 4254 	push	hl ;
   1573 AF                 4255 		       xor a ;
   1574 2Ar04s00           4256 		       ld hl,(_DX)
   1577 ED 5Br00s00        4257 		       ld de,(_SX)
   157B ED 52              4258 		       sbc hl,de ;
                           4259 	
   157D 3Ar0Ds00           4260 		       ld a,(_ARG)
   1580 17                 4261 		       rla
   1581 17                 4262 		       rla ;
   1582 32r0Ds00           4263 		       ld (_ARG),a
                           4264 	
   1585 CB 4F              4265 		       bit 1,a ;
   1587 CAr90s15           4266 		       jp z,cpHLDE ;
   158A EB                 4267 		       ex de,hl ;
   158B 21 00 00           4268 		 ld hl,#0 ;
   158E ED 52              4269 		       sbc hl,de ;
                           4270 	
                           4271 ;
   1590                    4272 	cpHLDE:
   1590 D1                 4273 	pop	de ;
   1591 AF                 4274 		       xor a ;
                           4275 	
   1592 E5                 4276 		       push hl
   1593 ED 52              4277 		       sbc hl,de ;
   1595 E1                 4278 		       pop hl
                           4279 	
   1596 3Ar0Ds00           4280 		       ld a,(_ARG)
   1599 17                 4281 		       rla ;
   159A 32r0Ds00           4282 		       ld (_ARG),a
                           4283 	
   159D CB 47              4284 		       bit 0,a ;
   159F CArA3s15           4285 		       jp z,DoIt ;
   15A2 EB                 4286 		       ex de,hl ;
                           4287 	
                           4288 ;
   15A3                    4289 	DoIt:
   15A3 22r08s00           4290 	ld	(_NX),hl
   15A6 ED 53r0As00        4291 		       ld (_NY),de
                           4292 	
   15AA 2Ar00s00           4293 		       ld hl,(_SX)
   15AD 22r04s00           4294 		       ld (_DX),hl
                           4295 	
   15B0 2Ar02s00           4296 		       ld hl,(_SY)
   15B3 22r06s00           4297 		       ld (_DY),hl
                           4298 	
   15B6 3E 70              4299 		       ld a,#0x70 ;
   15B8 32r0Es00           4300 		       ld (_CMD),a ;
                           4301 	
                           4302 		
                           4303 ;test.c:613: VPDCommand((int)&SX);
                           4304 ;	genCast
   15BB 0Er00              4305 	ld	c,#<_SX
   15BD 06s00              4306 	ld	b,#>_SX
                           4307 ;	genIpush
                           4308 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15BF C5                 4309 	push	bc
                           4310 ;	genCall
   15C0 CDrD2s15           4311 	call	_VPDCommand
   15C3 F1                 4312 	pop	af
                           4313 ;	genLabel
                           4314 ;	genEndFunction
   15C4 C9                 4315 	ret
   15C5                    4316 _DrawLineSimple_end::
                           4317 ;test.c:619: void DrawLine8(char posX1, char posY1, char posX2, char posY2, char color)
                           4318 ;	genLabel
                           4319 ;	genFunction
                           4320 ;	---------------------------------
                           4321 ; Function DrawLine8
                           4322 ; ---------------------------------
   15C5                    4323 _DrawLine8_start::
   15C5                    4324 _DrawLine8:
   15C5 DD E5              4325 	push	ix
   15C7 DD 21 00 00        4326 	ld	ix,#0
   15CB DD 39              4327 	add	ix,sp
                           4328 ;test.c:623: WaitForVDP();
                           4329 ;	genCall
                           4330 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4331 ;	genLabel
                           4332 ;	genEndFunction
   15CD DD E1              4333 	pop	ix
   15CF C3r1Bs16           4334 	jp	_WaitForVDP
   15D2                    4335 _DrawLine8_end::
                           4336 ;test.c:757: void VPDCommand(int address)
                           4337 ;	genLabel
                           4338 ;	genFunction
                           4339 ;	---------------------------------
                           4340 ; Function VPDCommand
                           4341 ; ---------------------------------
   15D2                    4342 _VPDCommand_start::
   15D2                    4343 _VPDCommand:
   15D2 DD E5              4344 	push	ix
   15D4 DD 21 00 00        4345 	ld	ix,#0
   15D8 DD 39              4346 	add	ix,sp
                           4347 ;test.c:761: WaitForVDP();
                           4348 ;	genCall
                           4349 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15DA CDr1Bs16           4350 	call	_WaitForVDP
                           4351 ;test.c:792: _endasm;
                           4352 ;	genInline
                           4353 	
                           4354 	
   15DD DD 6E 04           4355 		 ld l,4(ix)
   15E0 DD 66 05           4356 		 ld h,5(ix)
                           4357 	
                           4358 	
   15E3 3E 20              4359 		 ld a,#32
   15E5 F3                 4360 		 di
   15E6 D3 99              4361 		 out (#0x99),a
   15E8 3E 91              4362 		 ld a,#0x80+#17
   15EA D3 99              4363 		 out (#0x99),a
   15EC 0E 9B              4364 		 ld c,#0x99 +#2
   15EE ED A3              4365 		 outi
   15F0 ED A3              4366 		 outi
   15F2 ED A3              4367 		 outi
   15F4 ED A3              4368 		 outi
   15F6 ED A3              4369 		 outi
   15F8 ED A3              4370 		 outi
   15FA ED A3              4371 		 outi
   15FC ED A3              4372 		 outi
   15FE ED A3              4373 		 outi
   1600 ED A3              4374 		 outi
   1602 ED A3              4375 		 outi
   1604 ED A3              4376 		 outi
   1606 ED A3              4377 		 outi
   1608 ED A3              4378 		 outi
   160A FB                 4379 		 ei
   160B ED A3              4380 		 outi
                           4381 	
                           4382 		
                           4383 ;	genLabel
                           4384 ;	genEndFunction
   160D DD E1              4385 	pop	ix
   160F C9                 4386 	ret
   1610                    4387 _VPDCommand_end::
                           4388 ;test.c:798: void waitRetrace()
                           4389 ;	genLabel
                           4390 ;	genFunction
                           4391 ;	---------------------------------
                           4392 ; Function waitRetrace
                           4393 ; ---------------------------------
   1610                    4394 _waitRetrace_start::
   1610                    4395 _waitRetrace:
                           4396 ;test.c:810: _endasm;
                           4397 ;	genInline
                           4398 	
                           4399 	
   1610 F3                 4400 		 di
   1611                    4401 	 WAIT_RETRACE:
   1611 DB 99              4402 		 in a,(0x99)
   1613 E6 80              4403 		 and #0x80
   1615 FE 00              4404 		 cp #0
   1617 28 F8              4405 		 jr z, WAIT_RETRACE
   1619 FB                 4406 		 ei
                           4407 	
                           4408 		
                           4409 ;	genLabel
                           4410 ;	genEndFunction
   161A C9                 4411 	ret
   161B                    4412 _waitRetrace_end::
                           4413 ;test.c:816: void WaitForVDP()
                           4414 ;	genLabel
                           4415 ;	genFunction
                           4416 ;	---------------------------------
                           4417 ; Function WaitForVDP
                           4418 ; ---------------------------------
   161B                    4419 _WaitForVDP_start::
   161B                    4420 _WaitForVDP:
                           4421 ;test.c:837: _endasm;
                           4422 ;	genInline
                           4423 	
                           4424 	
                           4425 	
   161B 3E 02              4426 		 ld a,#2
   161D F3                 4427 		 di
   161E D3 99              4428 		 out (#0x99),a
   1620 3E 8F              4429 		 ld a,#0x80+#15
   1622 D3 99              4430 		 out (#0x99),a
   1624                    4431 	 WAIT_VDP:
   1624 00                 4432 		 nop
   1625 DB 99              4433 		 in a,(#0x99)
   1627 1F                 4434 		 rra
   1628 38 FA              4435 		 jr c,WAIT_VDP
   162A AF                 4436 		 xor a
   162B D3 99              4437 		 out (#0x99),a
   162D 3E 8F              4438 		 ld a,#0x80+#15
   162F D3 99              4439 		 out (#0x99),a
   1631 FB                 4440 		 ei
                           4441 	
                           4442 		
                           4443 ;	genLabel
                           4444 ;	genEndFunction
   1632 C9                 4445 	ret
   1633                    4446 _WaitForVDP_end::
                           4447 ;test.c:841: char Joystick(char n)
                           4448 ;	genLabel
                           4449 ;	genFunction
                           4450 ;	---------------------------------
                           4451 ; Function Joystick
                           4452 ; ---------------------------------
   1633                    4453 _Joystick_start::
   1633                    4454 _Joystick:
   1633 DD E5              4455 	push	ix
   1635 DD 21 00 00        4456 	ld	ix,#0
   1639 DD 39              4457 	add	ix,sp
                           4458 ;test.c:848: _endasm;
                           4459 ;	genInline
                           4460 	
   163B DD 7E 04           4461 		 ld a,4(ix)
   163E CD D5 00           4462 		 call 0x00d5
   1641 6F                 4463 		 ld l,a
                           4464 		
                           4465 ;	genLabel
                           4466 ;	genEndFunction
   1642 DD E1              4467 	pop	ix
   1644 C9                 4468 	ret
   1645                    4469 _Joystick_end::
                           4470 ;test.c:852: char Joytrig(char n)
                           4471 ;	genLabel
                           4472 ;	genFunction
                           4473 ;	---------------------------------
                           4474 ; Function Joytrig
                           4475 ; ---------------------------------
   1645                    4476 _Joytrig_start::
   1645                    4477 _Joytrig:
   1645 DD E5              4478 	push	ix
   1647 DD 21 00 00        4479 	ld	ix,#0
   164B DD 39              4480 	add	ix,sp
                           4481 ;test.c:860: _endasm;
                           4482 ;	genInline
                           4483 	
   164D DD 7E 04           4484 		 ld a,4(ix)
   1650 CD D8 00           4485 		 call 0x00d8
   1653 26 00              4486 		 ld h,#0x00
   1655 6F                 4487 		 ld l,a
                           4488 		
                           4489 ;	genLabel
                           4490 ;	genEndFunction
   1656 DD E1              4491 	pop	ix
   1658 C9                 4492 	ret
   1659                    4493 _Joytrig_end::
                           4494 ;test.c:864: u8 GetKeyMatrixLine(u8 n)
                           4495 ;	genLabel
                           4496 ;	genFunction
                           4497 ;	---------------------------------
                           4498 ; Function GetKeyMatrixLine
                           4499 ; ---------------------------------
   1659                    4500 _GetKeyMatrixLine_start::
   1659                    4501 _GetKeyMatrixLine:
   1659 DD E5              4502 	push	ix
   165B DD 21 00 00        4503 	ld	ix,#0
   165F DD 39              4504 	add	ix,sp
                           4505 ;test.c:871: _endasm;
                           4506 ;	genInline
                           4507 	
   1661 DD 7E 04           4508 		 ld a,4(ix)
   1664 CD 41 01           4509 		 call 0x0141
   1667 6F                 4510 		 ld l,a
                           4511 		
                           4512 ;	genLabel
                           4513 ;	genEndFunction
   1668 DD E1              4514 	pop	ix
   166A C9                 4515 	ret
   166B                    4516 _GetKeyMatrixLine_end::
                           4517 ;test.c:877: void WriteToVRAM(i16 addr, u8 value)
                           4518 ;	genLabel
                           4519 ;	genFunction
                           4520 ;	---------------------------------
                           4521 ; Function WriteToVRAM
                           4522 ; ---------------------------------
   166B                    4523 _WriteToVRAM_start::
   166B                    4524 _WriteToVRAM:
   166B DD E5              4525 	push	ix
   166D DD 21 00 00        4526 	ld	ix,#0
   1671 DD 39              4527 	add	ix,sp
                           4528 ;test.c:881: WaitForVDP();
                           4529 ;	genCall
                           4530 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1673 CDr1Bs16           4531 	call	_WaitForVDP
                           4532 ;test.c:906: _endasm;
                           4533 ;	genInline
                           4534 	
   1676 F3                 4535 		 di
                           4536 	
                           4537 		 ;
   1677 AF                 4538 		 xor a
   1678 D3 99              4539 		 out (#0x99),a
   167A 3E 8E              4540 		 ld a,#0x80+#14
   167C D3 99              4541 		 out (#0x99),a
                           4542 	
                           4543 		 ;
   167E DD 7E 04           4544 		 ld a,4(ix)
   1681 D3 99              4545 		 out (#0x99),a
                           4546 	
   1683 DD 7E 05           4547 		 ld a,5(ix)
   1686 E6 3F              4548 		 and #0x3F ;
   1688 F6 40              4549 		 or #0x40 ;
   168A D3 99              4550 		 out (#0x99),a
                           4551 	
                           4552 		 ;
   168C DD 7E 06           4553 		 ld a,6(ix)
   168F D3 98              4554 		 out (#0x98),a
                           4555 	
   1691 FB                 4556 		 ei
                           4557 		
                           4558 ;	genLabel
                           4559 ;	genEndFunction
   1692 DD E1              4560 	pop	ix
   1694 C9                 4561 	ret
   1695                    4562 _WriteToVRAM_end::
                           4563 	.area _CODE
                           4564 	.area _CABS
