                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.8.0 #5117 (Mar 23 2008) (MINGW32)
                              4 ; This file was generated Tue Jan 11 13:59:18 2011
                              5 ;--------------------------------------------------------
                              6 	.module test
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _g_Screen
                             14 	.globl _g_World
                             15 	.globl _g_Local
                             16 	.globl _g_AngleIndex
                             17 	.globl _g_Angle
                             18 	.globl _g_Position
                             19 	.globl _g_Camera
                             20 	.globl _CMD
                             21 	.globl _ARG
                             22 	.globl _CLR
                             23 	.globl _NY
                             24 	.globl _NX
                             25 	.globl _DY
                             26 	.globl _DX
                             27 	.globl _SY
                             28 	.globl _SX
                             29 	.globl _MainLoop
                             30 	.globl _SetShortVec
                             31 	.globl _TransXZ
                             32 	.globl _TransXZIndex
                             33 	.globl _Project
                             34 	.globl _Update
                             35 	.globl _SetScreen8
                             36 	.globl _SetPage8
                             37 	.globl _DrawPoint8
                             38 	.globl _DrawLine
                             39 	.globl _DrawLineSimple
                             40 	.globl _DrawLine8
                             41 	.globl _VPDCommand
                             42 	.globl _waitRetrace
                             43 	.globl _WaitForVDP
                             44 	.globl _Joystick
                             45 	.globl _Joytrig
                             46 	.globl _GetKeyMatrixLine
                             47 	.globl _WriteToVRAM
                             48 ;--------------------------------------------------------
                             49 ; special function registers
                             50 ;--------------------------------------------------------
                    00A8     51 _g_slotPort	=	0x00a8
                             52 ;--------------------------------------------------------
                             53 ;  ram data
                             54 ;--------------------------------------------------------
                             55 	.area _DATA
   0000                      56 _SX::
   0000                      57 	.ds 2
   0002                      58 _SY::
   0002                      59 	.ds 2
   0004                      60 _DX::
   0004                      61 	.ds 2
   0006                      62 _DY::
   0006                      63 	.ds 2
   0008                      64 _NX::
   0008                      65 	.ds 2
   000A                      66 _NY::
   000A                      67 	.ds 2
   000C                      68 _CLR::
   000C                      69 	.ds 1
   000D                      70 _ARG::
   000D                      71 	.ds 1
   000E                      72 _CMD::
   000E                      73 	.ds 1
   000F                      74 _g_Camera::
   000F                      75 	.ds 6
   0015                      76 _g_Position::
   0015                      77 	.ds 6
   001B                      78 _g_Angle::
   001B                      79 	.ds 1
   001C                      80 _g_AngleIndex::
   001C                      81 	.ds 1
   001D                      82 _g_Local::
   001D                      83 	.ds 48
   004D                      84 _g_World::
   004D                      85 	.ds 48
   007D                      86 _g_Screen::
   007D                      87 	.ds 48
                             88 ;--------------------------------------------------------
                             89 ; overlayable items in  ram 
                             90 ;--------------------------------------------------------
                             91 	.area _OVERLAY
                             92 ;--------------------------------------------------------
                             93 ; external initialized ram data
                             94 ;--------------------------------------------------------
                             95 ;--------------------------------------------------------
                             96 ; global & static initialisations
                             97 ;--------------------------------------------------------
                             98 	.area _HOME
                             99 	.area _GSINIT
                            100 	.area _GSFINAL
                            101 	.area _GSINIT
                            102 ;--------------------------------------------------------
                            103 ; Home
                            104 ;--------------------------------------------------------
                            105 	.area _HOME
                            106 	.area _HOME
                            107 ;--------------------------------------------------------
                            108 ; code
                            109 ;--------------------------------------------------------
                            110 	.area _CODE
                            111 ;test.c:147: void main(void)
                            112 ;	genLabel
                            113 ;	genFunction
                            114 ;	---------------------------------
                            115 ; Function main
                            116 ; ---------------------------------
   0000                     117 _main_start::
   0000                     118 _main:
                            119 ;test.c:153: _endasm;
                            120 ;	genInline
                            121 	
   0000 F3                  122 		 di
   0001 ED 7B 4A FC         123 		 ld sp, (#0xFC4A)
   0005 FB                  124 		 ei
                            125 		
                            126 ;test.c:155: g_slotPort = (g_slotPort & 0xCF) | ((g_slotPort & 0x0C) << 2);
                            127 ;	genAnd
                            128 ;Z80 AOP_SFR for _g_slotPort banked:0 bc:1 de:0
   0006 DB A8               129 	in	a,(_g_slotPort)
   0008 E6 CF               130 	and	a,#0xCF
   000A 4F                  131 	ld	c,a
                            132 ;	genAnd
                            133 ;Z80 AOP_SFR for _g_slotPort banked:0 bc:1 de:0
   000B DB A8               134 	in	a,(_g_slotPort)
   000D E6 0C               135 	and	a,#0x0C
   000F 47                  136 	ld	b,a
                            137 ;	genLeftShift
   0010 CB 20               138 	sla	b
   0012 CB 20               139 	sla	b
                            140 ;	genOr
                            141 ;Z80 AOP_SFR for _g_slotPort banked:0 bc:1 de:0
   0014 79                  142 	ld	a,c
   0015 B0                  143 	or	a,b
   0016 D3 A8               144 	out	(_g_slotPort),a
                            145 ;test.c:157: MainLoop();
                            146 ;	genCall
                            147 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            148 ;	genLabel
                            149 ;	genEndFunction
   0018 C3r1Bs00            150 	jp	_MainLoop
   001B                     151 _main_end::
                            152 ;test.c:166: void MainLoop()
                            153 ;	genLabel
                            154 ;	genFunction
                            155 ;	---------------------------------
                            156 ; Function MainLoop
                            157 ; ---------------------------------
   001B                     158 _MainLoop_start::
   001B                     159 _MainLoop:
   001B DD E5               160 	push	ix
   001D DD 21 00 00         161 	ld	ix,#0
   0021 DD 39               162 	add	ix,sp
   0023 21 E6 FF            163 	ld	hl,#-26
   0026 39                  164 	add	hl,sp
   0027 F9                  165 	ld	sp,hl
                            166 ;test.c:168: unsigned char clsScreen8[15] = 
                            167 ;	genAddrOf
   0028 21 0B 00            168 	ld	hl,#0x000B
   002B 39                  169 	add	hl,sp
   002C 4D                  170 	ld	c,l
   002D 44                  171 	ld	b,h
                            172 ;	genArrayInit
                            173 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   002E C5                  174 	push	bc
   002F 69                  175 	ld	l,c
   0030 60                  176 	ld	h,b
   0031 CDr00s00            177 	call	__initrleblock
   0034 F7 00               178 	.db	#-9,#0x00
   0036 06                  179 	.db	6
   0037 01 D4 00 00 00 C0   180 	.db	0x01, 0xD4, 0x00, 0x00, 0x00, 0xC0
   003D 00                  181 	.db	0
   003E C1                  182 	pop	bc
                            183 ;test.c:172: u8 x = 128, y = 96;
                            184 ;	genAssign
                            185 ;	AOP_STK for _MainLoop_x_1_1
   003F DD 36 F0 80         186 	ld	-16(ix),#0x80
                            187 ;	genAssign
                            188 ;	AOP_STK for _MainLoop_y_1_1
   0043 DD 36 EF 60         189 	ld	-17(ix),#0x60
                            190 ;test.c:179: SetShortVec(&g_Local[0], M2U(1),  M2U(1),  M2U(-1));
                            191 ;	genIpush
                            192 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 21 00 FF            193 	ld	hl,#0xFFFFFF00
   004A E5                  194 	push	hl
                            195 ;	genIpush
   004B 21 00 01            196 	ld	hl,#0x0100
   004E E5                  197 	push	hl
                            198 ;	genIpush
   004F 21 00 01            199 	ld	hl,#0x0100
   0052 E5                  200 	push	hl
                            201 ;	genIpush
   0053 21r1Ds00            202 	ld	hl,#_g_Local
   0056 E5                  203 	push	hl
                            204 ;	genCall
   0057 CDrADs06            205 	call	_SetShortVec
   005A F1                  206 	pop	af
   005B F1                  207 	pop	af
   005C F1                  208 	pop	af
   005D F1                  209 	pop	af
                            210 ;test.c:180: SetShortVec(&g_Local[1], M2U(1),  M2U(-1), M2U(-1));
                            211 ;	genPlus
                            212 ;	genPlusIncr
   005E 11r23s00            213 	ld	de,#_g_Local + 6
                            214 ;	genIpush
                            215 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0061 21 00 FF            216 	ld	hl,#0xFFFFFF00
   0064 E5                  217 	push	hl
                            218 ;	genIpush
   0065 21 00 FF            219 	ld	hl,#0xFFFFFF00
   0068 E5                  220 	push	hl
                            221 ;	genIpush
   0069 21 00 01            222 	ld	hl,#0x0100
   006C E5                  223 	push	hl
                            224 ;	genIpush
   006D D5                  225 	push	de
                            226 ;	genCall
   006E CDrADs06            227 	call	_SetShortVec
   0071 F1                  228 	pop	af
   0072 F1                  229 	pop	af
   0073 F1                  230 	pop	af
   0074 F1                  231 	pop	af
                            232 ;test.c:181: SetShortVec(&g_Local[2], M2U(-1), M2U(-1), M2U(-1));
                            233 ;	genPlus
                            234 ;	genPlusIncr
   0075 11r29s00            235 	ld	de,#_g_Local + 12
                            236 ;	genIpush
                            237 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0078 21 00 FF            238 	ld	hl,#0xFFFFFF00
   007B E5                  239 	push	hl
                            240 ;	genIpush
   007C 21 00 FF            241 	ld	hl,#0xFFFFFF00
   007F E5                  242 	push	hl
                            243 ;	genIpush
   0080 21 00 FF            244 	ld	hl,#0xFFFFFF00
   0083 E5                  245 	push	hl
                            246 ;	genIpush
   0084 D5                  247 	push	de
                            248 ;	genCall
   0085 CDrADs06            249 	call	_SetShortVec
   0088 F1                  250 	pop	af
   0089 F1                  251 	pop	af
   008A F1                  252 	pop	af
   008B F1                  253 	pop	af
                            254 ;test.c:182: SetShortVec(&g_Local[3], M2U(-1), M2U(1),  M2U(-1));
                            255 ;	genPlus
                            256 ;	genPlusIncr
   008C 11r2Fs00            257 	ld	de,#_g_Local + 18
                            258 ;	genIpush
                            259 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008F 21 00 FF            260 	ld	hl,#0xFFFFFF00
   0092 E5                  261 	push	hl
                            262 ;	genIpush
   0093 21 00 01            263 	ld	hl,#0x0100
   0096 E5                  264 	push	hl
                            265 ;	genIpush
   0097 21 00 FF            266 	ld	hl,#0xFFFFFF00
   009A E5                  267 	push	hl
                            268 ;	genIpush
   009B D5                  269 	push	de
                            270 ;	genCall
   009C CDrADs06            271 	call	_SetShortVec
   009F F1                  272 	pop	af
   00A0 F1                  273 	pop	af
   00A1 F1                  274 	pop	af
   00A2 F1                  275 	pop	af
                            276 ;test.c:183: SetShortVec(&g_Local[4], M2U(1),  M2U(1),  M2U(1));
                            277 ;	genPlus
                            278 ;	genPlusIncr
   00A3 11r35s00            279 	ld	de,#_g_Local + 24
                            280 ;	genIpush
                            281 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A6 21 00 01            282 	ld	hl,#0x0100
   00A9 E5                  283 	push	hl
                            284 ;	genIpush
   00AA 21 00 01            285 	ld	hl,#0x0100
   00AD E5                  286 	push	hl
                            287 ;	genIpush
   00AE 21 00 01            288 	ld	hl,#0x0100
   00B1 E5                  289 	push	hl
                            290 ;	genIpush
   00B2 D5                  291 	push	de
                            292 ;	genCall
   00B3 CDrADs06            293 	call	_SetShortVec
   00B6 F1                  294 	pop	af
   00B7 F1                  295 	pop	af
   00B8 F1                  296 	pop	af
   00B9 F1                  297 	pop	af
                            298 ;test.c:184: SetShortVec(&g_Local[5], M2U(1),  M2U(-1), M2U(1));
                            299 ;	genPlus
                            300 ;	genPlusIncr
   00BA 11r3Bs00            301 	ld	de,#_g_Local + 30
                            302 ;	genIpush
                            303 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00BD 21 00 01            304 	ld	hl,#0x0100
   00C0 E5                  305 	push	hl
                            306 ;	genIpush
   00C1 21 00 FF            307 	ld	hl,#0xFFFFFF00
   00C4 E5                  308 	push	hl
                            309 ;	genIpush
   00C5 21 00 01            310 	ld	hl,#0x0100
   00C8 E5                  311 	push	hl
                            312 ;	genIpush
   00C9 D5                  313 	push	de
                            314 ;	genCall
   00CA CDrADs06            315 	call	_SetShortVec
   00CD F1                  316 	pop	af
   00CE F1                  317 	pop	af
   00CF F1                  318 	pop	af
   00D0 F1                  319 	pop	af
                            320 ;test.c:185: SetShortVec(&g_Local[6], M2U(-1), M2U(-1), M2U(1));
                            321 ;	genPlus
                            322 ;	genPlusIncr
   00D1 11r41s00            323 	ld	de,#_g_Local + 36
                            324 ;	genIpush
                            325 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D4 21 00 01            326 	ld	hl,#0x0100
   00D7 E5                  327 	push	hl
                            328 ;	genIpush
   00D8 21 00 FF            329 	ld	hl,#0xFFFFFF00
   00DB E5                  330 	push	hl
                            331 ;	genIpush
   00DC 21 00 FF            332 	ld	hl,#0xFFFFFF00
   00DF E5                  333 	push	hl
                            334 ;	genIpush
   00E0 D5                  335 	push	de
                            336 ;	genCall
   00E1 CDrADs06            337 	call	_SetShortVec
   00E4 F1                  338 	pop	af
   00E5 F1                  339 	pop	af
   00E6 F1                  340 	pop	af
   00E7 F1                  341 	pop	af
                            342 ;test.c:186: SetShortVec(&g_Local[7], M2U(-1), M2U(1),  M2U(1));
                            343 ;	genPlus
                            344 ;	genPlusIncr
   00E8 11r47s00            345 	ld	de,#_g_Local + 42
                            346 ;	genIpush
                            347 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00EB 21 00 01            348 	ld	hl,#0x0100
   00EE E5                  349 	push	hl
                            350 ;	genIpush
   00EF 21 00 01            351 	ld	hl,#0x0100
   00F2 E5                  352 	push	hl
                            353 ;	genIpush
   00F3 21 00 FF            354 	ld	hl,#0xFFFFFF00
   00F6 E5                  355 	push	hl
                            356 ;	genIpush
   00F7 D5                  357 	push	de
                            358 ;	genCall
   00F8 CDrADs06            359 	call	_SetShortVec
   00FB F1                  360 	pop	af
   00FC F1                  361 	pop	af
   00FD F1                  362 	pop	af
   00FE F1                  363 	pop	af
                            364 ;test.c:188: SetShortVec(&g_Camera, M2U(0), M2U(0), M2U(3));
                            365 ;	genIpush
                            366 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00FF 21 00 03            367 	ld	hl,#0x0300
   0102 E5                  368 	push	hl
                            369 ;	genIpush
   0103 21 00 00            370 	ld	hl,#0x0000
   0106 E5                  371 	push	hl
                            372 ;	genIpush
   0107 21 00 00            373 	ld	hl,#0x0000
   010A E5                  374 	push	hl
                            375 ;	genIpush
   010B 21r0Fs00            376 	ld	hl,#_g_Camera
   010E E5                  377 	push	hl
                            378 ;	genCall
   010F CDrADs06            379 	call	_SetShortVec
   0112 F1                  380 	pop	af
   0113 F1                  381 	pop	af
   0114 F1                  382 	pop	af
   0115 F1                  383 	pop	af
                            384 ;test.c:190: SetShortVec(&g_Position, M2U(0), M2U(0), M2U(0));
                            385 ;	genIpush
                            386 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0116 21 00 00            387 	ld	hl,#0x0000
   0119 E5                  388 	push	hl
                            389 ;	genIpush
   011A 21 00 00            390 	ld	hl,#0x0000
   011D E5                  391 	push	hl
                            392 ;	genIpush
   011E 21 00 00            393 	ld	hl,#0x0000
   0121 E5                  394 	push	hl
                            395 ;	genIpush
   0122 21r15s00            396 	ld	hl,#_g_Position
   0125 E5                  397 	push	hl
                            398 ;	genCall
   0126 CDrADs06            399 	call	_SetShortVec
   0129 F1                  400 	pop	af
   012A F1                  401 	pop	af
   012B F1                  402 	pop	af
   012C F1                  403 	pop	af
                            404 ;test.c:192: g_Angle = 30;
                            405 ;	genAssign
   012D FD 21r1Bs00         406 	ld	iy,#_g_Angle
   0131 FD 36 00 1E         407 	ld	0(iy),#0x1E
                            408 ;test.c:194: SetScreen8();
                            409 ;	genCall
                            410 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0135 CDr90s14            411 	call	_SetScreen8
                            412 ;test.c:196: VPDCommand((int)&clsScreen8);
                            413 ;	genAddrOf
   0138 21 0B 00            414 	ld	hl,#0x000B
   013B 39                  415 	add	hl,sp
   013C 5D                  416 	ld	e,l
   013D 54                  417 	ld	d,h
                            418 ;	genCast
                            419 ;	genIpush
                            420 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   013E D5                  421 	push	de
                            422 ;	genCall
   013F CDrEFs15            423 	call	_VPDCommand
   0142 F1                  424 	pop	af
                            425 ;test.c:198: while(bEnd == 0)
                            426 ;	genLabel
   0143                     427 00115$:
                            428 ;test.c:200: DrawPoint8(x,     y - 1, 0);
                            429 ;	genMinus
                            430 ;	AOP_STK for _MainLoop_y_1_1
   0143 DD 7E EF            431 	ld	a,-17(ix)
   0146 C6 FF               432 	add	a,#0xFF
   0148 5F                  433 	ld	e,a
                            434 ;	genIpush
                            435 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0149 D5                  436 	push	de
   014A 3E 00               437 	ld	a,#0x00
   014C F5                  438 	push	af
   014D 33                  439 	inc	sp
                            440 ;	genIpush
   014E 7B                  441 	ld	a,e
   014F F5                  442 	push	af
   0150 33                  443 	inc	sp
                            444 ;	genIpush
                            445 ;	AOP_STK for _MainLoop_x_1_1
   0151 DD 7E F0            446 	ld	a,-16(ix)
   0154 F5                  447 	push	af
   0155 33                  448 	inc	sp
                            449 ;	genCall
   0156 CDrD5s14            450 	call	_DrawPoint8
   0159 F1                  451 	pop	af
   015A 33                  452 	inc	sp
   015B D1                  453 	pop	de
                            454 ;test.c:201: DrawPoint8(x + 1, y,     0);
                            455 ;	genPlus
                            456 ;	AOP_STK for _MainLoop_x_1_1
                            457 ;	genPlusIncr
   015C DD 56 F0            458 	ld	d,-16(ix)
   015F 14                  459 	inc	d
                            460 ;	genIpush
                            461 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0160 D5                  462 	push	de
   0161 3E 00               463 	ld	a,#0x00
   0163 F5                  464 	push	af
   0164 33                  465 	inc	sp
                            466 ;	genIpush
                            467 ;	AOP_STK for _MainLoop_y_1_1
   0165 DD 7E EF            468 	ld	a,-17(ix)
   0168 F5                  469 	push	af
   0169 33                  470 	inc	sp
                            471 ;	genIpush
   016A D5                  472 	push	de
   016B 33                  473 	inc	sp
                            474 ;	genCall
   016C CDrD5s14            475 	call	_DrawPoint8
   016F F1                  476 	pop	af
   0170 33                  477 	inc	sp
   0171 D1                  478 	pop	de
                            479 ;test.c:202: DrawPoint8(x - 1, y,     0);
                            480 ;	genMinus
                            481 ;	AOP_STK for _MainLoop_x_1_1
                            482 ;	AOP_STK for _MainLoop_sloc0_1_0
   0172 DD 7E F0            483 	ld	a,-16(ix)
   0175 C6 FF               484 	add	a,#0xFF
   0177 DD 77 E9            485 	ld	-23(ix),a
                            486 ;	genIpush
                            487 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   017A D5                  488 	push	de
   017B 3E 00               489 	ld	a,#0x00
   017D F5                  490 	push	af
   017E 33                  491 	inc	sp
                            492 ;	genIpush
                            493 ;	AOP_STK for _MainLoop_y_1_1
   017F DD 7E EF            494 	ld	a,-17(ix)
   0182 F5                  495 	push	af
   0183 33                  496 	inc	sp
                            497 ;	genIpush
                            498 ;	AOP_STK for _MainLoop_sloc0_1_0
   0184 DD 7E E9            499 	ld	a,-23(ix)
   0187 F5                  500 	push	af
   0188 33                  501 	inc	sp
                            502 ;	genCall
   0189 CDrD5s14            503 	call	_DrawPoint8
   018C F1                  504 	pop	af
   018D 33                  505 	inc	sp
   018E D1                  506 	pop	de
                            507 ;test.c:203: DrawPoint8(x,     y + 1, 0);
                            508 ;	genPlus
                            509 ;	AOP_STK for _MainLoop_y_1_1
                            510 ;	AOP_STK for _MainLoop_sloc1_1_0
                            511 ;	genPlusIncr
   018F DD 7E EF            512 	ld	a,-17(ix)
   0192 C6 01               513 	add	a,#0x01
   0194 DD 77 E8            514 	ld	-24(ix),a
                            515 ;	genIpush
                            516 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0197 D5                  517 	push	de
   0198 3E 00               518 	ld	a,#0x00
   019A F5                  519 	push	af
   019B 33                  520 	inc	sp
                            521 ;	genIpush
                            522 ;	AOP_STK for _MainLoop_sloc1_1_0
   019C DD 7E E8            523 	ld	a,-24(ix)
   019F F5                  524 	push	af
   01A0 33                  525 	inc	sp
                            526 ;	genIpush
                            527 ;	AOP_STK for _MainLoop_x_1_1
   01A1 DD 7E F0            528 	ld	a,-16(ix)
   01A4 F5                  529 	push	af
   01A5 33                  530 	inc	sp
                            531 ;	genCall
   01A6 CDrD5s14            532 	call	_DrawPoint8
   01A9 F1                  533 	pop	af
   01AA 33                  534 	inc	sp
   01AB D1                  535 	pop	de
                            536 ;test.c:210: WriteToVRAM(x, y, 0x0F);
                            537 ;	genIpush
                            538 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   01AC D5                  539 	push	de
   01AD 3E 0F               540 	ld	a,#0x0F
   01AF F5                  541 	push	af
   01B0 33                  542 	inc	sp
                            543 ;	genIpush
                            544 ;	AOP_STK for _MainLoop_y_1_1
   01B1 DD 7E EF            545 	ld	a,-17(ix)
   01B4 F5                  546 	push	af
   01B5 33                  547 	inc	sp
                            548 ;	genIpush
                            549 ;	AOP_STK for _MainLoop_x_1_1
   01B6 DD 7E F0            550 	ld	a,-16(ix)
   01B9 F5                  551 	push	af
   01BA 33                  552 	inc	sp
                            553 ;	genCall
   01BB CDr88s16            554 	call	_WriteToVRAM
   01BE F1                  555 	pop	af
   01BF 33                  556 	inc	sp
   01C0 D1                  557 	pop	de
                            558 ;test.c:213: if((i = Joystick(0) | Joystick(1) | Joystick(2)) != 0)
                            559 ;	genIpush
                            560 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   01C1 D5                  561 	push	de
   01C2 3E 00               562 	ld	a,#0x00
   01C4 F5                  563 	push	af
   01C5 33                  564 	inc	sp
                            565 ;	genCall
   01C6 CDr50s16            566 	call	_Joystick
   01C9 45                  567 	ld	b,l
   01CA 33                  568 	inc	sp
   01CB D1                  569 	pop	de
                            570 ;	genIpush
                            571 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   01CC C5                  572 	push	bc
   01CD D5                  573 	push	de
   01CE 3E 01               574 	ld	a,#0x01
   01D0 F5                  575 	push	af
   01D1 33                  576 	inc	sp
                            577 ;	genCall
   01D2 CDr50s16            578 	call	_Joystick
   01D5 4D                  579 	ld	c,l
   01D6 33                  580 	inc	sp
   01D7 D1                  581 	pop	de
   01D8 F1                  582 	pop	af
                            583 ;	genOr
   01D9 47                  584 	ld	b,a
   01DA B1                  585 	or	a,c
   01DB 47                  586 	ld	b,a
                            587 ;	genIpush
                            588 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   01DC C5                  589 	push	bc
   01DD D5                  590 	push	de
   01DE 3E 02               591 	ld	a,#0x02
   01E0 F5                  592 	push	af
   01E1 33                  593 	inc	sp
                            594 ;	genCall
   01E2 CDr50s16            595 	call	_Joystick
   01E5 4D                  596 	ld	c,l
   01E6 33                  597 	inc	sp
   01E7 D1                  598 	pop	de
   01E8 F1                  599 	pop	af
                            600 ;	genOr
   01E9 47                  601 	ld	b,a
   01EA B1                  602 	or	a,c
   01EB 47                  603 	ld	b,a
                            604 ;	genCast
                            605 ;	AOP_STK for _MainLoop_sloc2_1_0
   01EC DD 70 E6            606 	ld	-26(ix),b
   01EF 78                  607 	ld	a,b
   01F0 17                  608 	rla	
   01F1 9F                  609 	sbc	a,a
   01F2 DD 77 E7            610 	ld	-25(ix),a
                            611 ;	genAssign
                            612 ;	AOP_STK for _MainLoop_sloc2_1_0
   01F5 DD 4E E6            613 	ld	c,-26(ix)
   01F8 DD 46 E7            614 	ld	b,-25(ix)
                            615 ;	genIfx
                            616 ;	AOP_STK for _MainLoop_sloc2_1_0
   01FB DD 7E E6            617 	ld	a,-26(ix)
   01FE DD B6 E7            618 	or	a,-25(ix)
   0201 CAr86s02            619 	jp	Z,00111$
                            620 ;test.c:215: switch (i)
                            621 ;	genCmpLt
   0204 79                  622 	ld	a,c
   0205 D6 01               623 	sub	a,#0x01
   0207 78                  624 	ld	a,b
   0208 DE 00               625 	sbc	a,#0x00
   020A FAr86s02            626 	jp	M,00111$
                            627 ;	genCmpGt
   020D 3E 08               628 	ld	a,#0x08
   020F 91                  629 	sub	a,c
   0210 3E 00               630 	ld	a,#0x00
   0212 98                  631 	sbc	a,b
   0213 FAr86s02            632 	jp	M,00111$
                            633 ;	genMinus
   0216 79                  634 	ld	a,c
   0217 C6 FF               635 	add	a,#0xFF
   0219 4F                  636 	ld	c,a
                            637 ;	genJumpTab
   021A D5                  638 	push	de
   021B 59                  639 	ld	e,c
   021C 16 00               640 	ld	d,#0x00
   021E 21r26s02            641 	ld	hl,#00139$
   0221 19                  642 	add	hl,de
   0222 19                  643 	add	hl,de
   0223 19                  644 	add	hl,de
   0224 D1                  645 	pop	de
   0225 E9                  646 	jp	(hl)
   0226                     647 00139$:
   0226 C3r3Es02            648 	jp	00101$
   0229 C3r44s02            649 	jp	00102$
   022C C3r4Es02            650 	jp	00103$
   022F C3r54s02            651 	jp	00104$
   0232 C3r5Fs02            652 	jp	00105$
   0235 C3r67s02            653 	jp	00106$
   0238 C3r75s02            654 	jp	00107$
   023B C3r7Ds02            655 	jp	00108$
                            656 ;test.c:217: case 1: y--; break;
                            657 ;	genLabel
   023E                     658 00101$:
                            659 ;	genAssign
   023E 4B                  660 	ld	c,e
                            661 ;	genAssign
                            662 ;	AOP_STK for _MainLoop_y_1_1
   023F DD 71 EF            663 	ld	-17(ix),c
                            664 ;	genGoto
   0242 18 42               665 	jr	00111$
                            666 ;test.c:218: case 2: y--; x++; break;
                            667 ;	genLabel
   0244                     668 00102$:
                            669 ;	genAssign
   0244 4B                  670 	ld	c,e
                            671 ;	genAssign
                            672 ;	AOP_STK for _MainLoop_y_1_1
   0245 DD 71 EF            673 	ld	-17(ix),c
                            674 ;	genAssign
   0248 4A                  675 	ld	c,d
                            676 ;	genAssign
                            677 ;	AOP_STK for _MainLoop_x_1_1
   0249 DD 71 F0            678 	ld	-16(ix),c
                            679 ;	genGoto
   024C 18 38               680 	jr	00111$
                            681 ;test.c:219: case 3: x++; break;
                            682 ;	genLabel
   024E                     683 00103$:
                            684 ;	genAssign
   024E 4A                  685 	ld	c,d
                            686 ;	genAssign
                            687 ;	AOP_STK for _MainLoop_x_1_1
   024F DD 71 F0            688 	ld	-16(ix),c
                            689 ;	genGoto
   0252 18 32               690 	jr	00111$
                            691 ;test.c:220: case 4: y++; x++; break;
                            692 ;	genLabel
   0254                     693 00104$:
                            694 ;	genAssign
                            695 ;	AOP_STK for _MainLoop_sloc1_1_0
   0254 DD 4E E8            696 	ld	c,-24(ix)
                            697 ;	genAssign
                            698 ;	AOP_STK for _MainLoop_y_1_1
   0257 DD 71 EF            699 	ld	-17(ix),c
                            700 ;	genAssign
                            701 ;	(registers are the same)
                            702 ;	genAssign
                            703 ;	AOP_STK for _MainLoop_x_1_1
   025A DD 72 F0            704 	ld	-16(ix),d
                            705 ;	genGoto
   025D 18 27               706 	jr	00111$
                            707 ;test.c:221: case 5: y++; break;
                            708 ;	genLabel
   025F                     709 00105$:
                            710 ;	genAssign
                            711 ;	AOP_STK for _MainLoop_sloc1_1_0
   025F DD 4E E8            712 	ld	c,-24(ix)
                            713 ;	genAssign
                            714 ;	AOP_STK for _MainLoop_y_1_1
   0262 DD 71 EF            715 	ld	-17(ix),c
                            716 ;	genGoto
   0265 18 1F               717 	jr	00111$
                            718 ;test.c:222: case 6: y++; x--; break;
                            719 ;	genLabel
   0267                     720 00106$:
                            721 ;	genAssign
                            722 ;	AOP_STK for _MainLoop_sloc1_1_0
   0267 DD 4E E8            723 	ld	c,-24(ix)
                            724 ;	genAssign
                            725 ;	AOP_STK for _MainLoop_y_1_1
   026A DD 71 EF            726 	ld	-17(ix),c
                            727 ;	genAssign
                            728 ;	AOP_STK for _MainLoop_sloc0_1_0
   026D DD 4E E9            729 	ld	c,-23(ix)
                            730 ;	genAssign
                            731 ;	AOP_STK for _MainLoop_x_1_1
   0270 DD 71 F0            732 	ld	-16(ix),c
                            733 ;	genGoto
   0273 18 11               734 	jr	00111$
                            735 ;test.c:223: case 7: x--; break;
                            736 ;	genLabel
   0275                     737 00107$:
                            738 ;	genAssign
                            739 ;	AOP_STK for _MainLoop_sloc0_1_0
   0275 DD 4E E9            740 	ld	c,-23(ix)
                            741 ;	genAssign
                            742 ;	AOP_STK for _MainLoop_x_1_1
   0278 DD 71 F0            743 	ld	-16(ix),c
                            744 ;	genGoto
   027B 18 09               745 	jr	00111$
                            746 ;test.c:224: case 8: y--; x--; break;
                            747 ;	genLabel
   027D                     748 00108$:
                            749 ;	genAssign
                            750 ;	(registers are the same)
                            751 ;	genAssign
                            752 ;	AOP_STK for _MainLoop_y_1_1
   027D DD 73 EF            753 	ld	-17(ix),e
                            754 ;	genAssign
                            755 ;	AOP_STK for _MainLoop_sloc0_1_0
   0280 DD 4E E9            756 	ld	c,-23(ix)
                            757 ;	genAssign
                            758 ;	AOP_STK for _MainLoop_x_1_1
   0283 DD 71 F0            759 	ld	-16(ix),c
                            760 ;test.c:225: }
                            761 ;	genLabel
   0286                     762 00111$:
                            763 ;test.c:244: DrawPoint8(x,     y - 1, 255);
                            764 ;	genMinus
                            765 ;	AOP_STK for _MainLoop_y_1_1
   0286 DD 7E EF            766 	ld	a,-17(ix)
   0289 C6 FF               767 	add	a,#0xFF
   028B 4F                  768 	ld	c,a
                            769 ;	genIpush
                            770 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   028C 3E FF               771 	ld	a,#0xFF
   028E F5                  772 	push	af
   028F 33                  773 	inc	sp
                            774 ;	genIpush
   0290 79                  775 	ld	a,c
   0291 F5                  776 	push	af
   0292 33                  777 	inc	sp
                            778 ;	genIpush
                            779 ;	AOP_STK for _MainLoop_x_1_1
   0293 DD 7E F0            780 	ld	a,-16(ix)
   0296 F5                  781 	push	af
   0297 33                  782 	inc	sp
                            783 ;	genCall
   0298 CDrD5s14            784 	call	_DrawPoint8
   029B F1                  785 	pop	af
   029C 33                  786 	inc	sp
                            787 ;test.c:245: DrawPoint8(x + 1, y,     255);
                            788 ;	genPlus
                            789 ;	AOP_STK for _MainLoop_x_1_1
                            790 ;	genPlusIncr
   029D DD 4E F0            791 	ld	c,-16(ix)
   02A0 0C                  792 	inc	c
                            793 ;	genIpush
                            794 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02A1 3E FF               795 	ld	a,#0xFF
   02A3 F5                  796 	push	af
   02A4 33                  797 	inc	sp
                            798 ;	genIpush
                            799 ;	AOP_STK for _MainLoop_y_1_1
   02A5 DD 7E EF            800 	ld	a,-17(ix)
   02A8 F5                  801 	push	af
   02A9 33                  802 	inc	sp
                            803 ;	genIpush
   02AA 79                  804 	ld	a,c
   02AB F5                  805 	push	af
   02AC 33                  806 	inc	sp
                            807 ;	genCall
   02AD CDrD5s14            808 	call	_DrawPoint8
   02B0 F1                  809 	pop	af
   02B1 33                  810 	inc	sp
                            811 ;test.c:246: DrawPoint8(x - 1, y,     255);
                            812 ;	genMinus
                            813 ;	AOP_STK for _MainLoop_x_1_1
   02B2 DD 7E F0            814 	ld	a,-16(ix)
   02B5 C6 FF               815 	add	a,#0xFF
   02B7 4F                  816 	ld	c,a
                            817 ;	genIpush
                            818 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02B8 3E FF               819 	ld	a,#0xFF
   02BA F5                  820 	push	af
   02BB 33                  821 	inc	sp
                            822 ;	genIpush
                            823 ;	AOP_STK for _MainLoop_y_1_1
   02BC DD 7E EF            824 	ld	a,-17(ix)
   02BF F5                  825 	push	af
   02C0 33                  826 	inc	sp
                            827 ;	genIpush
   02C1 79                  828 	ld	a,c
   02C2 F5                  829 	push	af
   02C3 33                  830 	inc	sp
                            831 ;	genCall
   02C4 CDrD5s14            832 	call	_DrawPoint8
   02C7 F1                  833 	pop	af
   02C8 33                  834 	inc	sp
                            835 ;test.c:247: DrawPoint8(x,     y + 1, 255);
                            836 ;	genPlus
                            837 ;	AOP_STK for _MainLoop_y_1_1
                            838 ;	genPlusIncr
   02C9 DD 4E EF            839 	ld	c,-17(ix)
   02CC 0C                  840 	inc	c
                            841 ;	genIpush
                            842 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02CD 3E FF               843 	ld	a,#0xFF
   02CF F5                  844 	push	af
   02D0 33                  845 	inc	sp
                            846 ;	genIpush
   02D1 79                  847 	ld	a,c
   02D2 F5                  848 	push	af
   02D3 33                  849 	inc	sp
                            850 ;	genIpush
                            851 ;	AOP_STK for _MainLoop_x_1_1
   02D4 DD 7E F0            852 	ld	a,-16(ix)
   02D7 F5                  853 	push	af
   02D8 33                  854 	inc	sp
                            855 ;	genCall
   02D9 CDrD5s14            856 	call	_DrawPoint8
   02DC F1                  857 	pop	af
   02DD 33                  858 	inc	sp
                            859 ;test.c:249: g_AngleIndex = g_Angle >> 2;
                            860 ;	genRightShift
   02DE FD 21r1Bs00         861 	ld	iy,#_g_Angle
   02E2 FD 7E 00            862 	ld	a,0(iy)
   02E5 CB 3F               863 	srl	a
   02E7 CB 3F               864 	srl	a
   02E9 FD 21r1Cs00         865 	ld	iy,#_g_AngleIndex
   02ED FD 77 00            866 	ld	0(iy),a
                            867 ;test.c:251: g_Angle += 4;
                            868 ;	genPlus
                            869 ;	genPlusIncr
   02F0 FD 21r1Bs00         870 	ld	iy,#_g_Angle
   02F4 FD 34 00            871 	inc	0(iy)
   02F7 FD 34 00            872 	inc	0(iy)
   02FA FD 34 00            873 	inc	0(iy)
   02FD FD 34 00            874 	inc	0(iy)
                            875 ;test.c:253: for(i=0; i<10; i++) // rows
                            876 ;	genAssign
                            877 ;	AOP_STK for _MainLoop_i_1_1
   0300 DD 36 ED 00         878 	ld	-19(ix),#0x00
   0304 DD 36 EE 00         879 	ld	-18(ix),#0x00
                            880 ;	genLabel
   0308                     881 00122$:
                            882 ;	genCmpLt
                            883 ;	AOP_STK for _MainLoop_i_1_1
   0308 DD 7E ED            884 	ld	a,-19(ix)
   030B D6 0A               885 	sub	a,#0x0A
   030D DD 7E EE            886 	ld	a,-18(ix)
   0310 DE 00               887 	sbc	a,#0x00
   0312 F2r43s01            888 	jp	P,00115$
                            889 ;test.c:255: keyLine = GetKeyMatrixLine(i);
                            890 ;	genCast
                            891 ;	AOP_STK for _MainLoop_i_1_1
   0315 DD 5E ED            892 	ld	e,-19(ix)
                            893 ;	genIpush
                            894 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0318 7B                  895 	ld	a,e
   0319 F5                  896 	push	af
   031A 33                  897 	inc	sp
                            898 ;	genCall
   031B CDr76s16            899 	call	_GetKeyMatrixLine
   031E 5D                  900 	ld	e,l
   031F 33                  901 	inc	sp
                            902 ;	genAssign
                            903 ;	AOP_STK for _MainLoop_keyLine_1_1
   0320 DD 73 EA            904 	ld	-22(ix),e
                            905 ;test.c:256: for(j=0; j<8; j++) // characters
                            906 ;	genAssign
                            907 ;	AOP_STK for _MainLoop_j_1_1
   0323 DD 36 EB 00         908 	ld	-21(ix),#0x00
   0327 DD 36 EC 00         909 	ld	-20(ix),#0x00
                            910 ;	genLabel
   032B                     911 00118$:
                            912 ;	genCmpLt
                            913 ;	AOP_STK for _MainLoop_j_1_1
   032B DD 7E EB            914 	ld	a,-21(ix)
   032E D6 08               915 	sub	a,#0x08
   0330 DD 7E EC            916 	ld	a,-20(ix)
   0333 DE 00               917 	sbc	a,#0x00
   0335 F2r9Ds03            918 	jp	P,00124$
                            919 ;test.c:258: if(keyLine & 1 << j)
                            920 ;	genLeftShift
                            921 ;	AOP_STK for _MainLoop_j_1_1
   0338 DD 7E EB            922 	ld	a,-21(ix)
   033B 3C                  923 	inc	a
   033C F5                  924 	push	af
   033D 01 01 00            925 	ld	bc,#0x0001
   0340 F1                  926 	pop	af
   0341 18 04               927 	jr	00141$
   0343                     928 00140$:
   0343 CB 21               929 	sla	c
   0345 CB 10               930 	rl	b
   0347                     931 00141$:
   0347 3D                  932 	dec	a
   0348 20 F9               933 	jr	NZ,00140$
                            934 ;	genCast
                            935 ;	AOP_STK for _MainLoop_keyLine_1_1
   034A DD 5E EA            936 	ld	e,-22(ix)
   034D 16 00               937 	ld	d,#0x00
                            938 ;	genAnd
   034F 79                  939 	ld	a,c
   0350 A3                  940 	and	a,e
   0351 4F                  941 	ld	c,a
   0352 78                  942 	ld	a,b
   0353 A2                  943 	and	a,d
                            944 ;	genIfx
   0354 47                  945 	ld	b,a
   0355 B1                  946 	or	a,c
   0356 28 1E               947 	jr	Z,00113$
                            948 ;test.c:259: DrawPoint8(10 + j, 10 + i, 0);
                            949 ;	genCast
                            950 ;	AOP_STK for _MainLoop_i_1_1
   0358 DD 4E ED            951 	ld	c,-19(ix)
                            952 ;	genPlus
                            953 ;	genPlusIncr
   035B 79                  954 	ld	a,c
   035C C6 0A               955 	add	a,#0x0A
   035E 4F                  956 	ld	c,a
                            957 ;	genCast
                            958 ;	AOP_STK for _MainLoop_j_1_1
   035F DD 46 EB            959 	ld	b,-21(ix)
                            960 ;	genPlus
                            961 ;	genPlusIncr
   0362 78                  962 	ld	a,b
   0363 C6 0A               963 	add	a,#0x0A
   0365 47                  964 	ld	b,a
                            965 ;	genIpush
                            966 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0366 3E 00               967 	ld	a,#0x00
   0368 F5                  968 	push	af
   0369 33                  969 	inc	sp
                            970 ;	genIpush
   036A 79                  971 	ld	a,c
   036B F5                  972 	push	af
   036C 33                  973 	inc	sp
                            974 ;	genIpush
   036D C5                  975 	push	bc
   036E 33                  976 	inc	sp
                            977 ;	genCall
   036F CDrD5s14            978 	call	_DrawPoint8
   0372 F1                  979 	pop	af
   0373 33                  980 	inc	sp
                            981 ;	genGoto
   0374 18 1C               982 	jr	00120$
                            983 ;	genLabel
   0376                     984 00113$:
                            985 ;test.c:261: DrawPoint8(10 + j, 10 + i, 255);
                            986 ;	genCast
                            987 ;	AOP_STK for _MainLoop_i_1_1
   0376 DD 4E ED            988 	ld	c,-19(ix)
                            989 ;	genPlus
                            990 ;	genPlusIncr
   0379 79                  991 	ld	a,c
   037A C6 0A               992 	add	a,#0x0A
   037C 4F                  993 	ld	c,a
                            994 ;	genCast
                            995 ;	AOP_STK for _MainLoop_j_1_1
   037D DD 46 EB            996 	ld	b,-21(ix)
                            997 ;	genPlus
                            998 ;	genPlusIncr
   0380 78                  999 	ld	a,b
   0381 C6 0A              1000 	add	a,#0x0A
   0383 47                 1001 	ld	b,a
                           1002 ;	genIpush
                           1003 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0384 3E FF              1004 	ld	a,#0xFF
   0386 F5                 1005 	push	af
   0387 33                 1006 	inc	sp
                           1007 ;	genIpush
   0388 79                 1008 	ld	a,c
   0389 F5                 1009 	push	af
   038A 33                 1010 	inc	sp
                           1011 ;	genIpush
   038B C5                 1012 	push	bc
   038C 33                 1013 	inc	sp
                           1014 ;	genCall
   038D CDrD5s14           1015 	call	_DrawPoint8
   0390 F1                 1016 	pop	af
   0391 33                 1017 	inc	sp
                           1018 ;	genLabel
   0392                    1019 00120$:
                           1020 ;test.c:256: for(j=0; j<8; j++) // characters
                           1021 ;	genPlus
                           1022 ;	AOP_STK for _MainLoop_j_1_1
                           1023 ;	genPlusIncr
   0392 DD 34 EB           1024 	inc	-21(ix)
   0395 20 03              1025 	jr	NZ,00142$
   0397 DD 34 EC           1026 	inc	-20(ix)
   039A                    1027 00142$:
                           1028 ;	genGoto
   039A C3r2Bs03           1029 	jp	00118$
                           1030 ;	genLabel
   039D                    1031 00124$:
                           1032 ;test.c:253: for(i=0; i<10; i++) // rows
                           1033 ;	genPlus
                           1034 ;	AOP_STK for _MainLoop_i_1_1
                           1035 ;	genPlusIncr
   039D DD 34 ED           1036 	inc	-19(ix)
   03A0 20 03              1037 	jr	NZ,00143$
   03A2 DD 34 EE           1038 	inc	-18(ix)
   03A5                    1039 00143$:
                           1040 ;	genGoto
   03A5 C3r08s03           1041 	jp	00122$
                           1042 ;	genLabel
                           1043 ;	genEndFunction
   03A8 DD F9              1044 	ld	sp,ix
   03AA DD E1              1045 	pop	ix
   03AC C9                 1046 	ret
   03AD                    1047 _MainLoop_end::
   03AD                    1048 _g_Sinus:
   03AD 00 00              1049 	.dw #0x0000
   03AF 19 00              1050 	.dw #0x0019
   03B1 31 00              1051 	.dw #0x0031
   03B3 4A 00              1052 	.dw #0x004A
   03B5 61 00              1053 	.dw #0x0061
   03B7 78 00              1054 	.dw #0x0078
   03B9 8E 00              1055 	.dw #0x008E
   03BB A2 00              1056 	.dw #0x00A2
   03BD B5 00              1057 	.dw #0x00B5
   03BF C5 00              1058 	.dw #0x00C5
   03C1 D4 00              1059 	.dw #0x00D4
   03C3 E1 00              1060 	.dw #0x00E1
   03C5 EC 00              1061 	.dw #0x00EC
   03C7 F4 00              1062 	.dw #0x00F4
   03C9 FB 00              1063 	.dw #0x00FB
   03CB FE 00              1064 	.dw #0x00FE
   03CD 00 01              1065 	.dw #0x0100
   03CF FE 00              1066 	.dw #0x00FE
   03D1 FB 00              1067 	.dw #0x00FB
   03D3 F4 00              1068 	.dw #0x00F4
   03D5 EC 00              1069 	.dw #0x00EC
   03D7 E1 00              1070 	.dw #0x00E1
   03D9 D4 00              1071 	.dw #0x00D4
   03DB C5 00              1072 	.dw #0x00C5
   03DD B5 00              1073 	.dw #0x00B5
   03DF A2 00              1074 	.dw #0x00A2
   03E1 8E 00              1075 	.dw #0x008E
   03E3 78 00              1076 	.dw #0x0078
   03E5 61 00              1077 	.dw #0x0061
   03E7 4A 00              1078 	.dw #0x004A
   03E9 31 00              1079 	.dw #0x0031
   03EB 19 00              1080 	.dw #0x0019
   03ED 00 00              1081 	.dw #0x0000
   03EF E7 FF              1082 	.dw #0xFFE7
   03F1 CF FF              1083 	.dw #0xFFCF
   03F3 B6 FF              1084 	.dw #0xFFB6
   03F5 9F FF              1085 	.dw #0xFF9F
   03F7 88 FF              1086 	.dw #0xFF88
   03F9 72 FF              1087 	.dw #0xFF72
   03FB 5E FF              1088 	.dw #0xFF5E
   03FD 4B FF              1089 	.dw #0xFF4B
   03FF 3B FF              1090 	.dw #0xFF3B
   0401 2C FF              1091 	.dw #0xFF2C
   0403 1F FF              1092 	.dw #0xFF1F
   0405 14 FF              1093 	.dw #0xFF14
   0407 0C FF              1094 	.dw #0xFF0C
   0409 05 FF              1095 	.dw #0xFF05
   040B 02 FF              1096 	.dw #0xFF02
   040D 00 FF              1097 	.dw #0xFF00
   040F 02 FF              1098 	.dw #0xFF02
   0411 05 FF              1099 	.dw #0xFF05
   0413 0C FF              1100 	.dw #0xFF0C
   0415 14 FF              1101 	.dw #0xFF14
   0417 1F FF              1102 	.dw #0xFF1F
   0419 2C FF              1103 	.dw #0xFF2C
   041B 3B FF              1104 	.dw #0xFF3B
   041D 4B FF              1105 	.dw #0xFF4B
   041F 5E FF              1106 	.dw #0xFF5E
   0421 72 FF              1107 	.dw #0xFF72
   0423 88 FF              1108 	.dw #0xFF88
   0425 9F FF              1109 	.dw #0xFF9F
   0427 B6 FF              1110 	.dw #0xFFB6
   0429 CF FF              1111 	.dw #0xFFCF
   042B E7 FF              1112 	.dw #0xFFE7
   042D                    1113 _g_Cosinus:
   042D 00 01              1114 	.dw #0x0100
   042F FE 00              1115 	.dw #0x00FE
   0431 FB 00              1116 	.dw #0x00FB
   0433 F4 00              1117 	.dw #0x00F4
   0435 EC 00              1118 	.dw #0x00EC
   0437 E1 00              1119 	.dw #0x00E1
   0439 D4 00              1120 	.dw #0x00D4
   043B C5 00              1121 	.dw #0x00C5
   043D B5 00              1122 	.dw #0x00B5
   043F A2 00              1123 	.dw #0x00A2
   0441 8E 00              1124 	.dw #0x008E
   0443 78 00              1125 	.dw #0x0078
   0445 61 00              1126 	.dw #0x0061
   0447 4A 00              1127 	.dw #0x004A
   0449 31 00              1128 	.dw #0x0031
   044B 19 00              1129 	.dw #0x0019
   044D 00 00              1130 	.dw #0x0000
   044F E7 FF              1131 	.dw #0xFFE7
   0451 CF FF              1132 	.dw #0xFFCF
   0453 B6 FF              1133 	.dw #0xFFB6
   0455 9F FF              1134 	.dw #0xFF9F
   0457 88 FF              1135 	.dw #0xFF88
   0459 72 FF              1136 	.dw #0xFF72
   045B 5E FF              1137 	.dw #0xFF5E
   045D 4B FF              1138 	.dw #0xFF4B
   045F 3B FF              1139 	.dw #0xFF3B
   0461 2C FF              1140 	.dw #0xFF2C
   0463 1F FF              1141 	.dw #0xFF1F
   0465 14 FF              1142 	.dw #0xFF14
   0467 0C FF              1143 	.dw #0xFF0C
   0469 05 FF              1144 	.dw #0xFF05
   046B 02 FF              1145 	.dw #0xFF02
   046D 00 FF              1146 	.dw #0xFF00
   046F 02 FF              1147 	.dw #0xFF02
   0471 05 FF              1148 	.dw #0xFF05
   0473 0C FF              1149 	.dw #0xFF0C
   0475 14 FF              1150 	.dw #0xFF14
   0477 1F FF              1151 	.dw #0xFF1F
   0479 2C FF              1152 	.dw #0xFF2C
   047B 3B FF              1153 	.dw #0xFF3B
   047D 4B FF              1154 	.dw #0xFF4B
   047F 5E FF              1155 	.dw #0xFF5E
   0481 72 FF              1156 	.dw #0xFF72
   0483 88 FF              1157 	.dw #0xFF88
   0485 9F FF              1158 	.dw #0xFF9F
   0487 B6 FF              1159 	.dw #0xFFB6
   0489 CF FF              1160 	.dw #0xFFCF
   048B E7 FF              1161 	.dw #0xFFE7
   048D 00 00              1162 	.dw #0x0000
   048F 19 00              1163 	.dw #0x0019
   0491 31 00              1164 	.dw #0x0031
   0493 4A 00              1165 	.dw #0x004A
   0495 61 00              1166 	.dw #0x0061
   0497 78 00              1167 	.dw #0x0078
   0499 8E 00              1168 	.dw #0x008E
   049B A2 00              1169 	.dw #0x00A2
   049D B5 00              1170 	.dw #0x00B5
   049F C5 00              1171 	.dw #0x00C5
   04A1 D4 00              1172 	.dw #0x00D4
   04A3 E1 00              1173 	.dw #0x00E1
   04A5 EC 00              1174 	.dw #0x00EC
   04A7 F4 00              1175 	.dw #0x00F4
   04A9 FB 00              1176 	.dw #0x00FB
   04AB FE 00              1177 	.dw #0x00FE
   04AD                    1178 _g_ProjectionX:
   04AD 00 01              1179 	.dw #0x0100
   04AF 96 00              1180 	.dw #0x0096
   04B1 4B 00              1181 	.dw #0x004B
   04B3 32 00              1182 	.dw #0x0032
   04B5 25 00              1183 	.dw #0x0025
   04B7 1E 00              1184 	.dw #0x001E
   04B9 19 00              1185 	.dw #0x0019
   04BB 15 00              1186 	.dw #0x0015
   04BD 12 00              1187 	.dw #0x0012
   04BF 10 00              1188 	.dw #0x0010
   04C1 0F 00              1189 	.dw #0x000F
   04C3 0D 00              1190 	.dw #0x000D
   04C5 0C 00              1191 	.dw #0x000C
   04C7 0B 00              1192 	.dw #0x000B
   04C9 0A 00              1193 	.dw #0x000A
   04CB 0A 00              1194 	.dw #0x000A
   04CD 09 00              1195 	.dw #0x0009
   04CF 08 00              1196 	.dw #0x0008
   04D1 08 00              1197 	.dw #0x0008
   04D3 07 00              1198 	.dw #0x0007
   04D5 07 00              1199 	.dw #0x0007
   04D7 07 00              1200 	.dw #0x0007
   04D9 06 00              1201 	.dw #0x0006
   04DB 06 00              1202 	.dw #0x0006
   04DD 06 00              1203 	.dw #0x0006
   04DF 06 00              1204 	.dw #0x0006
   04E1 05 00              1205 	.dw #0x0005
   04E3 05 00              1206 	.dw #0x0005
   04E5 05 00              1207 	.dw #0x0005
   04E7 05 00              1208 	.dw #0x0005
   04E9 05 00              1209 	.dw #0x0005
   04EB 04 00              1210 	.dw #0x0004
   04ED 04 00              1211 	.dw #0x0004
   04EF 04 00              1212 	.dw #0x0004
   04F1 04 00              1213 	.dw #0x0004
   04F3 04 00              1214 	.dw #0x0004
   04F5 04 00              1215 	.dw #0x0004
   04F7 04 00              1216 	.dw #0x0004
   04F9 03 00              1217 	.dw #0x0003
   04FB 03 00              1218 	.dw #0x0003
   04FD 03 00              1219 	.dw #0x0003
   04FF 03 00              1220 	.dw #0x0003
   0501 03 00              1221 	.dw #0x0003
   0503 03 00              1222 	.dw #0x0003
   0505 03 00              1223 	.dw #0x0003
   0507 03 00              1224 	.dw #0x0003
   0509 03 00              1225 	.dw #0x0003
   050B 03 00              1226 	.dw #0x0003
   050D 03 00              1227 	.dw #0x0003
   050F 03 00              1228 	.dw #0x0003
   0511 03 00              1229 	.dw #0x0003
   0513 02 00              1230 	.dw #0x0002
   0515 02 00              1231 	.dw #0x0002
   0517 02 00              1232 	.dw #0x0002
   0519 02 00              1233 	.dw #0x0002
   051B 02 00              1234 	.dw #0x0002
   051D 02 00              1235 	.dw #0x0002
   051F 02 00              1236 	.dw #0x0002
   0521 02 00              1237 	.dw #0x0002
   0523 02 00              1238 	.dw #0x0002
   0525 02 00              1239 	.dw #0x0002
   0527 02 00              1240 	.dw #0x0002
   0529 02 00              1241 	.dw #0x0002
   052B 02 00              1242 	.dw #0x0002
   052D 02 00              1243 	.dw #0x0002
   052F 02 00              1244 	.dw #0x0002
   0531 02 00              1245 	.dw #0x0002
   0533 02 00              1246 	.dw #0x0002
   0535 02 00              1247 	.dw #0x0002
   0537 02 00              1248 	.dw #0x0002
   0539 02 00              1249 	.dw #0x0002
   053B 02 00              1250 	.dw #0x0002
   053D 02 00              1251 	.dw #0x0002
   053F 02 00              1252 	.dw #0x0002
   0541 02 00              1253 	.dw #0x0002
   0543 02 00              1254 	.dw #0x0002
   0545 01 00              1255 	.dw #0x0001
   0547 01 00              1256 	.dw #0x0001
   0549 01 00              1257 	.dw #0x0001
   054B 01 00              1258 	.dw #0x0001
   054D 01 00              1259 	.dw #0x0001
   054F 01 00              1260 	.dw #0x0001
   0551 01 00              1261 	.dw #0x0001
   0553 01 00              1262 	.dw #0x0001
   0555 01 00              1263 	.dw #0x0001
   0557 01 00              1264 	.dw #0x0001
   0559 01 00              1265 	.dw #0x0001
   055B 01 00              1266 	.dw #0x0001
   055D 01 00              1267 	.dw #0x0001
   055F 01 00              1268 	.dw #0x0001
   0561 01 00              1269 	.dw #0x0001
   0563 01 00              1270 	.dw #0x0001
   0565 01 00              1271 	.dw #0x0001
   0567 01 00              1272 	.dw #0x0001
   0569 01 00              1273 	.dw #0x0001
   056B 01 00              1274 	.dw #0x0001
   056D 01 00              1275 	.dw #0x0001
   056F 01 00              1276 	.dw #0x0001
   0571 01 00              1277 	.dw #0x0001
   0573 01 00              1278 	.dw #0x0001
   0575 01 00              1279 	.dw #0x0001
   0577 01 00              1280 	.dw #0x0001
   0579 01 00              1281 	.dw #0x0001
   057B 01 00              1282 	.dw #0x0001
   057D 01 00              1283 	.dw #0x0001
   057F 01 00              1284 	.dw #0x0001
   0581 01 00              1285 	.dw #0x0001
   0583 01 00              1286 	.dw #0x0001
   0585 01 00              1287 	.dw #0x0001
   0587 01 00              1288 	.dw #0x0001
   0589 01 00              1289 	.dw #0x0001
   058B 01 00              1290 	.dw #0x0001
   058D 01 00              1291 	.dw #0x0001
   058F 01 00              1292 	.dw #0x0001
   0591 01 00              1293 	.dw #0x0001
   0593 01 00              1294 	.dw #0x0001
   0595 01 00              1295 	.dw #0x0001
   0597 01 00              1296 	.dw #0x0001
   0599 01 00              1297 	.dw #0x0001
   059B 01 00              1298 	.dw #0x0001
   059D 01 00              1299 	.dw #0x0001
   059F 01 00              1300 	.dw #0x0001
   05A1 01 00              1301 	.dw #0x0001
   05A3 01 00              1302 	.dw #0x0001
   05A5 01 00              1303 	.dw #0x0001
   05A7 01 00              1304 	.dw #0x0001
   05A9 01 00              1305 	.dw #0x0001
   05AB 01 00              1306 	.dw #0x0001
   05AD                    1307 _g_ProjectionY:
   05AD 00 01              1308 	.dw #0x0100
   05AF B5 00              1309 	.dw #0x00B5
   05B1 5A 00              1310 	.dw #0x005A
   05B3 3C 00              1311 	.dw #0x003C
   05B5 2D 00              1312 	.dw #0x002D
   05B7 24 00              1313 	.dw #0x0024
   05B9 1E 00              1314 	.dw #0x001E
   05BB 19 00              1315 	.dw #0x0019
   05BD 16 00              1316 	.dw #0x0016
   05BF 14 00              1317 	.dw #0x0014
   05C1 12 00              1318 	.dw #0x0012
   05C3 10 00              1319 	.dw #0x0010
   05C5 0F 00              1320 	.dw #0x000F
   05C7 0D 00              1321 	.dw #0x000D
   05C9 0C 00              1322 	.dw #0x000C
   05CB 0C 00              1323 	.dw #0x000C
   05CD 0B 00              1324 	.dw #0x000B
   05CF 0A 00              1325 	.dw #0x000A
   05D1 0A 00              1326 	.dw #0x000A
   05D3 09 00              1327 	.dw #0x0009
   05D5 09 00              1328 	.dw #0x0009
   05D7 08 00              1329 	.dw #0x0008
   05D9 08 00              1330 	.dw #0x0008
   05DB 07 00              1331 	.dw #0x0007
   05DD 07 00              1332 	.dw #0x0007
   05DF 07 00              1333 	.dw #0x0007
   05E1 06 00              1334 	.dw #0x0006
   05E3 06 00              1335 	.dw #0x0006
   05E5 06 00              1336 	.dw #0x0006
   05E7 06 00              1337 	.dw #0x0006
   05E9 06 00              1338 	.dw #0x0006
   05EB 05 00              1339 	.dw #0x0005
   05ED 05 00              1340 	.dw #0x0005
   05EF 05 00              1341 	.dw #0x0005
   05F1 05 00              1342 	.dw #0x0005
   05F3 05 00              1343 	.dw #0x0005
   05F5 05 00              1344 	.dw #0x0005
   05F7 04 00              1345 	.dw #0x0004
   05F9 04 00              1346 	.dw #0x0004
   05FB 04 00              1347 	.dw #0x0004
   05FD 04 00              1348 	.dw #0x0004
   05FF 04 00              1349 	.dw #0x0004
   0601 04 00              1350 	.dw #0x0004
   0603 04 00              1351 	.dw #0x0004
   0605 04 00              1352 	.dw #0x0004
   0607 04 00              1353 	.dw #0x0004
   0609 03 00              1354 	.dw #0x0003
   060B 03 00              1355 	.dw #0x0003
   060D 03 00              1356 	.dw #0x0003
   060F 03 00              1357 	.dw #0x0003
   0611 03 00              1358 	.dw #0x0003
   0613 03 00              1359 	.dw #0x0003
   0615 03 00              1360 	.dw #0x0003
   0617 03 00              1361 	.dw #0x0003
   0619 03 00              1362 	.dw #0x0003
   061B 03 00              1363 	.dw #0x0003
   061D 03 00              1364 	.dw #0x0003
   061F 03 00              1365 	.dw #0x0003
   0621 03 00              1366 	.dw #0x0003
   0623 03 00              1367 	.dw #0x0003
   0625 03 00              1368 	.dw #0x0003
   0627 02 00              1369 	.dw #0x0002
   0629 02 00              1370 	.dw #0x0002
   062B 02 00              1371 	.dw #0x0002
   062D 02 00              1372 	.dw #0x0002
   062F 02 00              1373 	.dw #0x0002
   0631 02 00              1374 	.dw #0x0002
   0633 02 00              1375 	.dw #0x0002
   0635 02 00              1376 	.dw #0x0002
   0637 02 00              1377 	.dw #0x0002
   0639 02 00              1378 	.dw #0x0002
   063B 02 00              1379 	.dw #0x0002
   063D 02 00              1380 	.dw #0x0002
   063F 02 00              1381 	.dw #0x0002
   0641 02 00              1382 	.dw #0x0002
   0643 02 00              1383 	.dw #0x0002
   0645 02 00              1384 	.dw #0x0002
   0647 02 00              1385 	.dw #0x0002
   0649 02 00              1386 	.dw #0x0002
   064B 02 00              1387 	.dw #0x0002
   064D 02 00              1388 	.dw #0x0002
   064F 02 00              1389 	.dw #0x0002
   0651 02 00              1390 	.dw #0x0002
   0653 02 00              1391 	.dw #0x0002
   0655 02 00              1392 	.dw #0x0002
   0657 02 00              1393 	.dw #0x0002
   0659 02 00              1394 	.dw #0x0002
   065B 02 00              1395 	.dw #0x0002
   065D 02 00              1396 	.dw #0x0002
   065F 02 00              1397 	.dw #0x0002
   0661 02 00              1398 	.dw #0x0002
   0663 01 00              1399 	.dw #0x0001
   0665 01 00              1400 	.dw #0x0001
   0667 01 00              1401 	.dw #0x0001
   0669 01 00              1402 	.dw #0x0001
   066B 01 00              1403 	.dw #0x0001
   066D 01 00              1404 	.dw #0x0001
   066F 01 00              1405 	.dw #0x0001
   0671 01 00              1406 	.dw #0x0001
   0673 01 00              1407 	.dw #0x0001
   0675 01 00              1408 	.dw #0x0001
   0677 01 00              1409 	.dw #0x0001
   0679 01 00              1410 	.dw #0x0001
   067B 01 00              1411 	.dw #0x0001
   067D 01 00              1412 	.dw #0x0001
   067F 01 00              1413 	.dw #0x0001
   0681 01 00              1414 	.dw #0x0001
   0683 01 00              1415 	.dw #0x0001
   0685 01 00              1416 	.dw #0x0001
   0687 01 00              1417 	.dw #0x0001
   0689 01 00              1418 	.dw #0x0001
   068B 01 00              1419 	.dw #0x0001
   068D 01 00              1420 	.dw #0x0001
   068F 01 00              1421 	.dw #0x0001
   0691 01 00              1422 	.dw #0x0001
   0693 01 00              1423 	.dw #0x0001
   0695 01 00              1424 	.dw #0x0001
   0697 01 00              1425 	.dw #0x0001
   0699 01 00              1426 	.dw #0x0001
   069B 01 00              1427 	.dw #0x0001
   069D 01 00              1428 	.dw #0x0001
   069F 01 00              1429 	.dw #0x0001
   06A1 01 00              1430 	.dw #0x0001
   06A3 01 00              1431 	.dw #0x0001
   06A5 01 00              1432 	.dw #0x0001
   06A7 01 00              1433 	.dw #0x0001
   06A9 01 00              1434 	.dw #0x0001
   06AB 01 00              1435 	.dw #0x0001
                           1436 ;test.c:288: void SetShortVec(ShortVec* ret, i16 x, i16 y, i16 z)
                           1437 ;	genLabel
                           1438 ;	genFunction
                           1439 ;	---------------------------------
                           1440 ; Function SetShortVec
                           1441 ; ---------------------------------
   06AD                    1442 _SetShortVec_start::
   06AD                    1443 _SetShortVec:
   06AD DD E5              1444 	push	ix
   06AF DD 21 00 00        1445 	ld	ix,#0
   06B3 DD 39              1446 	add	ix,sp
                           1447 ;test.c:290: ret->x = x;
                           1448 ;	genAssign
                           1449 ;	AOP_STK for 
   06B5 DD 4E 04           1450 	ld	c,4(ix)
   06B8 DD 46 05           1451 	ld	b,5(ix)
                           1452 ;	genAssign (pointer)
                           1453 ;	AOP_STK for 
                           1454 ;	isBitvar = 0
   06BB 69                 1455 	ld	l,c
   06BC 60                 1456 	ld	h,b
   06BD DD 7E 06           1457 	ld	a,6(ix)
   06C0 77                 1458 	ld	(hl),a
   06C1 23                 1459 	inc	hl
   06C2 DD 7E 07           1460 	ld	a,7(ix)
   06C5 77                 1461 	ld	(hl),a
                           1462 ;test.c:291: ret->y = y;
                           1463 ;	genPlus
                           1464 ;	genPlusIncr
   06C6 59                 1465 	ld	e,c
   06C7 50                 1466 	ld	d,b
   06C8 13                 1467 	inc	de
   06C9 13                 1468 	inc	de
                           1469 ;	genAssign (pointer)
                           1470 ;	AOP_STK for 
                           1471 ;	isBitvar = 0
   06CA 6B                 1472 	ld	l,e
   06CB 62                 1473 	ld	h,d
   06CC DD 7E 08           1474 	ld	a,8(ix)
   06CF 77                 1475 	ld	(hl),a
   06D0 23                 1476 	inc	hl
   06D1 DD 7E 09           1477 	ld	a,9(ix)
   06D4 77                 1478 	ld	(hl),a
                           1479 ;test.c:292: ret->z = z;
                           1480 ;	genPlus
                           1481 ;	genPlusIncr
   06D5 03                 1482 	inc	bc
   06D6 03                 1483 	inc	bc
   06D7 03                 1484 	inc	bc
   06D8 03                 1485 	inc	bc
                           1486 ;	genAssign (pointer)
                           1487 ;	AOP_STK for 
                           1488 ;	isBitvar = 0
   06D9 69                 1489 	ld	l,c
   06DA 60                 1490 	ld	h,b
   06DB DD 7E 0A           1491 	ld	a,10(ix)
   06DE 77                 1492 	ld	(hl),a
   06DF 23                 1493 	inc	hl
   06E0 DD 7E 0B           1494 	ld	a,11(ix)
   06E3 77                 1495 	ld	(hl),a
                           1496 ;	genLabel
                           1497 ;	genEndFunction
   06E4 DD E1              1498 	pop	ix
   06E6 C9                 1499 	ret
   06E7                    1500 _SetShortVec_end::
                           1501 ;test.c:298: void TransXZ(ShortVec* ret, const ShortVec* vec, u8 g_Angle, const ShortVec* pos)
                           1502 ;	genLabel
                           1503 ;	genFunction
                           1504 ;	---------------------------------
                           1505 ; Function TransXZ
                           1506 ; ---------------------------------
   06E7                    1507 _TransXZ_start::
   06E7                    1508 _TransXZ:
   06E7 DD E5              1509 	push	ix
   06E9 DD 21 00 00        1510 	ld	ix,#0
   06ED DD 39              1511 	add	ix,sp
   06EF 21 F3 FF           1512 	ld	hl,#-13
   06F2 39                 1513 	add	hl,sp
   06F3 F9                 1514 	ld	sp,hl
                           1515 ;test.c:300: g_Angle >>= 2; 
                           1516 ;	genRightShift
                           1517 ;	AOP_STK for 
   06F4 DD 7E 08           1518 	ld	a,8(ix)
   06F7 CB 3F              1519 	srl	a
   06F9 CB 3F              1520 	srl	a
   06FB DD 77 08           1521 	ld	8(ix),a
                           1522 ;test.c:301: ret->x = UxU(vec->x, g_Cosinus[g_Angle]) - UxU(vec->z, g_Sinus[g_Angle]);
                           1523 ;	genAssign
                           1524 ;	AOP_STK for 
   06FE DD 4E 04           1525 	ld	c,4(ix)
   0701 DD 46 05           1526 	ld	b,5(ix)
                           1527 ;	genAssign
                           1528 ;	AOP_STK for 
                           1529 ;	AOP_STK for _TransXZ_sloc0_1_0
   0704 DD 7E 06           1530 	ld	a,6(ix)
   0707 DD 77 FE           1531 	ld	-2(ix),a
   070A DD 7E 07           1532 	ld	a,7(ix)
   070D DD 77 FF           1533 	ld	-1(ix),a
                           1534 ;	genPointerGet
                           1535 ;	AOP_STK for _TransXZ_sloc0_1_0
   0710 DD 6E FE           1536 	ld	l,-2(ix)
   0713 DD 66 FF           1537 	ld	h,-1(ix)
   0716 5E                 1538 	ld	e,(hl)
   0717 23                 1539 	inc	hl
   0718 56                 1540 	ld	d,(hl)
                           1541 ;	genRightShift
                           1542 ;	AOP_STK for _TransXZ_sloc1_1_0
   0719 DD 73 FC           1543 	ld	-4(ix),e
   071C DD 72 FD           1544 	ld	-3(ix),d
   071F DD CB FD 2E        1545 	sra	-3(ix)
   0723 DD CB FC 1E        1546 	rr	-4(ix)
   0727 DD CB FD 2E        1547 	sra	-3(ix)
   072B DD CB FC 1E        1548 	rr	-4(ix)
   072F DD CB FD 2E        1549 	sra	-3(ix)
   0733 DD CB FC 1E        1550 	rr	-4(ix)
   0737 DD CB FD 2E        1551 	sra	-3(ix)
   073B DD CB FC 1E        1552 	rr	-4(ix)
                           1553 ;	genLeftShift
                           1554 ;	AOP_STK for 
                           1555 ;	AOP_STK for _TransXZ_sloc2_1_0
   073F DD 7E 08           1556 	ld	a,8(ix)
   0742 87                 1557 	add	a,a
                           1558 ;	genPlus
                           1559 ;	AOP_STK for _TransXZ_sloc2_1_0
   0743 DD 77 FB           1560 	ld	-5(ix), a
   0746 C6r2D              1561 	add	a,#<_g_Cosinus
   0748 57                 1562 	ld	d,a
   0749 3Es04              1563 	ld	a,#>_g_Cosinus
   074B CE 00              1564 	adc	a,#0x00
   074D 5F                 1565 	ld	e,a
                           1566 ;	genPointerGet
   074E 6A                 1567 	ld	l,d
   074F 63                 1568 	ld	h,e
   0750 56                 1569 	ld	d,(hl)
   0751 23                 1570 	inc	hl
   0752 5E                 1571 	ld	e,(hl)
                           1572 ;	genRightShift
                           1573 ;	AOP_STK for _TransXZ_sloc3_1_0
   0753 DD 72 F9           1574 	ld	-7(ix),d
   0756 DD 73 FA           1575 	ld	-6(ix),e
   0759 DD CB FA 2E        1576 	sra	-6(ix)
   075D DD CB F9 1E        1577 	rr	-7(ix)
   0761 DD CB FA 2E        1578 	sra	-6(ix)
   0765 DD CB F9 1E        1579 	rr	-7(ix)
   0769 DD CB FA 2E        1580 	sra	-6(ix)
   076D DD CB F9 1E        1581 	rr	-7(ix)
   0771 DD CB FA 2E        1582 	sra	-6(ix)
   0775 DD CB F9 1E        1583 	rr	-7(ix)
                           1584 ;	genIpush
                           1585 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0779 C5                 1586 	push	bc
                           1587 ;	AOP_STK for _TransXZ_sloc3_1_0
   077A DD 6E F9           1588 	ld	l,-7(ix)
   077D DD 66 FA           1589 	ld	h,-6(ix)
   0780 E5                 1590 	push	hl
                           1591 ;	genIpush
                           1592 ;	AOP_STK for _TransXZ_sloc1_1_0
   0781 DD 6E FC           1593 	ld	l,-4(ix)
   0784 DD 66 FD           1594 	ld	h,-3(ix)
   0787 E5                 1595 	push	hl
                           1596 ;	genCall
   0788 CDr00s00           1597 	call	__mulint_rrx_s
                           1598 ;	AOP_STK for _TransXZ_sloc4_1_0
   078B DD 74 F8           1599 	ld	-8(ix),h
   078E DD 75 F7           1600 	ld	-9(ix),l
   0791 F1                 1601 	pop	af
   0792 F1                 1602 	pop	af
   0793 C1                 1603 	pop	bc
                           1604 ;	genPlus
                           1605 ;	AOP_STK for _TransXZ_sloc0_1_0
                           1606 ;	genPlusIncr
   0794 DD 7E FE           1607 	ld	a,-2(ix)
   0797 C6 04              1608 	add	a,#0x04
   0799 5F                 1609 	ld	e,a
   079A DD 7E FF           1610 	ld	a,-1(ix)
   079D CE 00              1611 	adc	a,#0x00
   079F 57                 1612 	ld	d,a
                           1613 ;	genPointerGet
   07A0 6B                 1614 	ld	l,e
   07A1 62                 1615 	ld	h,d
   07A2 5E                 1616 	ld	e,(hl)
   07A3 23                 1617 	inc	hl
   07A4 56                 1618 	ld	d,(hl)
                           1619 ;	genRightShift
                           1620 ;	AOP_STK for _TransXZ_sloc5_1_0
   07A5 DD 73 F5           1621 	ld	-11(ix),e
   07A8 DD 72 F6           1622 	ld	-10(ix),d
   07AB DD CB F6 2E        1623 	sra	-10(ix)
   07AF DD CB F5 1E        1624 	rr	-11(ix)
   07B3 DD CB F6 2E        1625 	sra	-10(ix)
   07B7 DD CB F5 1E        1626 	rr	-11(ix)
   07BB DD CB F6 2E        1627 	sra	-10(ix)
   07BF DD CB F5 1E        1628 	rr	-11(ix)
   07C3 DD CB F6 2E        1629 	sra	-10(ix)
   07C7 DD CB F5 1E        1630 	rr	-11(ix)
                           1631 ;	genPlus
                           1632 ;	AOP_STK for _TransXZ_sloc2_1_0
   07CB 3ErAD              1633 	ld	a,#<_g_Sinus
   07CD DD 86 FB           1634 	add	a,-5(ix)
   07D0 5F                 1635 	ld	e,a
   07D1 3Es03              1636 	ld	a,#>_g_Sinus
   07D3 CE 00              1637 	adc	a,#0x00
   07D5 57                 1638 	ld	d,a
                           1639 ;	genPointerGet
   07D6 6B                 1640 	ld	l,e
   07D7 62                 1641 	ld	h,d
   07D8 5E                 1642 	ld	e,(hl)
   07D9 23                 1643 	inc	hl
   07DA 56                 1644 	ld	d,(hl)
                           1645 ;	genRightShift
                           1646 ;	AOP_STK for _TransXZ_sloc6_1_0
   07DB DD 73 F3           1647 	ld	-13(ix),e
   07DE DD 72 F4           1648 	ld	-12(ix),d
   07E1 DD CB F4 2E        1649 	sra	-12(ix)
   07E5 DD CB F3 1E        1650 	rr	-13(ix)
   07E9 DD CB F4 2E        1651 	sra	-12(ix)
   07ED DD CB F3 1E        1652 	rr	-13(ix)
   07F1 DD CB F4 2E        1653 	sra	-12(ix)
   07F5 DD CB F3 1E        1654 	rr	-13(ix)
   07F9 DD CB F4 2E        1655 	sra	-12(ix)
   07FD DD CB F3 1E        1656 	rr	-13(ix)
                           1657 ;	genIpush
                           1658 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0801 C5                 1659 	push	bc
                           1660 ;	AOP_STK for _TransXZ_sloc6_1_0
   0802 DD 6E F3           1661 	ld	l,-13(ix)
   0805 DD 66 F4           1662 	ld	h,-12(ix)
   0808 E5                 1663 	push	hl
                           1664 ;	genIpush
                           1665 ;	AOP_STK for _TransXZ_sloc5_1_0
   0809 DD 6E F5           1666 	ld	l,-11(ix)
   080C DD 66 F6           1667 	ld	h,-10(ix)
   080F E5                 1668 	push	hl
                           1669 ;	genCall
   0810 CDr00s00           1670 	call	__mulint_rrx_s
   0813 54                 1671 	ld	d,h
   0814 5D                 1672 	ld	e,l
   0815 F1                 1673 	pop	af
   0816 F1                 1674 	pop	af
   0817 C1                 1675 	pop	bc
                           1676 ;	genMinus
                           1677 ;	AOP_STK for _TransXZ_sloc4_1_0
   0818 DD 7E F7           1678 	ld	a,-9(ix)
   081B 93                 1679 	sub	a,e
   081C 5F                 1680 	ld	e,a
   081D DD 7E F8           1681 	ld	a,-8(ix)
   0820 9A                 1682 	sbc	a,d
   0821 57                 1683 	ld	d,a
                           1684 ;	genAssign (pointer)
                           1685 ;	isBitvar = 0
   0822 69                 1686 	ld	l,c
   0823 60                 1687 	ld	h,b
   0824 73                 1688 	ld	(hl),e
   0825 23                 1689 	inc	hl
   0826 72                 1690 	ld	(hl),d
                           1691 ;test.c:302: ret->y = vec->y + pos->y;
                           1692 ;	genPlus
                           1693 ;	AOP_STK for _TransXZ_sloc4_1_0
                           1694 ;	genPlusIncr
   0827 79                 1695 	ld	a,c
   0828 C6 02              1696 	add	a,#0x02
   082A DD 77 F7           1697 	ld	-9(ix),a
   082D 78                 1698 	ld	a,b
   082E CE 00              1699 	adc	a,#0x00
   0830 DD 77 F8           1700 	ld	-8(ix),a
                           1701 ;	genPlus
                           1702 ;	AOP_STK for _TransXZ_sloc0_1_0
                           1703 ;	genPlusIncr
   0833 DD 5E FE           1704 	ld	e,-2(ix)
   0836 DD 56 FF           1705 	ld	d,-1(ix)
   0839 13                 1706 	inc	de
   083A 13                 1707 	inc	de
                           1708 ;	genPointerGet
                           1709 ;	AOP_STK for _TransXZ_sloc0_1_0
   083B 6B                 1710 	ld	l,e
   083C 62                 1711 	ld	h,d
   083D 7E                 1712 	ld	a,(hl)
   083E DD 77 FE           1713 	ld	-2(ix),a
   0841 23                 1714 	inc	hl
   0842 7E                 1715 	ld	a,(hl)
   0843 DD 77 FF           1716 	ld	-1(ix),a
                           1717 ;	genAssign
                           1718 ;	AOP_STK for 
   0846 DD 5E 09           1719 	ld	e,9(ix)
   0849 DD 56 0A           1720 	ld	d,10(ix)
                           1721 ;	genPlus
                           1722 ;	genPlusIncr
   084C 13                 1723 	inc	de
   084D 13                 1724 	inc	de
                           1725 ;	genPointerGet
   084E 6B                 1726 	ld	l,e
   084F 62                 1727 	ld	h,d
   0850 5E                 1728 	ld	e,(hl)
   0851 23                 1729 	inc	hl
   0852 56                 1730 	ld	d,(hl)
                           1731 ;	genPlus
                           1732 ;	AOP_STK for _TransXZ_sloc0_1_0
   0853 DD 7E FE           1733 	ld	a,-2(ix)
   0856 83                 1734 	add	a,e
   0857 5F                 1735 	ld	e,a
   0858 DD 7E FF           1736 	ld	a,-1(ix)
   085B 8A                 1737 	adc	a,d
   085C 57                 1738 	ld	d,a
                           1739 ;	genAssign (pointer)
                           1740 ;	AOP_STK for _TransXZ_sloc4_1_0
                           1741 ;	isBitvar = 0
   085D DD 6E F7           1742 	ld	l,-9(ix)
   0860 DD 66 F8           1743 	ld	h,-8(ix)
   0863 73                 1744 	ld	(hl),e
   0864 23                 1745 	inc	hl
   0865 72                 1746 	ld	(hl),d
                           1747 ;test.c:303: ret->z = UxU(vec->x, g_Sinus[g_Angle]) + UxU(vec->z, g_Cosinus[g_Angle]);
                           1748 ;	genPlus
                           1749 ;	genPlusIncr
   0866 03                 1750 	inc	bc
   0867 03                 1751 	inc	bc
   0868 03                 1752 	inc	bc
   0869 03                 1753 	inc	bc
                           1754 ;	genIpush
                           1755 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   086A C5                 1756 	push	bc
                           1757 ;	AOP_STK for _TransXZ_sloc6_1_0
   086B DD 6E F3           1758 	ld	l,-13(ix)
   086E DD 66 F4           1759 	ld	h,-12(ix)
   0871 E5                 1760 	push	hl
                           1761 ;	genIpush
                           1762 ;	AOP_STK for _TransXZ_sloc1_1_0
   0872 DD 6E FC           1763 	ld	l,-4(ix)
   0875 DD 66 FD           1764 	ld	h,-3(ix)
   0878 E5                 1765 	push	hl
                           1766 ;	genCall
   0879 CDr00s00           1767 	call	__mulint_rrx_s
                           1768 ;	AOP_STK for _TransXZ_sloc6_1_0
   087C DD 74 F4           1769 	ld	-12(ix),h
   087F DD 75 F3           1770 	ld	-13(ix),l
   0882 F1                 1771 	pop	af
   0883 F1                 1772 	pop	af
   0884 C1                 1773 	pop	bc
                           1774 ;	genIpush
                           1775 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0885 C5                 1776 	push	bc
                           1777 ;	AOP_STK for _TransXZ_sloc3_1_0
   0886 DD 6E F9           1778 	ld	l,-7(ix)
   0889 DD 66 FA           1779 	ld	h,-6(ix)
   088C E5                 1780 	push	hl
                           1781 ;	genIpush
                           1782 ;	AOP_STK for _TransXZ_sloc5_1_0
   088D DD 6E F5           1783 	ld	l,-11(ix)
   0890 DD 66 F6           1784 	ld	h,-10(ix)
   0893 E5                 1785 	push	hl
                           1786 ;	genCall
   0894 CDr00s00           1787 	call	__mulint_rrx_s
   0897 54                 1788 	ld	d,h
   0898 5D                 1789 	ld	e,l
   0899 F1                 1790 	pop	af
   089A F1                 1791 	pop	af
   089B C1                 1792 	pop	bc
                           1793 ;	genPlus
                           1794 ;	AOP_STK for _TransXZ_sloc6_1_0
   089C DD 7E F3           1795 	ld	a,-13(ix)
   089F 83                 1796 	add	a,e
   08A0 5F                 1797 	ld	e,a
   08A1 DD 7E F4           1798 	ld	a,-12(ix)
   08A4 8A                 1799 	adc	a,d
   08A5 57                 1800 	ld	d,a
                           1801 ;	genAssign (pointer)
                           1802 ;	isBitvar = 0
   08A6 69                 1803 	ld	l,c
   08A7 60                 1804 	ld	h,b
   08A8 73                 1805 	ld	(hl),e
   08A9 23                 1806 	inc	hl
   08AA 72                 1807 	ld	(hl),d
                           1808 ;	genLabel
                           1809 ;	genEndFunction
   08AB DD F9              1810 	ld	sp,ix
   08AD DD E1              1811 	pop	ix
   08AF C9                 1812 	ret
   08B0                    1813 _TransXZ_end::
                           1814 ;test.c:309: void TransXZIndex(i8 i)
                           1815 ;	genLabel
                           1816 ;	genFunction
                           1817 ;	---------------------------------
                           1818 ; Function TransXZIndex
                           1819 ; ---------------------------------
   08B0                    1820 _TransXZIndex_start::
   08B0                    1821 _TransXZIndex:
   08B0 DD E5              1822 	push	ix
   08B2 DD 21 00 00        1823 	ld	ix,#0
   08B6 DD 39              1824 	add	ix,sp
   08B8 21 F3 FF           1825 	ld	hl,#-13
   08BB 39                 1826 	add	hl,sp
   08BC F9                 1827 	ld	sp,hl
                           1828 ;test.c:311: g_World[i].x = UxU(g_Local[i].x, g_Cosinus[g_AngleIndex]) - UxU(g_Local[i].z, g_Sinus[g_AngleIndex]) + g_Position.x;
                           1829 ;	genMult
                           1830 ;	AOP_STK for 
   08BD DD 7E 04           1831 	ld	a,4(ix)
   08C0 5F                 1832 	ld	e,a
   08C1 87                 1833 	add	a,a
   08C2 83                 1834 	add	a,e
   08C3 87                 1835 	add	a,a
                           1836 ;	genPlus
                           1837 ;	AOP_STK for _TransXZIndex_sloc0_1_0
   08C4 4F                 1838 	ld	c, a
   08C5 C6r4D              1839 	add	a,#<_g_World
   08C7 DD 77 FE           1840 	ld	-2(ix),a
   08CA 3Es00              1841 	ld	a,#>_g_World
   08CC CE 00              1842 	adc	a,#0x00
   08CE DD 77 FF           1843 	ld	-1(ix),a
                           1844 ;	genPlus
   08D1 3Er1D              1845 	ld	a,#<_g_Local
   08D3 81                 1846 	add	a,c
   08D4 47                 1847 	ld	b,a
   08D5 3Es00              1848 	ld	a,#>_g_Local
   08D7 CE 00              1849 	adc	a,#0x00
   08D9 5F                 1850 	ld	e,a
                           1851 ;	genPointerGet
   08DA 68                 1852 	ld	l,b
   08DB 63                 1853 	ld	h,e
   08DC 46                 1854 	ld	b,(hl)
   08DD 23                 1855 	inc	hl
   08DE 5E                 1856 	ld	e,(hl)
                           1857 ;	genRightShift
                           1858 ;	AOP_STK for _TransXZIndex_sloc1_1_0
   08DF DD 70 FC           1859 	ld	-4(ix),b
   08E2 DD 73 FD           1860 	ld	-3(ix),e
   08E5 DD CB FD 2E        1861 	sra	-3(ix)
   08E9 DD CB FC 1E        1862 	rr	-4(ix)
   08ED DD CB FD 2E        1863 	sra	-3(ix)
   08F1 DD CB FC 1E        1864 	rr	-4(ix)
   08F5 DD CB FD 2E        1865 	sra	-3(ix)
   08F9 DD CB FC 1E        1866 	rr	-4(ix)
   08FD DD CB FD 2E        1867 	sra	-3(ix)
   0901 DD CB FC 1E        1868 	rr	-4(ix)
                           1869 ;	genLeftShift
                           1870 ;	AOP_STK for _TransXZIndex_sloc2_1_0
   0905 FD 21r1Cs00        1871 	ld	iy,#_g_AngleIndex
   0909 FD 7E 00           1872 	ld	a,0(iy)
   090C 87                 1873 	add	a,a
                           1874 ;	genPlus
                           1875 ;	AOP_STK for _TransXZIndex_sloc2_1_0
   090D DD 77 FB           1876 	ld	-5(ix), a
   0910 C6r2D              1877 	add	a,#<_g_Cosinus
   0912 47                 1878 	ld	b,a
   0913 3Es04              1879 	ld	a,#>_g_Cosinus
   0915 CE 00              1880 	adc	a,#0x00
   0917 5F                 1881 	ld	e,a
                           1882 ;	genPointerGet
   0918 68                 1883 	ld	l,b
   0919 63                 1884 	ld	h,e
   091A 46                 1885 	ld	b,(hl)
   091B 23                 1886 	inc	hl
   091C 5E                 1887 	ld	e,(hl)
                           1888 ;	genRightShift
                           1889 ;	AOP_STK for _TransXZIndex_sloc3_1_0
   091D DD 70 F9           1890 	ld	-7(ix),b
   0920 DD 73 FA           1891 	ld	-6(ix),e
   0923 DD CB FA 2E        1892 	sra	-6(ix)
   0927 DD CB F9 1E        1893 	rr	-7(ix)
   092B DD CB FA 2E        1894 	sra	-6(ix)
   092F DD CB F9 1E        1895 	rr	-7(ix)
   0933 DD CB FA 2E        1896 	sra	-6(ix)
   0937 DD CB F9 1E        1897 	rr	-7(ix)
   093B DD CB FA 2E        1898 	sra	-6(ix)
   093F DD CB F9 1E        1899 	rr	-7(ix)
                           1900 ;	genIpush
                           1901 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0943 C5                 1902 	push	bc
                           1903 ;	AOP_STK for _TransXZIndex_sloc3_1_0
   0944 DD 6E F9           1904 	ld	l,-7(ix)
   0947 DD 66 FA           1905 	ld	h,-6(ix)
   094A E5                 1906 	push	hl
                           1907 ;	genIpush
                           1908 ;	AOP_STK for _TransXZIndex_sloc1_1_0
   094B DD 6E FC           1909 	ld	l,-4(ix)
   094E DD 66 FD           1910 	ld	h,-3(ix)
   0951 E5                 1911 	push	hl
                           1912 ;	genCall
   0952 CDr00s00           1913 	call	__mulint_rrx_s
                           1914 ;	AOP_STK for _TransXZIndex_sloc1_1_0
   0955 DD 74 FD           1915 	ld	-3(ix),h
   0958 DD 75 FC           1916 	ld	-4(ix),l
   095B F1                 1917 	pop	af
   095C F1                 1918 	pop	af
   095D C1                 1919 	pop	bc
                           1920 ;	genPlus
                           1921 ;	AOP_STK for _TransXZIndex_sloc4_1_0
   095E 3Er1D              1922 	ld	a,#<_g_Local
   0960 81                 1923 	add	a,c
   0961 DD 77 F7           1924 	ld	-9(ix),a
   0964 3Es00              1925 	ld	a,#>_g_Local
   0966 CE 00              1926 	adc	a,#0x00
   0968 DD 77 F8           1927 	ld	-8(ix),a
                           1928 ;	genPlus
                           1929 ;	AOP_STK for _TransXZIndex_sloc4_1_0
                           1930 ;	genPlusIncr
   096B DD 7E F7           1931 	ld	a,-9(ix)
   096E C6 04              1932 	add	a,#0x04
   0970 57                 1933 	ld	d,a
   0971 DD 7E F8           1934 	ld	a,-8(ix)
   0974 CE 00              1935 	adc	a,#0x00
   0976 47                 1936 	ld	b,a
                           1937 ;	genPointerGet
   0977 6A                 1938 	ld	l,d
   0978 60                 1939 	ld	h,b
   0979 56                 1940 	ld	d,(hl)
   097A 23                 1941 	inc	hl
   097B 46                 1942 	ld	b,(hl)
                           1943 ;	genRightShift
                           1944 ;	AOP_STK for _TransXZIndex_sloc5_1_0
   097C DD 72 F5           1945 	ld	-11(ix),d
   097F DD 70 F6           1946 	ld	-10(ix),b
   0982 DD CB F6 2E        1947 	sra	-10(ix)
   0986 DD CB F5 1E        1948 	rr	-11(ix)
   098A DD CB F6 2E        1949 	sra	-10(ix)
   098E DD CB F5 1E        1950 	rr	-11(ix)
   0992 DD CB F6 2E        1951 	sra	-10(ix)
   0996 DD CB F5 1E        1952 	rr	-11(ix)
   099A DD CB F6 2E        1953 	sra	-10(ix)
   099E DD CB F5 1E        1954 	rr	-11(ix)
                           1955 ;	genPlus
                           1956 ;	AOP_STK for _TransXZIndex_sloc2_1_0
   09A2 3ErAD              1957 	ld	a,#<_g_Sinus
   09A4 DD 86 FB           1958 	add	a,-5(ix)
   09A7 5F                 1959 	ld	e,a
   09A8 3Es03              1960 	ld	a,#>_g_Sinus
   09AA CE 00              1961 	adc	a,#0x00
   09AC 47                 1962 	ld	b,a
                           1963 ;	genPointerGet
   09AD 6B                 1964 	ld	l,e
   09AE 60                 1965 	ld	h,b
   09AF 5E                 1966 	ld	e,(hl)
   09B0 23                 1967 	inc	hl
   09B1 46                 1968 	ld	b,(hl)
                           1969 ;	genRightShift
                           1970 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   09B2 DD 73 F3           1971 	ld	-13(ix),e
   09B5 DD 70 F4           1972 	ld	-12(ix),b
   09B8 DD CB F4 2E        1973 	sra	-12(ix)
   09BC DD CB F3 1E        1974 	rr	-13(ix)
   09C0 DD CB F4 2E        1975 	sra	-12(ix)
   09C4 DD CB F3 1E        1976 	rr	-13(ix)
   09C8 DD CB F4 2E        1977 	sra	-12(ix)
   09CC DD CB F3 1E        1978 	rr	-13(ix)
   09D0 DD CB F4 2E        1979 	sra	-12(ix)
   09D4 DD CB F3 1E        1980 	rr	-13(ix)
                           1981 ;	genIpush
                           1982 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09D8 C5                 1983 	push	bc
                           1984 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   09D9 DD 6E F3           1985 	ld	l,-13(ix)
   09DC DD 66 F4           1986 	ld	h,-12(ix)
   09DF E5                 1987 	push	hl
                           1988 ;	genIpush
                           1989 ;	AOP_STK for _TransXZIndex_sloc5_1_0
   09E0 DD 6E F5           1990 	ld	l,-11(ix)
   09E3 DD 66 F6           1991 	ld	h,-10(ix)
   09E6 E5                 1992 	push	hl
                           1993 ;	genCall
   09E7 CDr00s00           1994 	call	__mulint_rrx_s
   09EA 44                 1995 	ld	b,h
   09EB 55                 1996 	ld	d,l
   09EC F1                 1997 	pop	af
   09ED F1                 1998 	pop	af
   09EE 78                 1999 	ld	a,b
   09EF C1                 2000 	pop	bc
   09F0 47                 2001 	ld	b,a
                           2002 ;	genMinus
                           2003 ;	AOP_STK for _TransXZIndex_sloc1_1_0
   09F1 DD 7E FC           2004 	ld	a,-4(ix)
   09F4 92                 2005 	sub	a,d
   09F5 DD 77 FC           2006 	ld	-4(ix),a
   09F8 DD 7E FD           2007 	ld	a,-3(ix)
   09FB 98                 2008 	sbc	a,b
   09FC DD 77 FD           2009 	ld	-3(ix),a
                           2010 ;	genPointerGet
   09FF 21r15s00           2011 	ld	hl,#_g_Position
   0A02 5E                 2012 	ld	e,(hl)
   0A03 23                 2013 	inc	hl
   0A04 46                 2014 	ld	b,(hl)
                           2015 ;	genPlus
                           2016 ;	AOP_STK for _TransXZIndex_sloc1_1_0
   0A05 DD 7E FC           2017 	ld	a,-4(ix)
   0A08 83                 2018 	add	a,e
   0A09 5F                 2019 	ld	e,a
   0A0A DD 7E FD           2020 	ld	a,-3(ix)
   0A0D 88                 2021 	adc	a,b
   0A0E 47                 2022 	ld	b,a
                           2023 ;	genAssign (pointer)
                           2024 ;	AOP_STK for _TransXZIndex_sloc0_1_0
                           2025 ;	isBitvar = 0
   0A0F DD 6E FE           2026 	ld	l,-2(ix)
   0A12 DD 66 FF           2027 	ld	h,-1(ix)
   0A15 73                 2028 	ld	(hl),e
   0A16 23                 2029 	inc	hl
   0A17 70                 2030 	ld	(hl),b
                           2031 ;test.c:312: g_World[i].y = g_Local[i].y + g_Position.y;
                           2032 ;	genPlus
   0A18 3Er4D              2033 	ld	a,#<_g_World
   0A1A 81                 2034 	add	a,c
   0A1B 4F                 2035 	ld	c,a
   0A1C 3Es00              2036 	ld	a,#>_g_World
   0A1E CE 00              2037 	adc	a,#0x00
   0A20 47                 2038 	ld	b,a
                           2039 ;	genPlus
                           2040 ;	AOP_STK for _TransXZIndex_sloc1_1_0
                           2041 ;	genPlusIncr
   0A21 79                 2042 	ld	a,c
   0A22 C6 02              2043 	add	a,#0x02
   0A24 DD 77 FC           2044 	ld	-4(ix),a
   0A27 78                 2045 	ld	a,b
   0A28 CE 00              2046 	adc	a,#0x00
   0A2A DD 77 FD           2047 	ld	-3(ix),a
                           2048 ;	genPlus
                           2049 ;	AOP_STK for _TransXZIndex_sloc4_1_0
                           2050 ;	genPlusIncr
   0A2D DD 5E F7           2051 	ld	e,-9(ix)
   0A30 DD 56 F8           2052 	ld	d,-8(ix)
   0A33 13                 2053 	inc	de
   0A34 13                 2054 	inc	de
                           2055 ;	genPointerGet
                           2056 ;	AOP_STK for _TransXZIndex_sloc0_1_0
   0A35 6B                 2057 	ld	l,e
   0A36 62                 2058 	ld	h,d
   0A37 7E                 2059 	ld	a,(hl)
   0A38 DD 77 FE           2060 	ld	-2(ix),a
   0A3B 23                 2061 	inc	hl
   0A3C 7E                 2062 	ld	a,(hl)
   0A3D DD 77 FF           2063 	ld	-1(ix),a
                           2064 ;	genPlus
                           2065 ;	genPlusIncr
   0A40 11r17s00           2066 	ld	de,#_g_Position + 2
                           2067 ;	genPointerGet
   0A43 6B                 2068 	ld	l,e
   0A44 62                 2069 	ld	h,d
   0A45 5E                 2070 	ld	e,(hl)
   0A46 23                 2071 	inc	hl
   0A47 56                 2072 	ld	d,(hl)
                           2073 ;	genPlus
                           2074 ;	AOP_STK for _TransXZIndex_sloc0_1_0
   0A48 DD 7E FE           2075 	ld	a,-2(ix)
   0A4B 83                 2076 	add	a,e
   0A4C 5F                 2077 	ld	e,a
   0A4D DD 7E FF           2078 	ld	a,-1(ix)
   0A50 8A                 2079 	adc	a,d
   0A51 57                 2080 	ld	d,a
                           2081 ;	genAssign (pointer)
                           2082 ;	AOP_STK for _TransXZIndex_sloc1_1_0
                           2083 ;	isBitvar = 0
   0A52 DD 6E FC           2084 	ld	l,-4(ix)
   0A55 DD 66 FD           2085 	ld	h,-3(ix)
   0A58 73                 2086 	ld	(hl),e
   0A59 23                 2087 	inc	hl
   0A5A 72                 2088 	ld	(hl),d
                           2089 ;test.c:313: g_World[i].z = UxU(g_Local[i].x, g_Sinus[g_AngleIndex]) + UxU(g_Local[i].z, g_Cosinus[g_AngleIndex]) + g_Position.z;
                           2090 ;	genPlus
                           2091 ;	genPlusIncr
   0A5B 03                 2092 	inc	bc
   0A5C 03                 2093 	inc	bc
   0A5D 03                 2094 	inc	bc
   0A5E 03                 2095 	inc	bc
                           2096 ;	genPointerGet
                           2097 ;	AOP_STK for _TransXZIndex_sloc4_1_0
   0A5F DD 6E F7           2098 	ld	l,-9(ix)
   0A62 DD 66 F8           2099 	ld	h,-8(ix)
   0A65 5E                 2100 	ld	e,(hl)
   0A66 23                 2101 	inc	hl
   0A67 56                 2102 	ld	d,(hl)
                           2103 ;	genRightShift
   0A68 CB 2A              2104 	sra	d
   0A6A CB 1B              2105 	rr	e
   0A6C CB 2A              2106 	sra	d
   0A6E CB 1B              2107 	rr	e
   0A70 CB 2A              2108 	sra	d
   0A72 CB 1B              2109 	rr	e
   0A74 CB 2A              2110 	sra	d
   0A76 CB 1B              2111 	rr	e
                           2112 ;	genIpush
                           2113 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A78 C5                 2114 	push	bc
                           2115 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   0A79 DD 6E F3           2116 	ld	l,-13(ix)
   0A7C DD 66 F4           2117 	ld	h,-12(ix)
   0A7F E5                 2118 	push	hl
                           2119 ;	genIpush
   0A80 D5                 2120 	push	de
                           2121 ;	genCall
   0A81 CDr00s00           2122 	call	__mulint_rrx_s
                           2123 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   0A84 DD 74 F4           2124 	ld	-12(ix),h
   0A87 DD 75 F3           2125 	ld	-13(ix),l
   0A8A F1                 2126 	pop	af
   0A8B F1                 2127 	pop	af
   0A8C C1                 2128 	pop	bc
                           2129 ;	genIpush
                           2130 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A8D C5                 2131 	push	bc
                           2132 ;	AOP_STK for _TransXZIndex_sloc3_1_0
   0A8E DD 6E F9           2133 	ld	l,-7(ix)
   0A91 DD 66 FA           2134 	ld	h,-6(ix)
   0A94 E5                 2135 	push	hl
                           2136 ;	genIpush
                           2137 ;	AOP_STK for _TransXZIndex_sloc5_1_0
   0A95 DD 6E F5           2138 	ld	l,-11(ix)
   0A98 DD 66 F6           2139 	ld	h,-10(ix)
   0A9B E5                 2140 	push	hl
                           2141 ;	genCall
   0A9C CDr00s00           2142 	call	__mulint_rrx_s
   0A9F 54                 2143 	ld	d,h
   0AA0 5D                 2144 	ld	e,l
   0AA1 F1                 2145 	pop	af
   0AA2 F1                 2146 	pop	af
   0AA3 C1                 2147 	pop	bc
                           2148 ;	genPlus
                           2149 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   0AA4 DD 7E F3           2150 	ld	a,-13(ix)
   0AA7 83                 2151 	add	a,e
   0AA8 DD 77 F3           2152 	ld	-13(ix),a
   0AAB DD 7E F4           2153 	ld	a,-12(ix)
   0AAE 8A                 2154 	adc	a,d
   0AAF DD 77 F4           2155 	ld	-12(ix),a
                           2156 ;	genPlus
                           2157 ;	genPlusIncr
   0AB2 11r19s00           2158 	ld	de,#_g_Position + 4
                           2159 ;	genPointerGet
   0AB5 6B                 2160 	ld	l,e
   0AB6 62                 2161 	ld	h,d
   0AB7 5E                 2162 	ld	e,(hl)
   0AB8 23                 2163 	inc	hl
   0AB9 56                 2164 	ld	d,(hl)
                           2165 ;	genPlus
                           2166 ;	AOP_STK for _TransXZIndex_sloc6_1_0
   0ABA DD 7E F3           2167 	ld	a,-13(ix)
   0ABD 83                 2168 	add	a,e
   0ABE 5F                 2169 	ld	e,a
   0ABF DD 7E F4           2170 	ld	a,-12(ix)
   0AC2 8A                 2171 	adc	a,d
   0AC3 57                 2172 	ld	d,a
                           2173 ;	genAssign (pointer)
                           2174 ;	isBitvar = 0
   0AC4 69                 2175 	ld	l,c
   0AC5 60                 2176 	ld	h,b
   0AC6 73                 2177 	ld	(hl),e
   0AC7 23                 2178 	inc	hl
   0AC8 72                 2179 	ld	(hl),d
                           2180 ;	genLabel
                           2181 ;	genEndFunction
   0AC9 DD F9              2182 	ld	sp,ix
   0ACB DD E1              2183 	pop	ix
   0ACD C9                 2184 	ret
   0ACE                    2185 _TransXZIndex_end::
                           2186 ;test.c:319: void Project(ShortVec* ret, const ShortVec* vec, const ShortVec* cam)
                           2187 ;	genLabel
                           2188 ;	genFunction
                           2189 ;	---------------------------------
                           2190 ; Function Project
                           2191 ; ---------------------------------
   0ACE                    2192 _Project_start::
   0ACE                    2193 _Project:
   0ACE DD E5              2194 	push	ix
   0AD0 DD 21 00 00        2195 	ld	ix,#0
   0AD4 DD 39              2196 	add	ix,sp
   0AD6 21 F8 FF           2197 	ld	hl,#-8
   0AD9 39                 2198 	add	hl,sp
   0ADA F9                 2199 	ld	sp,hl
                           2200 ;test.c:322: ret->z = ((vec->z - cam->z) >> 5);
                           2201 ;	genAssign
                           2202 ;	AOP_STK for 
   0ADB DD 4E 04           2203 	ld	c,4(ix)
   0ADE DD 46 05           2204 	ld	b,5(ix)
                           2205 ;	genPlus
                           2206 ;	AOP_STK for _Project_sloc0_1_0
                           2207 ;	genPlusIncr
   0AE1 79                 2208 	ld	a,c
   0AE2 C6 04              2209 	add	a,#0x04
   0AE4 DD 77 FE           2210 	ld	-2(ix),a
   0AE7 78                 2211 	ld	a,b
   0AE8 CE 00              2212 	adc	a,#0x00
   0AEA DD 77 FF           2213 	ld	-1(ix),a
                           2214 ;	genAssign
                           2215 ;	AOP_STK for 
                           2216 ;	AOP_STK for _Project_sloc1_1_0
   0AED DD 7E 06           2217 	ld	a,6(ix)
   0AF0 DD 77 FC           2218 	ld	-4(ix),a
   0AF3 DD 7E 07           2219 	ld	a,7(ix)
   0AF6 DD 77 FD           2220 	ld	-3(ix),a
                           2221 ;	genPlus
                           2222 ;	AOP_STK for _Project_sloc1_1_0
                           2223 ;	genPlusIncr
   0AF9 DD 7E FC           2224 	ld	a,-4(ix)
   0AFC C6 04              2225 	add	a,#0x04
   0AFE 5F                 2226 	ld	e,a
   0AFF DD 7E FD           2227 	ld	a,-3(ix)
   0B02 CE 00              2228 	adc	a,#0x00
   0B04 57                 2229 	ld	d,a
                           2230 ;	genPointerGet
                           2231 ;	AOP_STK for _Project_sloc2_1_0
   0B05 6B                 2232 	ld	l,e
   0B06 62                 2233 	ld	h,d
   0B07 7E                 2234 	ld	a,(hl)
   0B08 DD 77 FA           2235 	ld	-6(ix),a
   0B0B 23                 2236 	inc	hl
   0B0C 7E                 2237 	ld	a,(hl)
   0B0D DD 77 FB           2238 	ld	-5(ix),a
                           2239 ;	genAssign
                           2240 ;	AOP_STK for 
                           2241 ;	AOP_STK for _Project_sloc3_1_0
   0B10 DD 7E 08           2242 	ld	a,8(ix)
   0B13 DD 77 F8           2243 	ld	-8(ix),a
   0B16 DD 7E 09           2244 	ld	a,9(ix)
   0B19 DD 77 F9           2245 	ld	-7(ix),a
                           2246 ;	genPlus
                           2247 ;	AOP_STK for _Project_sloc3_1_0
                           2248 ;	genPlusIncr
   0B1C DD 7E F8           2249 	ld	a,-8(ix)
   0B1F C6 04              2250 	add	a,#0x04
   0B21 5F                 2251 	ld	e,a
   0B22 DD 7E F9           2252 	ld	a,-7(ix)
   0B25 CE 00              2253 	adc	a,#0x00
   0B27 57                 2254 	ld	d,a
                           2255 ;	genPointerGet
   0B28 6B                 2256 	ld	l,e
   0B29 62                 2257 	ld	h,d
   0B2A 5E                 2258 	ld	e,(hl)
   0B2B 23                 2259 	inc	hl
   0B2C 56                 2260 	ld	d,(hl)
                           2261 ;	genMinus
                           2262 ;	AOP_STK for _Project_sloc2_1_0
   0B2D DD 7E FA           2263 	ld	a,-6(ix)
   0B30 93                 2264 	sub	a,e
   0B31 5F                 2265 	ld	e,a
   0B32 DD 7E FB           2266 	ld	a,-5(ix)
   0B35 9A                 2267 	sbc	a,d
   0B36 57                 2268 	ld	d,a
                           2269 ;	genRightShift
                           2270 ;	AOP_STK for _Project_sloc2_1_0
   0B37 DD 73 FA           2271 	ld	-6(ix),e
   0B3A DD 72 FB           2272 	ld	-5(ix),d
   0B3D DD CB FB 2E        2273 	sra	-5(ix)
   0B41 DD CB FA 1E        2274 	rr	-6(ix)
   0B45 DD CB FB 2E        2275 	sra	-5(ix)
   0B49 DD CB FA 1E        2276 	rr	-6(ix)
   0B4D DD CB FB 2E        2277 	sra	-5(ix)
   0B51 DD CB FA 1E        2278 	rr	-6(ix)
   0B55 DD CB FB 2E        2279 	sra	-5(ix)
   0B59 DD CB FA 1E        2280 	rr	-6(ix)
   0B5D DD CB FB 2E        2281 	sra	-5(ix)
   0B61 DD CB FA 1E        2282 	rr	-6(ix)
                           2283 ;	genAssign (pointer)
                           2284 ;	AOP_STK for _Project_sloc0_1_0
                           2285 ;	AOP_STK for _Project_sloc2_1_0
                           2286 ;	isBitvar = 0
   0B65 DD 6E FE           2287 	ld	l,-2(ix)
   0B68 DD 66 FF           2288 	ld	h,-1(ix)
   0B6B DD 7E FA           2289 	ld	a,-6(ix)
   0B6E 77                 2290 	ld	(hl),a
   0B6F 23                 2291 	inc	hl
   0B70 DD 7E FB           2292 	ld	a,-5(ix)
   0B73 77                 2293 	ld	(hl),a
                           2294 ;test.c:323: ret->x = 128 + (vec->x - cam->x) / ret->z;
                           2295 ;	genPointerGet
                           2296 ;	AOP_STK for _Project_sloc1_1_0
                           2297 ;	AOP_STK for _Project_sloc0_1_0
   0B74 DD 6E FC           2298 	ld	l,-4(ix)
   0B77 DD 66 FD           2299 	ld	h,-3(ix)
   0B7A 7E                 2300 	ld	a,(hl)
   0B7B DD 77 FE           2301 	ld	-2(ix),a
   0B7E 23                 2302 	inc	hl
   0B7F 7E                 2303 	ld	a,(hl)
   0B80 DD 77 FF           2304 	ld	-1(ix),a
                           2305 ;	genPointerGet
                           2306 ;	AOP_STK for _Project_sloc3_1_0
   0B83 DD 6E F8           2307 	ld	l,-8(ix)
   0B86 DD 66 F9           2308 	ld	h,-7(ix)
   0B89 5E                 2309 	ld	e,(hl)
   0B8A 23                 2310 	inc	hl
   0B8B 56                 2311 	ld	d,(hl)
                           2312 ;	genMinus
                           2313 ;	AOP_STK for _Project_sloc0_1_0
   0B8C DD 7E FE           2314 	ld	a,-2(ix)
   0B8F 93                 2315 	sub	a,e
   0B90 5F                 2316 	ld	e,a
   0B91 DD 7E FF           2317 	ld	a,-1(ix)
   0B94 9A                 2318 	sbc	a,d
   0B95 57                 2319 	ld	d,a
                           2320 ;	genIpush
                           2321 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B96 C5                 2322 	push	bc
                           2323 ;	AOP_STK for _Project_sloc2_1_0
   0B97 DD 6E FA           2324 	ld	l,-6(ix)
   0B9A DD 66 FB           2325 	ld	h,-5(ix)
   0B9D E5                 2326 	push	hl
                           2327 ;	genIpush
   0B9E D5                 2328 	push	de
                           2329 ;	genCall
   0B9F CDr00s00           2330 	call	__divsint_rrx_s
   0BA2 54                 2331 	ld	d,h
   0BA3 5D                 2332 	ld	e,l
   0BA4 F1                 2333 	pop	af
   0BA5 F1                 2334 	pop	af
   0BA6 C1                 2335 	pop	bc
                           2336 ;	genPlus
                           2337 ;	genPlusIncr
   0BA7 7B                 2338 	ld	a,e
   0BA8 C6 80              2339 	add	a,#0x80
   0BAA 5F                 2340 	ld	e,a
   0BAB 7A                 2341 	ld	a,d
   0BAC CE 00              2342 	adc	a,#0x00
   0BAE 57                 2343 	ld	d,a
                           2344 ;	genAssign (pointer)
                           2345 ;	isBitvar = 0
   0BAF 69                 2346 	ld	l,c
   0BB0 60                 2347 	ld	h,b
   0BB1 73                 2348 	ld	(hl),e
   0BB2 23                 2349 	inc	hl
   0BB3 72                 2350 	ld	(hl),d
                           2351 ;test.c:324: ret->y = 106 + (vec->y - cam->y) / ret->z;
                           2352 ;	genPlus
                           2353 ;	genPlusIncr
   0BB4 03                 2354 	inc	bc
   0BB5 03                 2355 	inc	bc
                           2356 ;	genPlus
                           2357 ;	AOP_STK for _Project_sloc1_1_0
                           2358 ;	genPlusIncr
   0BB6 DD 5E FC           2359 	ld	e,-4(ix)
   0BB9 DD 56 FD           2360 	ld	d,-3(ix)
   0BBC 13                 2361 	inc	de
   0BBD 13                 2362 	inc	de
                           2363 ;	genPointerGet
                           2364 ;	AOP_STK for _Project_sloc1_1_0
   0BBE 6B                 2365 	ld	l,e
   0BBF 62                 2366 	ld	h,d
   0BC0 7E                 2367 	ld	a,(hl)
   0BC1 DD 77 FC           2368 	ld	-4(ix),a
   0BC4 23                 2369 	inc	hl
   0BC5 7E                 2370 	ld	a,(hl)
   0BC6 DD 77 FD           2371 	ld	-3(ix),a
                           2372 ;	genPlus
                           2373 ;	AOP_STK for _Project_sloc3_1_0
                           2374 ;	genPlusIncr
   0BC9 DD 5E F8           2375 	ld	e,-8(ix)
   0BCC DD 56 F9           2376 	ld	d,-7(ix)
   0BCF 13                 2377 	inc	de
   0BD0 13                 2378 	inc	de
                           2379 ;	genPointerGet
   0BD1 6B                 2380 	ld	l,e
   0BD2 62                 2381 	ld	h,d
   0BD3 5E                 2382 	ld	e,(hl)
   0BD4 23                 2383 	inc	hl
   0BD5 56                 2384 	ld	d,(hl)
                           2385 ;	genMinus
                           2386 ;	AOP_STK for _Project_sloc1_1_0
   0BD6 DD 7E FC           2387 	ld	a,-4(ix)
   0BD9 93                 2388 	sub	a,e
   0BDA 5F                 2389 	ld	e,a
   0BDB DD 7E FD           2390 	ld	a,-3(ix)
   0BDE 9A                 2391 	sbc	a,d
   0BDF 57                 2392 	ld	d,a
                           2393 ;	genIpush
                           2394 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BE0 C5                 2395 	push	bc
                           2396 ;	AOP_STK for _Project_sloc2_1_0
   0BE1 DD 6E FA           2397 	ld	l,-6(ix)
   0BE4 DD 66 FB           2398 	ld	h,-5(ix)
   0BE7 E5                 2399 	push	hl
                           2400 ;	genIpush
   0BE8 D5                 2401 	push	de
                           2402 ;	genCall
   0BE9 CDr00s00           2403 	call	__divsint_rrx_s
   0BEC 54                 2404 	ld	d,h
   0BED 5D                 2405 	ld	e,l
   0BEE F1                 2406 	pop	af
   0BEF F1                 2407 	pop	af
   0BF0 C1                 2408 	pop	bc
                           2409 ;	genPlus
                           2410 ;	genPlusIncr
   0BF1 7B                 2411 	ld	a,e
   0BF2 C6 6A              2412 	add	a,#0x6A
   0BF4 5F                 2413 	ld	e,a
   0BF5 7A                 2414 	ld	a,d
   0BF6 CE 00              2415 	adc	a,#0x00
   0BF8 57                 2416 	ld	d,a
                           2417 ;	genAssign (pointer)
                           2418 ;	isBitvar = 0
   0BF9 69                 2419 	ld	l,c
   0BFA 60                 2420 	ld	h,b
   0BFB 73                 2421 	ld	(hl),e
   0BFC 23                 2422 	inc	hl
   0BFD 72                 2423 	ld	(hl),d
                           2424 ;	genLabel
                           2425 ;	genEndFunction
   0BFE DD F9              2426 	ld	sp,ix
   0C00 DD E1              2427 	pop	ix
   0C02 C9                 2428 	ret
   0C03                    2429 _Project_end::
                           2430 ;test.c:343: void Update()
                           2431 ;	genLabel
                           2432 ;	genFunction
                           2433 ;	---------------------------------
                           2434 ; Function Update
                           2435 ; ---------------------------------
   0C03                    2436 _Update_start::
   0C03                    2437 _Update:
   0C03 DD E5              2438 	push	ix
   0C05 DD 21 00 00        2439 	ld	ix,#0
   0C09 DD 39              2440 	add	ix,sp
   0C0B 21 FD FF           2441 	ld	hl,#-3
   0C0E 39                 2442 	add	hl,sp
   0C0F F9                 2443 	ld	sp,hl
                           2444 ;test.c:349: DRAW_LINE(g_Screen[0].x, g_Screen[0].y, g_Screen[1].x, g_Screen[1].y, 0);
                           2445 ;	genPointerGet
   0C10 21r7Ds00           2446 	ld	hl,#_g_Screen
   0C13 7E                 2447 	ld	a,(hl)
   0C14 FD 21r00s00        2448 	ld	iy,#_SX
   0C18 FD 77 00           2449 	ld	0(iy),a
   0C1B 23                 2450 	inc	hl
   0C1C 7E                 2451 	ld	a,(hl)
   0C1D FD 77 01           2452 	ld	1(iy),a
                           2453 ;	genPlus
                           2454 ;	genPlusIncr
   0C20 01r7Fs00           2455 	ld	bc,#_g_Screen + 2
                           2456 ;	genPointerGet
   0C23 69                 2457 	ld	l,c
   0C24 60                 2458 	ld	h,b
   0C25 7E                 2459 	ld	a,(hl)
   0C26 FD 21r02s00        2460 	ld	iy,#_SY
   0C2A FD 77 00           2461 	ld	0(iy),a
   0C2D 23                 2462 	inc	hl
   0C2E 7E                 2463 	ld	a,(hl)
   0C2F FD 77 01           2464 	ld	1(iy),a
                           2465 ;	genPlus
                           2466 ;	genPlusIncr
   0C32 01r83s00           2467 	ld	bc,#_g_Screen + 6
                           2468 ;	genPointerGet
   0C35 69                 2469 	ld	l,c
   0C36 60                 2470 	ld	h,b
   0C37 7E                 2471 	ld	a,(hl)
   0C38 FD 21r04s00        2472 	ld	iy,#_DX
   0C3C FD 77 00           2473 	ld	0(iy),a
   0C3F 23                 2474 	inc	hl
   0C40 7E                 2475 	ld	a,(hl)
   0C41 FD 77 01           2476 	ld	1(iy),a
                           2477 ;	genPlus
                           2478 ;	genPlusIncr
                           2479 ;	genPlus
                           2480 ;	genPlusIncr
   0C44 01r85s00           2481 	ld	bc,#_g_Screen + 6 + 2
                           2482 ;	genPointerGet
   0C47 69                 2483 	ld	l,c
   0C48 60                 2484 	ld	h,b
   0C49 7E                 2485 	ld	a,(hl)
   0C4A FD 21r06s00        2486 	ld	iy,#_DY
   0C4E FD 77 00           2487 	ld	0(iy),a
   0C51 23                 2488 	inc	hl
   0C52 7E                 2489 	ld	a,(hl)
   0C53 FD 77 01           2490 	ld	1(iy),a
                           2491 ;	genAssign
   0C56 FD 21r0Cs00        2492 	ld	iy,#_CLR
   0C5A FD 36 00 00        2493 	ld	0(iy),#0x00
                           2494 ;	genCall
                           2495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C5E CDr74s15           2496 	call	_DrawLineSimple
                           2497 ;test.c:350: DRAW_LINE(g_Screen[1].x, g_Screen[1].y, g_Screen[2].x, g_Screen[2].y, 0);
                           2498 ;	genPlus
                           2499 ;	genPlusIncr
   0C61 01r83s00           2500 	ld	bc,#_g_Screen + 6
                           2501 ;	genPointerGet
   0C64 69                 2502 	ld	l,c
   0C65 60                 2503 	ld	h,b
   0C66 7E                 2504 	ld	a,(hl)
   0C67 FD 21r00s00        2505 	ld	iy,#_SX
   0C6B FD 77 00           2506 	ld	0(iy),a
   0C6E 23                 2507 	inc	hl
   0C6F 7E                 2508 	ld	a,(hl)
   0C70 FD 77 01           2509 	ld	1(iy),a
                           2510 ;	genPlus
                           2511 ;	genPlusIncr
                           2512 ;	genPlus
                           2513 ;	genPlusIncr
   0C73 01r85s00           2514 	ld	bc,#_g_Screen + 6 + 2
                           2515 ;	genPointerGet
   0C76 69                 2516 	ld	l,c
   0C77 60                 2517 	ld	h,b
   0C78 7E                 2518 	ld	a,(hl)
   0C79 FD 21r02s00        2519 	ld	iy,#_SY
   0C7D FD 77 00           2520 	ld	0(iy),a
   0C80 23                 2521 	inc	hl
   0C81 7E                 2522 	ld	a,(hl)
   0C82 FD 77 01           2523 	ld	1(iy),a
                           2524 ;	genPlus
                           2525 ;	genPlusIncr
   0C85 01r89s00           2526 	ld	bc,#_g_Screen + 12
                           2527 ;	genPointerGet
   0C88 69                 2528 	ld	l,c
   0C89 60                 2529 	ld	h,b
   0C8A 7E                 2530 	ld	a,(hl)
   0C8B FD 21r04s00        2531 	ld	iy,#_DX
   0C8F FD 77 00           2532 	ld	0(iy),a
   0C92 23                 2533 	inc	hl
   0C93 7E                 2534 	ld	a,(hl)
   0C94 FD 77 01           2535 	ld	1(iy),a
                           2536 ;	genPlus
                           2537 ;	genPlusIncr
                           2538 ;	genPlus
                           2539 ;	genPlusIncr
   0C97 01r8Bs00           2540 	ld	bc,#_g_Screen + 12 + 2
                           2541 ;	genPointerGet
   0C9A 69                 2542 	ld	l,c
   0C9B 60                 2543 	ld	h,b
   0C9C 7E                 2544 	ld	a,(hl)
   0C9D FD 21r06s00        2545 	ld	iy,#_DY
   0CA1 FD 77 00           2546 	ld	0(iy),a
   0CA4 23                 2547 	inc	hl
   0CA5 7E                 2548 	ld	a,(hl)
   0CA6 FD 77 01           2549 	ld	1(iy),a
                           2550 ;	genAssign
   0CA9 FD 21r0Cs00        2551 	ld	iy,#_CLR
   0CAD FD 36 00 00        2552 	ld	0(iy),#0x00
                           2553 ;	genCall
                           2554 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CB1 CDr74s15           2555 	call	_DrawLineSimple
                           2556 ;test.c:351: DRAW_LINE(g_Screen[2].x, g_Screen[2].y, g_Screen[3].x, g_Screen[3].y, 0);
                           2557 ;	genPlus
                           2558 ;	genPlusIncr
   0CB4 01r89s00           2559 	ld	bc,#_g_Screen + 12
                           2560 ;	genPointerGet
   0CB7 69                 2561 	ld	l,c
   0CB8 60                 2562 	ld	h,b
   0CB9 7E                 2563 	ld	a,(hl)
   0CBA FD 21r00s00        2564 	ld	iy,#_SX
   0CBE FD 77 00           2565 	ld	0(iy),a
   0CC1 23                 2566 	inc	hl
   0CC2 7E                 2567 	ld	a,(hl)
   0CC3 FD 77 01           2568 	ld	1(iy),a
                           2569 ;	genPlus
                           2570 ;	genPlusIncr
                           2571 ;	genPlus
                           2572 ;	genPlusIncr
   0CC6 01r8Bs00           2573 	ld	bc,#_g_Screen + 12 + 2
                           2574 ;	genPointerGet
   0CC9 69                 2575 	ld	l,c
   0CCA 60                 2576 	ld	h,b
   0CCB 7E                 2577 	ld	a,(hl)
   0CCC FD 21r02s00        2578 	ld	iy,#_SY
   0CD0 FD 77 00           2579 	ld	0(iy),a
   0CD3 23                 2580 	inc	hl
   0CD4 7E                 2581 	ld	a,(hl)
   0CD5 FD 77 01           2582 	ld	1(iy),a
                           2583 ;	genPlus
                           2584 ;	genPlusIncr
   0CD8 01r8Fs00           2585 	ld	bc,#_g_Screen + 18
                           2586 ;	genPointerGet
   0CDB 69                 2587 	ld	l,c
   0CDC 60                 2588 	ld	h,b
   0CDD 7E                 2589 	ld	a,(hl)
   0CDE FD 21r04s00        2590 	ld	iy,#_DX
   0CE2 FD 77 00           2591 	ld	0(iy),a
   0CE5 23                 2592 	inc	hl
   0CE6 7E                 2593 	ld	a,(hl)
   0CE7 FD 77 01           2594 	ld	1(iy),a
                           2595 ;	genPlus
                           2596 ;	genPlusIncr
                           2597 ;	genPlus
                           2598 ;	genPlusIncr
   0CEA 01r91s00           2599 	ld	bc,#_g_Screen + 18 + 2
                           2600 ;	genPointerGet
   0CED 69                 2601 	ld	l,c
   0CEE 60                 2602 	ld	h,b
   0CEF 7E                 2603 	ld	a,(hl)
   0CF0 FD 21r06s00        2604 	ld	iy,#_DY
   0CF4 FD 77 00           2605 	ld	0(iy),a
   0CF7 23                 2606 	inc	hl
   0CF8 7E                 2607 	ld	a,(hl)
   0CF9 FD 77 01           2608 	ld	1(iy),a
                           2609 ;	genAssign
   0CFC FD 21r0Cs00        2610 	ld	iy,#_CLR
   0D00 FD 36 00 00        2611 	ld	0(iy),#0x00
                           2612 ;	genCall
                           2613 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D04 CDr74s15           2614 	call	_DrawLineSimple
                           2615 ;test.c:352: DRAW_LINE(g_Screen[3].x, g_Screen[3].y, g_Screen[0].x, g_Screen[0].y, 0);
                           2616 ;	genPlus
                           2617 ;	genPlusIncr
   0D07 01r8Fs00           2618 	ld	bc,#_g_Screen + 18
                           2619 ;	genPointerGet
   0D0A 69                 2620 	ld	l,c
   0D0B 60                 2621 	ld	h,b
   0D0C 7E                 2622 	ld	a,(hl)
   0D0D FD 21r00s00        2623 	ld	iy,#_SX
   0D11 FD 77 00           2624 	ld	0(iy),a
   0D14 23                 2625 	inc	hl
   0D15 7E                 2626 	ld	a,(hl)
   0D16 FD 77 01           2627 	ld	1(iy),a
                           2628 ;	genPlus
                           2629 ;	genPlusIncr
                           2630 ;	genPlus
                           2631 ;	genPlusIncr
   0D19 01r91s00           2632 	ld	bc,#_g_Screen + 18 + 2
                           2633 ;	genPointerGet
   0D1C 69                 2634 	ld	l,c
   0D1D 60                 2635 	ld	h,b
   0D1E 7E                 2636 	ld	a,(hl)
   0D1F FD 21r02s00        2637 	ld	iy,#_SY
   0D23 FD 77 00           2638 	ld	0(iy),a
   0D26 23                 2639 	inc	hl
   0D27 7E                 2640 	ld	a,(hl)
   0D28 FD 77 01           2641 	ld	1(iy),a
                           2642 ;	genPointerGet
   0D2B 21r7Ds00           2643 	ld	hl,#_g_Screen
   0D2E 7E                 2644 	ld	a,(hl)
   0D2F FD 21r04s00        2645 	ld	iy,#_DX
   0D33 FD 77 00           2646 	ld	0(iy),a
   0D36 23                 2647 	inc	hl
   0D37 7E                 2648 	ld	a,(hl)
   0D38 FD 77 01           2649 	ld	1(iy),a
                           2650 ;	genPlus
                           2651 ;	genPlusIncr
   0D3B 01r7Fs00           2652 	ld	bc,#_g_Screen + 2
                           2653 ;	genPointerGet
   0D3E 69                 2654 	ld	l,c
   0D3F 60                 2655 	ld	h,b
   0D40 7E                 2656 	ld	a,(hl)
   0D41 FD 21r06s00        2657 	ld	iy,#_DY
   0D45 FD 77 00           2658 	ld	0(iy),a
   0D48 23                 2659 	inc	hl
   0D49 7E                 2660 	ld	a,(hl)
   0D4A FD 77 01           2661 	ld	1(iy),a
                           2662 ;	genAssign
   0D4D FD 21r0Cs00        2663 	ld	iy,#_CLR
   0D51 FD 36 00 00        2664 	ld	0(iy),#0x00
                           2665 ;	genCall
                           2666 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D55 CDr74s15           2667 	call	_DrawLineSimple
                           2668 ;test.c:354: DRAW_LINE(g_Screen[4].x, g_Screen[4].y, g_Screen[5].x, g_Screen[5].y, 0);
                           2669 ;	genPlus
                           2670 ;	genPlusIncr
   0D58 01r95s00           2671 	ld	bc,#_g_Screen + 24
                           2672 ;	genPointerGet
   0D5B 69                 2673 	ld	l,c
   0D5C 60                 2674 	ld	h,b
   0D5D 7E                 2675 	ld	a,(hl)
   0D5E FD 21r00s00        2676 	ld	iy,#_SX
   0D62 FD 77 00           2677 	ld	0(iy),a
   0D65 23                 2678 	inc	hl
   0D66 7E                 2679 	ld	a,(hl)
   0D67 FD 77 01           2680 	ld	1(iy),a
                           2681 ;	genPlus
                           2682 ;	genPlusIncr
                           2683 ;	genPlus
                           2684 ;	genPlusIncr
   0D6A 01r97s00           2685 	ld	bc,#_g_Screen + 24 + 2
                           2686 ;	genPointerGet
   0D6D 69                 2687 	ld	l,c
   0D6E 60                 2688 	ld	h,b
   0D6F 7E                 2689 	ld	a,(hl)
   0D70 FD 21r02s00        2690 	ld	iy,#_SY
   0D74 FD 77 00           2691 	ld	0(iy),a
   0D77 23                 2692 	inc	hl
   0D78 7E                 2693 	ld	a,(hl)
   0D79 FD 77 01           2694 	ld	1(iy),a
                           2695 ;	genPlus
                           2696 ;	genPlusIncr
   0D7C 01r9Bs00           2697 	ld	bc,#_g_Screen + 30
                           2698 ;	genPointerGet
   0D7F 69                 2699 	ld	l,c
   0D80 60                 2700 	ld	h,b
   0D81 7E                 2701 	ld	a,(hl)
   0D82 FD 21r04s00        2702 	ld	iy,#_DX
   0D86 FD 77 00           2703 	ld	0(iy),a
   0D89 23                 2704 	inc	hl
   0D8A 7E                 2705 	ld	a,(hl)
   0D8B FD 77 01           2706 	ld	1(iy),a
                           2707 ;	genPlus
                           2708 ;	genPlusIncr
                           2709 ;	genPlus
                           2710 ;	genPlusIncr
   0D8E 01r9Ds00           2711 	ld	bc,#_g_Screen + 30 + 2
                           2712 ;	genPointerGet
   0D91 69                 2713 	ld	l,c
   0D92 60                 2714 	ld	h,b
   0D93 7E                 2715 	ld	a,(hl)
   0D94 FD 21r06s00        2716 	ld	iy,#_DY
   0D98 FD 77 00           2717 	ld	0(iy),a
   0D9B 23                 2718 	inc	hl
   0D9C 7E                 2719 	ld	a,(hl)
   0D9D FD 77 01           2720 	ld	1(iy),a
                           2721 ;	genAssign
   0DA0 FD 21r0Cs00        2722 	ld	iy,#_CLR
   0DA4 FD 36 00 00        2723 	ld	0(iy),#0x00
                           2724 ;	genCall
                           2725 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DA8 CDr74s15           2726 	call	_DrawLineSimple
                           2727 ;test.c:355: DRAW_LINE(g_Screen[5].x, g_Screen[5].y, g_Screen[6].x, g_Screen[6].y, 0);
                           2728 ;	genPlus
                           2729 ;	genPlusIncr
   0DAB 01r9Bs00           2730 	ld	bc,#_g_Screen + 30
                           2731 ;	genPointerGet
   0DAE 69                 2732 	ld	l,c
   0DAF 60                 2733 	ld	h,b
   0DB0 7E                 2734 	ld	a,(hl)
   0DB1 FD 21r00s00        2735 	ld	iy,#_SX
   0DB5 FD 77 00           2736 	ld	0(iy),a
   0DB8 23                 2737 	inc	hl
   0DB9 7E                 2738 	ld	a,(hl)
   0DBA FD 77 01           2739 	ld	1(iy),a
                           2740 ;	genPlus
                           2741 ;	genPlusIncr
                           2742 ;	genPlus
                           2743 ;	genPlusIncr
   0DBD 01r9Ds00           2744 	ld	bc,#_g_Screen + 30 + 2
                           2745 ;	genPointerGet
   0DC0 69                 2746 	ld	l,c
   0DC1 60                 2747 	ld	h,b
   0DC2 7E                 2748 	ld	a,(hl)
   0DC3 FD 21r02s00        2749 	ld	iy,#_SY
   0DC7 FD 77 00           2750 	ld	0(iy),a
   0DCA 23                 2751 	inc	hl
   0DCB 7E                 2752 	ld	a,(hl)
   0DCC FD 77 01           2753 	ld	1(iy),a
                           2754 ;	genPlus
                           2755 ;	genPlusIncr
   0DCF 01rA1s00           2756 	ld	bc,#_g_Screen + 36
                           2757 ;	genPointerGet
   0DD2 69                 2758 	ld	l,c
   0DD3 60                 2759 	ld	h,b
   0DD4 7E                 2760 	ld	a,(hl)
   0DD5 FD 21r04s00        2761 	ld	iy,#_DX
   0DD9 FD 77 00           2762 	ld	0(iy),a
   0DDC 23                 2763 	inc	hl
   0DDD 7E                 2764 	ld	a,(hl)
   0DDE FD 77 01           2765 	ld	1(iy),a
                           2766 ;	genPlus
                           2767 ;	genPlusIncr
                           2768 ;	genPlus
                           2769 ;	genPlusIncr
   0DE1 01rA3s00           2770 	ld	bc,#_g_Screen + 36 + 2
                           2771 ;	genPointerGet
   0DE4 69                 2772 	ld	l,c
   0DE5 60                 2773 	ld	h,b
   0DE6 7E                 2774 	ld	a,(hl)
   0DE7 FD 21r06s00        2775 	ld	iy,#_DY
   0DEB FD 77 00           2776 	ld	0(iy),a
   0DEE 23                 2777 	inc	hl
   0DEF 7E                 2778 	ld	a,(hl)
   0DF0 FD 77 01           2779 	ld	1(iy),a
                           2780 ;	genAssign
   0DF3 FD 21r0Cs00        2781 	ld	iy,#_CLR
   0DF7 FD 36 00 00        2782 	ld	0(iy),#0x00
                           2783 ;	genCall
                           2784 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DFB CDr74s15           2785 	call	_DrawLineSimple
                           2786 ;test.c:356: DRAW_LINE(g_Screen[6].x, g_Screen[6].y, g_Screen[7].x, g_Screen[7].y, 0);
                           2787 ;	genPlus
                           2788 ;	genPlusIncr
   0DFE 01rA1s00           2789 	ld	bc,#_g_Screen + 36
                           2790 ;	genPointerGet
   0E01 69                 2791 	ld	l,c
   0E02 60                 2792 	ld	h,b
   0E03 7E                 2793 	ld	a,(hl)
   0E04 FD 21r00s00        2794 	ld	iy,#_SX
   0E08 FD 77 00           2795 	ld	0(iy),a
   0E0B 23                 2796 	inc	hl
   0E0C 7E                 2797 	ld	a,(hl)
   0E0D FD 77 01           2798 	ld	1(iy),a
                           2799 ;	genPlus
                           2800 ;	genPlusIncr
                           2801 ;	genPlus
                           2802 ;	genPlusIncr
   0E10 01rA3s00           2803 	ld	bc,#_g_Screen + 36 + 2
                           2804 ;	genPointerGet
   0E13 69                 2805 	ld	l,c
   0E14 60                 2806 	ld	h,b
   0E15 7E                 2807 	ld	a,(hl)
   0E16 FD 21r02s00        2808 	ld	iy,#_SY
   0E1A FD 77 00           2809 	ld	0(iy),a
   0E1D 23                 2810 	inc	hl
   0E1E 7E                 2811 	ld	a,(hl)
   0E1F FD 77 01           2812 	ld	1(iy),a
                           2813 ;	genPlus
                           2814 ;	genPlusIncr
   0E22 01rA7s00           2815 	ld	bc,#_g_Screen + 42
                           2816 ;	genPointerGet
   0E25 69                 2817 	ld	l,c
   0E26 60                 2818 	ld	h,b
   0E27 7E                 2819 	ld	a,(hl)
   0E28 FD 21r04s00        2820 	ld	iy,#_DX
   0E2C FD 77 00           2821 	ld	0(iy),a
   0E2F 23                 2822 	inc	hl
   0E30 7E                 2823 	ld	a,(hl)
   0E31 FD 77 01           2824 	ld	1(iy),a
                           2825 ;	genPlus
                           2826 ;	genPlusIncr
                           2827 ;	genPlus
                           2828 ;	genPlusIncr
   0E34 01rA9s00           2829 	ld	bc,#_g_Screen + 42 + 2
                           2830 ;	genPointerGet
   0E37 69                 2831 	ld	l,c
   0E38 60                 2832 	ld	h,b
   0E39 7E                 2833 	ld	a,(hl)
   0E3A FD 21r06s00        2834 	ld	iy,#_DY
   0E3E FD 77 00           2835 	ld	0(iy),a
   0E41 23                 2836 	inc	hl
   0E42 7E                 2837 	ld	a,(hl)
   0E43 FD 77 01           2838 	ld	1(iy),a
                           2839 ;	genAssign
   0E46 FD 21r0Cs00        2840 	ld	iy,#_CLR
   0E4A FD 36 00 00        2841 	ld	0(iy),#0x00
                           2842 ;	genCall
                           2843 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E4E CDr74s15           2844 	call	_DrawLineSimple
                           2845 ;test.c:357: DRAW_LINE(g_Screen[7].x, g_Screen[7].y, g_Screen[4].x, g_Screen[4].y, 0);
                           2846 ;	genPlus
                           2847 ;	genPlusIncr
   0E51 01rA7s00           2848 	ld	bc,#_g_Screen + 42
                           2849 ;	genPointerGet
   0E54 69                 2850 	ld	l,c
   0E55 60                 2851 	ld	h,b
   0E56 7E                 2852 	ld	a,(hl)
   0E57 FD 21r00s00        2853 	ld	iy,#_SX
   0E5B FD 77 00           2854 	ld	0(iy),a
   0E5E 23                 2855 	inc	hl
   0E5F 7E                 2856 	ld	a,(hl)
   0E60 FD 77 01           2857 	ld	1(iy),a
                           2858 ;	genPlus
                           2859 ;	genPlusIncr
                           2860 ;	genPlus
                           2861 ;	genPlusIncr
   0E63 01rA9s00           2862 	ld	bc,#_g_Screen + 42 + 2
                           2863 ;	genPointerGet
   0E66 69                 2864 	ld	l,c
   0E67 60                 2865 	ld	h,b
   0E68 7E                 2866 	ld	a,(hl)
   0E69 FD 21r02s00        2867 	ld	iy,#_SY
   0E6D FD 77 00           2868 	ld	0(iy),a
   0E70 23                 2869 	inc	hl
   0E71 7E                 2870 	ld	a,(hl)
   0E72 FD 77 01           2871 	ld	1(iy),a
                           2872 ;	genPlus
                           2873 ;	genPlusIncr
   0E75 01r95s00           2874 	ld	bc,#_g_Screen + 24
                           2875 ;	genPointerGet
   0E78 69                 2876 	ld	l,c
   0E79 60                 2877 	ld	h,b
   0E7A 7E                 2878 	ld	a,(hl)
   0E7B FD 21r04s00        2879 	ld	iy,#_DX
   0E7F FD 77 00           2880 	ld	0(iy),a
   0E82 23                 2881 	inc	hl
   0E83 7E                 2882 	ld	a,(hl)
   0E84 FD 77 01           2883 	ld	1(iy),a
                           2884 ;	genPlus
                           2885 ;	genPlusIncr
                           2886 ;	genPlus
                           2887 ;	genPlusIncr
   0E87 01r97s00           2888 	ld	bc,#_g_Screen + 24 + 2
                           2889 ;	genPointerGet
   0E8A 69                 2890 	ld	l,c
   0E8B 60                 2891 	ld	h,b
   0E8C 7E                 2892 	ld	a,(hl)
   0E8D FD 21r06s00        2893 	ld	iy,#_DY
   0E91 FD 77 00           2894 	ld	0(iy),a
   0E94 23                 2895 	inc	hl
   0E95 7E                 2896 	ld	a,(hl)
   0E96 FD 77 01           2897 	ld	1(iy),a
                           2898 ;	genAssign
   0E99 FD 21r0Cs00        2899 	ld	iy,#_CLR
   0E9D FD 36 00 00        2900 	ld	0(iy),#0x00
                           2901 ;	genCall
                           2902 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EA1 CDr74s15           2903 	call	_DrawLineSimple
                           2904 ;test.c:359: DRAW_LINE(g_Screen[0].x, g_Screen[0].y, g_Screen[4].x, g_Screen[4].y, 0);
                           2905 ;	genPointerGet
   0EA4 21r7Ds00           2906 	ld	hl,#_g_Screen
   0EA7 7E                 2907 	ld	a,(hl)
   0EA8 FD 21r00s00        2908 	ld	iy,#_SX
   0EAC FD 77 00           2909 	ld	0(iy),a
   0EAF 23                 2910 	inc	hl
   0EB0 7E                 2911 	ld	a,(hl)
   0EB1 FD 77 01           2912 	ld	1(iy),a
                           2913 ;	genPlus
                           2914 ;	genPlusIncr
   0EB4 01r7Fs00           2915 	ld	bc,#_g_Screen + 2
                           2916 ;	genPointerGet
   0EB7 69                 2917 	ld	l,c
   0EB8 60                 2918 	ld	h,b
   0EB9 7E                 2919 	ld	a,(hl)
   0EBA FD 21r02s00        2920 	ld	iy,#_SY
   0EBE FD 77 00           2921 	ld	0(iy),a
   0EC1 23                 2922 	inc	hl
   0EC2 7E                 2923 	ld	a,(hl)
   0EC3 FD 77 01           2924 	ld	1(iy),a
                           2925 ;	genPlus
                           2926 ;	genPlusIncr
   0EC6 01r95s00           2927 	ld	bc,#_g_Screen + 24
                           2928 ;	genPointerGet
   0EC9 69                 2929 	ld	l,c
   0ECA 60                 2930 	ld	h,b
   0ECB 7E                 2931 	ld	a,(hl)
   0ECC FD 21r04s00        2932 	ld	iy,#_DX
   0ED0 FD 77 00           2933 	ld	0(iy),a
   0ED3 23                 2934 	inc	hl
   0ED4 7E                 2935 	ld	a,(hl)
   0ED5 FD 77 01           2936 	ld	1(iy),a
                           2937 ;	genPlus
                           2938 ;	genPlusIncr
                           2939 ;	genPlus
                           2940 ;	genPlusIncr
   0ED8 01r97s00           2941 	ld	bc,#_g_Screen + 24 + 2
                           2942 ;	genPointerGet
   0EDB 69                 2943 	ld	l,c
   0EDC 60                 2944 	ld	h,b
   0EDD 7E                 2945 	ld	a,(hl)
   0EDE FD 21r06s00        2946 	ld	iy,#_DY
   0EE2 FD 77 00           2947 	ld	0(iy),a
   0EE5 23                 2948 	inc	hl
   0EE6 7E                 2949 	ld	a,(hl)
   0EE7 FD 77 01           2950 	ld	1(iy),a
                           2951 ;	genAssign
   0EEA FD 21r0Cs00        2952 	ld	iy,#_CLR
   0EEE FD 36 00 00        2953 	ld	0(iy),#0x00
                           2954 ;	genCall
                           2955 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EF2 CDr74s15           2956 	call	_DrawLineSimple
                           2957 ;test.c:360: DRAW_LINE(g_Screen[1].x, g_Screen[1].y, g_Screen[5].x, g_Screen[5].y, 0);
                           2958 ;	genPlus
                           2959 ;	genPlusIncr
   0EF5 01r83s00           2960 	ld	bc,#_g_Screen + 6
                           2961 ;	genPointerGet
   0EF8 69                 2962 	ld	l,c
   0EF9 60                 2963 	ld	h,b
   0EFA 7E                 2964 	ld	a,(hl)
   0EFB FD 21r00s00        2965 	ld	iy,#_SX
   0EFF FD 77 00           2966 	ld	0(iy),a
   0F02 23                 2967 	inc	hl
   0F03 7E                 2968 	ld	a,(hl)
   0F04 FD 77 01           2969 	ld	1(iy),a
                           2970 ;	genPlus
                           2971 ;	genPlusIncr
                           2972 ;	genPlus
                           2973 ;	genPlusIncr
   0F07 01r85s00           2974 	ld	bc,#_g_Screen + 6 + 2
                           2975 ;	genPointerGet
   0F0A 69                 2976 	ld	l,c
   0F0B 60                 2977 	ld	h,b
   0F0C 7E                 2978 	ld	a,(hl)
   0F0D FD 21r02s00        2979 	ld	iy,#_SY
   0F11 FD 77 00           2980 	ld	0(iy),a
   0F14 23                 2981 	inc	hl
   0F15 7E                 2982 	ld	a,(hl)
   0F16 FD 77 01           2983 	ld	1(iy),a
                           2984 ;	genPlus
                           2985 ;	genPlusIncr
   0F19 01r9Bs00           2986 	ld	bc,#_g_Screen + 30
                           2987 ;	genPointerGet
   0F1C 69                 2988 	ld	l,c
   0F1D 60                 2989 	ld	h,b
   0F1E 7E                 2990 	ld	a,(hl)
   0F1F FD 21r04s00        2991 	ld	iy,#_DX
   0F23 FD 77 00           2992 	ld	0(iy),a
   0F26 23                 2993 	inc	hl
   0F27 7E                 2994 	ld	a,(hl)
   0F28 FD 77 01           2995 	ld	1(iy),a
                           2996 ;	genPlus
                           2997 ;	genPlusIncr
                           2998 ;	genPlus
                           2999 ;	genPlusIncr
   0F2B 01r9Ds00           3000 	ld	bc,#_g_Screen + 30 + 2
                           3001 ;	genPointerGet
   0F2E 69                 3002 	ld	l,c
   0F2F 60                 3003 	ld	h,b
   0F30 7E                 3004 	ld	a,(hl)
   0F31 FD 21r06s00        3005 	ld	iy,#_DY
   0F35 FD 77 00           3006 	ld	0(iy),a
   0F38 23                 3007 	inc	hl
   0F39 7E                 3008 	ld	a,(hl)
   0F3A FD 77 01           3009 	ld	1(iy),a
                           3010 ;	genAssign
   0F3D FD 21r0Cs00        3011 	ld	iy,#_CLR
   0F41 FD 36 00 00        3012 	ld	0(iy),#0x00
                           3013 ;	genCall
                           3014 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F45 CDr74s15           3015 	call	_DrawLineSimple
                           3016 ;test.c:361: DRAW_LINE(g_Screen[2].x, g_Screen[2].y, g_Screen[6].x, g_Screen[6].y, 0);
                           3017 ;	genPlus
                           3018 ;	genPlusIncr
   0F48 01r89s00           3019 	ld	bc,#_g_Screen + 12
                           3020 ;	genPointerGet
   0F4B 69                 3021 	ld	l,c
   0F4C 60                 3022 	ld	h,b
   0F4D 7E                 3023 	ld	a,(hl)
   0F4E FD 21r00s00        3024 	ld	iy,#_SX
   0F52 FD 77 00           3025 	ld	0(iy),a
   0F55 23                 3026 	inc	hl
   0F56 7E                 3027 	ld	a,(hl)
   0F57 FD 77 01           3028 	ld	1(iy),a
                           3029 ;	genPlus
                           3030 ;	genPlusIncr
                           3031 ;	genPlus
                           3032 ;	genPlusIncr
   0F5A 01r8Bs00           3033 	ld	bc,#_g_Screen + 12 + 2
                           3034 ;	genPointerGet
   0F5D 69                 3035 	ld	l,c
   0F5E 60                 3036 	ld	h,b
   0F5F 7E                 3037 	ld	a,(hl)
   0F60 FD 21r02s00        3038 	ld	iy,#_SY
   0F64 FD 77 00           3039 	ld	0(iy),a
   0F67 23                 3040 	inc	hl
   0F68 7E                 3041 	ld	a,(hl)
   0F69 FD 77 01           3042 	ld	1(iy),a
                           3043 ;	genPlus
                           3044 ;	genPlusIncr
   0F6C 01rA1s00           3045 	ld	bc,#_g_Screen + 36
                           3046 ;	genPointerGet
   0F6F 69                 3047 	ld	l,c
   0F70 60                 3048 	ld	h,b
   0F71 7E                 3049 	ld	a,(hl)
   0F72 FD 21r04s00        3050 	ld	iy,#_DX
   0F76 FD 77 00           3051 	ld	0(iy),a
   0F79 23                 3052 	inc	hl
   0F7A 7E                 3053 	ld	a,(hl)
   0F7B FD 77 01           3054 	ld	1(iy),a
                           3055 ;	genPlus
                           3056 ;	genPlusIncr
                           3057 ;	genPlus
                           3058 ;	genPlusIncr
   0F7E 01rA3s00           3059 	ld	bc,#_g_Screen + 36 + 2
                           3060 ;	genPointerGet
   0F81 69                 3061 	ld	l,c
   0F82 60                 3062 	ld	h,b
   0F83 7E                 3063 	ld	a,(hl)
   0F84 FD 21r06s00        3064 	ld	iy,#_DY
   0F88 FD 77 00           3065 	ld	0(iy),a
   0F8B 23                 3066 	inc	hl
   0F8C 7E                 3067 	ld	a,(hl)
   0F8D FD 77 01           3068 	ld	1(iy),a
                           3069 ;	genAssign
   0F90 FD 21r0Cs00        3070 	ld	iy,#_CLR
   0F94 FD 36 00 00        3071 	ld	0(iy),#0x00
                           3072 ;	genCall
                           3073 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F98 CDr74s15           3074 	call	_DrawLineSimple
                           3075 ;test.c:362: DRAW_LINE(g_Screen[3].x, g_Screen[3].y, g_Screen[7].x, g_Screen[7].y, 0);
                           3076 ;	genPlus
                           3077 ;	genPlusIncr
   0F9B 01r8Fs00           3078 	ld	bc,#_g_Screen + 18
                           3079 ;	genPointerGet
   0F9E 69                 3080 	ld	l,c
   0F9F 60                 3081 	ld	h,b
   0FA0 7E                 3082 	ld	a,(hl)
   0FA1 FD 21r00s00        3083 	ld	iy,#_SX
   0FA5 FD 77 00           3084 	ld	0(iy),a
   0FA8 23                 3085 	inc	hl
   0FA9 7E                 3086 	ld	a,(hl)
   0FAA FD 77 01           3087 	ld	1(iy),a
                           3088 ;	genPlus
                           3089 ;	genPlusIncr
                           3090 ;	genPlus
                           3091 ;	genPlusIncr
   0FAD 01r91s00           3092 	ld	bc,#_g_Screen + 18 + 2
                           3093 ;	genPointerGet
   0FB0 69                 3094 	ld	l,c
   0FB1 60                 3095 	ld	h,b
   0FB2 7E                 3096 	ld	a,(hl)
   0FB3 FD 21r02s00        3097 	ld	iy,#_SY
   0FB7 FD 77 00           3098 	ld	0(iy),a
   0FBA 23                 3099 	inc	hl
   0FBB 7E                 3100 	ld	a,(hl)
   0FBC FD 77 01           3101 	ld	1(iy),a
                           3102 ;	genPlus
                           3103 ;	genPlusIncr
   0FBF 01rA7s00           3104 	ld	bc,#_g_Screen + 42
                           3105 ;	genPointerGet
   0FC2 69                 3106 	ld	l,c
   0FC3 60                 3107 	ld	h,b
   0FC4 7E                 3108 	ld	a,(hl)
   0FC5 FD 21r04s00        3109 	ld	iy,#_DX
   0FC9 FD 77 00           3110 	ld	0(iy),a
   0FCC 23                 3111 	inc	hl
   0FCD 7E                 3112 	ld	a,(hl)
   0FCE FD 77 01           3113 	ld	1(iy),a
                           3114 ;	genPlus
                           3115 ;	genPlusIncr
                           3116 ;	genPlus
                           3117 ;	genPlusIncr
   0FD1 01rA9s00           3118 	ld	bc,#_g_Screen + 42 + 2
                           3119 ;	genPointerGet
   0FD4 69                 3120 	ld	l,c
   0FD5 60                 3121 	ld	h,b
   0FD6 7E                 3122 	ld	a,(hl)
   0FD7 FD 21r06s00        3123 	ld	iy,#_DY
   0FDB FD 77 00           3124 	ld	0(iy),a
   0FDE 23                 3125 	inc	hl
   0FDF 7E                 3126 	ld	a,(hl)
   0FE0 FD 77 01           3127 	ld	1(iy),a
                           3128 ;	genAssign
   0FE3 FD 21r0Cs00        3129 	ld	iy,#_CLR
   0FE7 FD 36 00 00        3130 	ld	0(iy),#0x00
                           3131 ;	genCall
                           3132 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FEB CDr74s15           3133 	call	_DrawLineSimple
                           3134 ;test.c:364: for(i=0; i<POINT_NUM; i++)
                           3135 ;	genAssign
                           3136 ;	AOP_STK for _Update_i_1_1
   0FEE DD 36 FF 00        3137 	ld	-1(ix),#0x00
                           3138 ;	genAssign
   0FF2 06 00              3139 	ld	b,#0x00
                           3140 ;	genLabel
   0FF4                    3141 00101$:
                           3142 ;	genCmpLt
                           3143 ;	AOP_STK for _Update_i_1_1
   0FF4 DD 7E FF           3144 	ld	a,-1(ix)
   0FF7 D6 08              3145 	sub	a,#0x08
   0FF9 F2rADs10           3146 	jp	P,00104$
                           3147 ;test.c:367: DrawPoint8(g_Screen[i].x, g_Screen[i].y, 0);
                           3148 ;	genPlus
                           3149 ;	AOP_STK for _Update_sloc0_1_0
   0FFC 3Er7D              3150 	ld	a,#<_g_Screen
   0FFE 80                 3151 	add	a,b
   0FFF DD 77 FD           3152 	ld	-3(ix),a
   1002 3Es00              3153 	ld	a,#>_g_Screen
   1004 CE 00              3154 	adc	a,#0x00
   1006 DD 77 FE           3155 	ld	-2(ix),a
                           3156 ;	genPlus
                           3157 ;	AOP_STK for _Update_sloc0_1_0
                           3158 ;	genPlusIncr
   1009 DD 7E FD           3159 	ld	a,-3(ix)
   100C C6 02              3160 	add	a,#0x02
   100E 4F                 3161 	ld	c,a
   100F DD 7E FE           3162 	ld	a,-2(ix)
   1012 CE 00              3163 	adc	a,#0x00
   1014 5F                 3164 	ld	e,a
                           3165 ;	genPointerGet
   1015 69                 3166 	ld	l,c
   1016 63                 3167 	ld	h,e
   1017 4E                 3168 	ld	c,(hl)
   1018 23                 3169 	inc	hl
   1019 5E                 3170 	ld	e,(hl)
                           3171 ;	genCast
                           3172 ;	genPointerGet
                           3173 ;	AOP_STK for _Update_sloc0_1_0
   101A DD 6E FD           3174 	ld	l,-3(ix)
   101D DD 66 FE           3175 	ld	h,-2(ix)
   1020 5E                 3176 	ld	e,(hl)
   1021 23                 3177 	inc	hl
   1022 56                 3178 	ld	d,(hl)
                           3179 ;	genCast
                           3180 ;	genIpush
                           3181 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1023 C5                 3182 	push	bc
   1024 3E 00              3183 	ld	a,#0x00
   1026 F5                 3184 	push	af
   1027 33                 3185 	inc	sp
                           3186 ;	genIpush
   1028 79                 3187 	ld	a,c
   1029 F5                 3188 	push	af
   102A 33                 3189 	inc	sp
                           3190 ;	genIpush
   102B 7B                 3191 	ld	a,e
   102C F5                 3192 	push	af
   102D 33                 3193 	inc	sp
                           3194 ;	genCall
   102E CDrD5s14           3195 	call	_DrawPoint8
   1031 F1                 3196 	pop	af
   1032 33                 3197 	inc	sp
   1033 C1                 3198 	pop	bc
                           3199 ;test.c:371: TransXZIndex(i);
                           3200 ;	genIpush
                           3201 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1034 C5                 3202 	push	bc
                           3203 ;	AOP_STK for _Update_i_1_1
   1035 DD 7E FF           3204 	ld	a,-1(ix)
   1038 F5                 3205 	push	af
   1039 33                 3206 	inc	sp
                           3207 ;	genCall
   103A CDrB0s08           3208 	call	_TransXZIndex
   103D 33                 3209 	inc	sp
   103E C1                 3210 	pop	bc
                           3211 ;test.c:372: Project(&g_Screen[i], &g_World[i], &g_Camera);
                           3212 ;	genPlus
                           3213 ;	AOP_STK for _Update_sloc0_1_0
   103F 3Er4D              3214 	ld	a,#<_g_World
   1041 80                 3215 	add	a,b
   1042 DD 77 FD           3216 	ld	-3(ix),a
   1045 3Es00              3217 	ld	a,#>_g_World
   1047 CE 00              3218 	adc	a,#0x00
   1049 DD 77 FE           3219 	ld	-2(ix),a
                           3220 ;	genPlus
   104C 3Er7D              3221 	ld	a,#<_g_Screen
   104E 80                 3222 	add	a,b
   104F 4F                 3223 	ld	c,a
   1050 3Es00              3224 	ld	a,#>_g_Screen
   1052 CE 00              3225 	adc	a,#0x00
   1054 5F                 3226 	ld	e,a
                           3227 ;	genIpush
                           3228 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1055 C5                 3229 	push	bc
   1056 21r0Fs00           3230 	ld	hl,#_g_Camera
   1059 E5                 3231 	push	hl
                           3232 ;	genIpush
                           3233 ;	AOP_STK for _Update_sloc0_1_0
   105A DD 6E FD           3234 	ld	l,-3(ix)
   105D DD 66 FE           3235 	ld	h,-2(ix)
   1060 E5                 3236 	push	hl
                           3237 ;	genIpush
   1061 69                 3238 	ld	l,c
   1062 63                 3239 	ld	h,e
   1063 E5                 3240 	push	hl
                           3241 ;	genCall
   1064 CDrCEs0A           3242 	call	_Project
   1067 F1                 3243 	pop	af
   1068 F1                 3244 	pop	af
   1069 F1                 3245 	pop	af
   106A C1                 3246 	pop	bc
                           3247 ;test.c:375: DrawPoint8(g_Screen[i].x, g_Screen[i].y, 255);
                           3248 ;	genPlus
                           3249 ;	AOP_STK for _Update_sloc0_1_0
   106B 3Er7D              3250 	ld	a,#<_g_Screen
   106D 80                 3251 	add	a,b
   106E DD 77 FD           3252 	ld	-3(ix),a
   1071 3Es00              3253 	ld	a,#>_g_Screen
   1073 CE 00              3254 	adc	a,#0x00
   1075 DD 77 FE           3255 	ld	-2(ix),a
                           3256 ;	genPlus
                           3257 ;	AOP_STK for _Update_sloc0_1_0
                           3258 ;	genPlusIncr
   1078 DD 7E FD           3259 	ld	a,-3(ix)
   107B C6 02              3260 	add	a,#0x02
   107D 4F                 3261 	ld	c,a
   107E DD 7E FE           3262 	ld	a,-2(ix)
   1081 CE 00              3263 	adc	a,#0x00
   1083 5F                 3264 	ld	e,a
                           3265 ;	genPointerGet
   1084 69                 3266 	ld	l,c
   1085 63                 3267 	ld	h,e
   1086 4E                 3268 	ld	c,(hl)
   1087 23                 3269 	inc	hl
   1088 5E                 3270 	ld	e,(hl)
                           3271 ;	genCast
                           3272 ;	genPointerGet
                           3273 ;	AOP_STK for _Update_sloc0_1_0
   1089 DD 6E FD           3274 	ld	l,-3(ix)
   108C DD 66 FE           3275 	ld	h,-2(ix)
   108F 5E                 3276 	ld	e,(hl)
   1090 23                 3277 	inc	hl
   1091 56                 3278 	ld	d,(hl)
                           3279 ;	genCast
                           3280 ;	genIpush
                           3281 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1092 C5                 3282 	push	bc
   1093 3E FF              3283 	ld	a,#0xFF
   1095 F5                 3284 	push	af
   1096 33                 3285 	inc	sp
                           3286 ;	genIpush
   1097 79                 3287 	ld	a,c
   1098 F5                 3288 	push	af
   1099 33                 3289 	inc	sp
                           3290 ;	genIpush
   109A 7B                 3291 	ld	a,e
   109B F5                 3292 	push	af
   109C 33                 3293 	inc	sp
                           3294 ;	genCall
   109D CDrD5s14           3295 	call	_DrawPoint8
   10A0 F1                 3296 	pop	af
   10A1 33                 3297 	inc	sp
   10A2 C1                 3298 	pop	bc
                           3299 ;test.c:364: for(i=0; i<POINT_NUM; i++)
                           3300 ;	genPlus
                           3301 ;	genPlusIncr
   10A3 78                 3302 	ld	a,b
   10A4 C6 06              3303 	add	a,#0x06
   10A6 47                 3304 	ld	b,a
                           3305 ;	genPlus
                           3306 ;	AOP_STK for _Update_i_1_1
                           3307 ;	genPlusIncr
   10A7 DD 34 FF           3308 	inc	-1(ix)
                           3309 ;	genGoto
   10AA C3rF4s0F           3310 	jp	00101$
                           3311 ;	genLabel
   10AD                    3312 00104$:
                           3313 ;test.c:378: DRAW_LINE(g_Screen[0].x, g_Screen[0].y, g_Screen[1].x, g_Screen[1].y, 128);
                           3314 ;	genPointerGet
   10AD 21r7Ds00           3315 	ld	hl,#_g_Screen
   10B0 7E                 3316 	ld	a,(hl)
   10B1 FD 21r00s00        3317 	ld	iy,#_SX
   10B5 FD 77 00           3318 	ld	0(iy),a
   10B8 23                 3319 	inc	hl
   10B9 7E                 3320 	ld	a,(hl)
   10BA FD 77 01           3321 	ld	1(iy),a
                           3322 ;	genPlus
                           3323 ;	genPlusIncr
   10BD 01r7Fs00           3324 	ld	bc,#_g_Screen + 2
                           3325 ;	genPointerGet
   10C0 69                 3326 	ld	l,c
   10C1 60                 3327 	ld	h,b
   10C2 7E                 3328 	ld	a,(hl)
   10C3 FD 21r02s00        3329 	ld	iy,#_SY
   10C7 FD 77 00           3330 	ld	0(iy),a
   10CA 23                 3331 	inc	hl
   10CB 7E                 3332 	ld	a,(hl)
   10CC FD 77 01           3333 	ld	1(iy),a
                           3334 ;	genPlus
                           3335 ;	genPlusIncr
   10CF 01r83s00           3336 	ld	bc,#_g_Screen + 6
                           3337 ;	genPointerGet
   10D2 69                 3338 	ld	l,c
   10D3 60                 3339 	ld	h,b
   10D4 7E                 3340 	ld	a,(hl)
   10D5 FD 21r04s00        3341 	ld	iy,#_DX
   10D9 FD 77 00           3342 	ld	0(iy),a
   10DC 23                 3343 	inc	hl
   10DD 7E                 3344 	ld	a,(hl)
   10DE FD 77 01           3345 	ld	1(iy),a
                           3346 ;	genPlus
                           3347 ;	genPlusIncr
                           3348 ;	genPlus
                           3349 ;	genPlusIncr
   10E1 01r85s00           3350 	ld	bc,#_g_Screen + 6 + 2
                           3351 ;	genPointerGet
   10E4 69                 3352 	ld	l,c
   10E5 60                 3353 	ld	h,b
   10E6 7E                 3354 	ld	a,(hl)
   10E7 FD 21r06s00        3355 	ld	iy,#_DY
   10EB FD 77 00           3356 	ld	0(iy),a
   10EE 23                 3357 	inc	hl
   10EF 7E                 3358 	ld	a,(hl)
   10F0 FD 77 01           3359 	ld	1(iy),a
                           3360 ;	genAssign
   10F3 FD 21r0Cs00        3361 	ld	iy,#_CLR
   10F7 FD 36 00 80        3362 	ld	0(iy),#0x80
                           3363 ;	genCall
                           3364 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10FB CDr74s15           3365 	call	_DrawLineSimple
                           3366 ;test.c:379: DRAW_LINE(g_Screen[1].x, g_Screen[1].y, g_Screen[2].x, g_Screen[2].y, 128);
                           3367 ;	genPlus
                           3368 ;	genPlusIncr
   10FE 01r83s00           3369 	ld	bc,#_g_Screen + 6
                           3370 ;	genPointerGet
   1101 69                 3371 	ld	l,c
   1102 60                 3372 	ld	h,b
   1103 7E                 3373 	ld	a,(hl)
   1104 FD 21r00s00        3374 	ld	iy,#_SX
   1108 FD 77 00           3375 	ld	0(iy),a
   110B 23                 3376 	inc	hl
   110C 7E                 3377 	ld	a,(hl)
   110D FD 77 01           3378 	ld	1(iy),a
                           3379 ;	genPlus
                           3380 ;	genPlusIncr
                           3381 ;	genPlus
                           3382 ;	genPlusIncr
   1110 01r85s00           3383 	ld	bc,#_g_Screen + 6 + 2
                           3384 ;	genPointerGet
   1113 69                 3385 	ld	l,c
   1114 60                 3386 	ld	h,b
   1115 7E                 3387 	ld	a,(hl)
   1116 FD 21r02s00        3388 	ld	iy,#_SY
   111A FD 77 00           3389 	ld	0(iy),a
   111D 23                 3390 	inc	hl
   111E 7E                 3391 	ld	a,(hl)
   111F FD 77 01           3392 	ld	1(iy),a
                           3393 ;	genPlus
                           3394 ;	genPlusIncr
   1122 01r89s00           3395 	ld	bc,#_g_Screen + 12
                           3396 ;	genPointerGet
   1125 69                 3397 	ld	l,c
   1126 60                 3398 	ld	h,b
   1127 7E                 3399 	ld	a,(hl)
   1128 FD 21r04s00        3400 	ld	iy,#_DX
   112C FD 77 00           3401 	ld	0(iy),a
   112F 23                 3402 	inc	hl
   1130 7E                 3403 	ld	a,(hl)
   1131 FD 77 01           3404 	ld	1(iy),a
                           3405 ;	genPlus
                           3406 ;	genPlusIncr
                           3407 ;	genPlus
                           3408 ;	genPlusIncr
   1134 01r8Bs00           3409 	ld	bc,#_g_Screen + 12 + 2
                           3410 ;	genPointerGet
   1137 69                 3411 	ld	l,c
   1138 60                 3412 	ld	h,b
   1139 7E                 3413 	ld	a,(hl)
   113A FD 21r06s00        3414 	ld	iy,#_DY
   113E FD 77 00           3415 	ld	0(iy),a
   1141 23                 3416 	inc	hl
   1142 7E                 3417 	ld	a,(hl)
   1143 FD 77 01           3418 	ld	1(iy),a
                           3419 ;	genAssign
   1146 FD 21r0Cs00        3420 	ld	iy,#_CLR
   114A FD 36 00 80        3421 	ld	0(iy),#0x80
                           3422 ;	genCall
                           3423 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   114E CDr74s15           3424 	call	_DrawLineSimple
                           3425 ;test.c:380: DRAW_LINE(g_Screen[2].x, g_Screen[2].y, g_Screen[3].x, g_Screen[3].y, 128);
                           3426 ;	genPlus
                           3427 ;	genPlusIncr
   1151 01r89s00           3428 	ld	bc,#_g_Screen + 12
                           3429 ;	genPointerGet
   1154 69                 3430 	ld	l,c
   1155 60                 3431 	ld	h,b
   1156 7E                 3432 	ld	a,(hl)
   1157 FD 21r00s00        3433 	ld	iy,#_SX
   115B FD 77 00           3434 	ld	0(iy),a
   115E 23                 3435 	inc	hl
   115F 7E                 3436 	ld	a,(hl)
   1160 FD 77 01           3437 	ld	1(iy),a
                           3438 ;	genPlus
                           3439 ;	genPlusIncr
                           3440 ;	genPlus
                           3441 ;	genPlusIncr
   1163 01r8Bs00           3442 	ld	bc,#_g_Screen + 12 + 2
                           3443 ;	genPointerGet
   1166 69                 3444 	ld	l,c
   1167 60                 3445 	ld	h,b
   1168 7E                 3446 	ld	a,(hl)
   1169 FD 21r02s00        3447 	ld	iy,#_SY
   116D FD 77 00           3448 	ld	0(iy),a
   1170 23                 3449 	inc	hl
   1171 7E                 3450 	ld	a,(hl)
   1172 FD 77 01           3451 	ld	1(iy),a
                           3452 ;	genPlus
                           3453 ;	genPlusIncr
   1175 01r8Fs00           3454 	ld	bc,#_g_Screen + 18
                           3455 ;	genPointerGet
   1178 69                 3456 	ld	l,c
   1179 60                 3457 	ld	h,b
   117A 7E                 3458 	ld	a,(hl)
   117B FD 21r04s00        3459 	ld	iy,#_DX
   117F FD 77 00           3460 	ld	0(iy),a
   1182 23                 3461 	inc	hl
   1183 7E                 3462 	ld	a,(hl)
   1184 FD 77 01           3463 	ld	1(iy),a
                           3464 ;	genPlus
                           3465 ;	genPlusIncr
                           3466 ;	genPlus
                           3467 ;	genPlusIncr
   1187 01r91s00           3468 	ld	bc,#_g_Screen + 18 + 2
                           3469 ;	genPointerGet
   118A 69                 3470 	ld	l,c
   118B 60                 3471 	ld	h,b
   118C 7E                 3472 	ld	a,(hl)
   118D FD 21r06s00        3473 	ld	iy,#_DY
   1191 FD 77 00           3474 	ld	0(iy),a
   1194 23                 3475 	inc	hl
   1195 7E                 3476 	ld	a,(hl)
   1196 FD 77 01           3477 	ld	1(iy),a
                           3478 ;	genAssign
   1199 FD 21r0Cs00        3479 	ld	iy,#_CLR
   119D FD 36 00 80        3480 	ld	0(iy),#0x80
                           3481 ;	genCall
                           3482 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11A1 CDr74s15           3483 	call	_DrawLineSimple
                           3484 ;test.c:381: DRAW_LINE(g_Screen[3].x, g_Screen[3].y, g_Screen[0].x, g_Screen[0].y, 128);
                           3485 ;	genPlus
                           3486 ;	genPlusIncr
   11A4 01r8Fs00           3487 	ld	bc,#_g_Screen + 18
                           3488 ;	genPointerGet
   11A7 69                 3489 	ld	l,c
   11A8 60                 3490 	ld	h,b
   11A9 7E                 3491 	ld	a,(hl)
   11AA FD 21r00s00        3492 	ld	iy,#_SX
   11AE FD 77 00           3493 	ld	0(iy),a
   11B1 23                 3494 	inc	hl
   11B2 7E                 3495 	ld	a,(hl)
   11B3 FD 77 01           3496 	ld	1(iy),a
                           3497 ;	genPlus
                           3498 ;	genPlusIncr
                           3499 ;	genPlus
                           3500 ;	genPlusIncr
   11B6 01r91s00           3501 	ld	bc,#_g_Screen + 18 + 2
                           3502 ;	genPointerGet
   11B9 69                 3503 	ld	l,c
   11BA 60                 3504 	ld	h,b
   11BB 7E                 3505 	ld	a,(hl)
   11BC FD 21r02s00        3506 	ld	iy,#_SY
   11C0 FD 77 00           3507 	ld	0(iy),a
   11C3 23                 3508 	inc	hl
   11C4 7E                 3509 	ld	a,(hl)
   11C5 FD 77 01           3510 	ld	1(iy),a
                           3511 ;	genPointerGet
   11C8 21r7Ds00           3512 	ld	hl,#_g_Screen
   11CB 7E                 3513 	ld	a,(hl)
   11CC FD 21r04s00        3514 	ld	iy,#_DX
   11D0 FD 77 00           3515 	ld	0(iy),a
   11D3 23                 3516 	inc	hl
   11D4 7E                 3517 	ld	a,(hl)
   11D5 FD 77 01           3518 	ld	1(iy),a
                           3519 ;	genPlus
                           3520 ;	genPlusIncr
   11D8 01r7Fs00           3521 	ld	bc,#_g_Screen + 2
                           3522 ;	genPointerGet
   11DB 69                 3523 	ld	l,c
   11DC 60                 3524 	ld	h,b
   11DD 7E                 3525 	ld	a,(hl)
   11DE FD 21r06s00        3526 	ld	iy,#_DY
   11E2 FD 77 00           3527 	ld	0(iy),a
   11E5 23                 3528 	inc	hl
   11E6 7E                 3529 	ld	a,(hl)
   11E7 FD 77 01           3530 	ld	1(iy),a
                           3531 ;	genAssign
   11EA FD 21r0Cs00        3532 	ld	iy,#_CLR
   11EE FD 36 00 80        3533 	ld	0(iy),#0x80
                           3534 ;	genCall
                           3535 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11F2 CDr74s15           3536 	call	_DrawLineSimple
                           3537 ;test.c:383: DRAW_LINE(g_Screen[4].x, g_Screen[4].y, g_Screen[5].x, g_Screen[5].y, 128);
                           3538 ;	genPlus
                           3539 ;	genPlusIncr
   11F5 01r95s00           3540 	ld	bc,#_g_Screen + 24
                           3541 ;	genPointerGet
   11F8 69                 3542 	ld	l,c
   11F9 60                 3543 	ld	h,b
   11FA 7E                 3544 	ld	a,(hl)
   11FB FD 21r00s00        3545 	ld	iy,#_SX
   11FF FD 77 00           3546 	ld	0(iy),a
   1202 23                 3547 	inc	hl
   1203 7E                 3548 	ld	a,(hl)
   1204 FD 77 01           3549 	ld	1(iy),a
                           3550 ;	genPlus
                           3551 ;	genPlusIncr
                           3552 ;	genPlus
                           3553 ;	genPlusIncr
   1207 01r97s00           3554 	ld	bc,#_g_Screen + 24 + 2
                           3555 ;	genPointerGet
   120A 69                 3556 	ld	l,c
   120B 60                 3557 	ld	h,b
   120C 7E                 3558 	ld	a,(hl)
   120D FD 21r02s00        3559 	ld	iy,#_SY
   1211 FD 77 00           3560 	ld	0(iy),a
   1214 23                 3561 	inc	hl
   1215 7E                 3562 	ld	a,(hl)
   1216 FD 77 01           3563 	ld	1(iy),a
                           3564 ;	genPlus
                           3565 ;	genPlusIncr
   1219 01r9Bs00           3566 	ld	bc,#_g_Screen + 30
                           3567 ;	genPointerGet
   121C 69                 3568 	ld	l,c
   121D 60                 3569 	ld	h,b
   121E 7E                 3570 	ld	a,(hl)
   121F FD 21r04s00        3571 	ld	iy,#_DX
   1223 FD 77 00           3572 	ld	0(iy),a
   1226 23                 3573 	inc	hl
   1227 7E                 3574 	ld	a,(hl)
   1228 FD 77 01           3575 	ld	1(iy),a
                           3576 ;	genPlus
                           3577 ;	genPlusIncr
                           3578 ;	genPlus
                           3579 ;	genPlusIncr
   122B 01r9Ds00           3580 	ld	bc,#_g_Screen + 30 + 2
                           3581 ;	genPointerGet
   122E 69                 3582 	ld	l,c
   122F 60                 3583 	ld	h,b
   1230 7E                 3584 	ld	a,(hl)
   1231 FD 21r06s00        3585 	ld	iy,#_DY
   1235 FD 77 00           3586 	ld	0(iy),a
   1238 23                 3587 	inc	hl
   1239 7E                 3588 	ld	a,(hl)
   123A FD 77 01           3589 	ld	1(iy),a
                           3590 ;	genAssign
   123D FD 21r0Cs00        3591 	ld	iy,#_CLR
   1241 FD 36 00 80        3592 	ld	0(iy),#0x80
                           3593 ;	genCall
                           3594 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1245 CDr74s15           3595 	call	_DrawLineSimple
                           3596 ;test.c:384: DRAW_LINE(g_Screen[5].x, g_Screen[5].y, g_Screen[6].x, g_Screen[6].y, 128);
                           3597 ;	genPlus
                           3598 ;	genPlusIncr
   1248 01r9Bs00           3599 	ld	bc,#_g_Screen + 30
                           3600 ;	genPointerGet
   124B 69                 3601 	ld	l,c
   124C 60                 3602 	ld	h,b
   124D 7E                 3603 	ld	a,(hl)
   124E FD 21r00s00        3604 	ld	iy,#_SX
   1252 FD 77 00           3605 	ld	0(iy),a
   1255 23                 3606 	inc	hl
   1256 7E                 3607 	ld	a,(hl)
   1257 FD 77 01           3608 	ld	1(iy),a
                           3609 ;	genPlus
                           3610 ;	genPlusIncr
                           3611 ;	genPlus
                           3612 ;	genPlusIncr
   125A 01r9Ds00           3613 	ld	bc,#_g_Screen + 30 + 2
                           3614 ;	genPointerGet
   125D 69                 3615 	ld	l,c
   125E 60                 3616 	ld	h,b
   125F 7E                 3617 	ld	a,(hl)
   1260 FD 21r02s00        3618 	ld	iy,#_SY
   1264 FD 77 00           3619 	ld	0(iy),a
   1267 23                 3620 	inc	hl
   1268 7E                 3621 	ld	a,(hl)
   1269 FD 77 01           3622 	ld	1(iy),a
                           3623 ;	genPlus
                           3624 ;	genPlusIncr
   126C 01rA1s00           3625 	ld	bc,#_g_Screen + 36
                           3626 ;	genPointerGet
   126F 69                 3627 	ld	l,c
   1270 60                 3628 	ld	h,b
   1271 7E                 3629 	ld	a,(hl)
   1272 FD 21r04s00        3630 	ld	iy,#_DX
   1276 FD 77 00           3631 	ld	0(iy),a
   1279 23                 3632 	inc	hl
   127A 7E                 3633 	ld	a,(hl)
   127B FD 77 01           3634 	ld	1(iy),a
                           3635 ;	genPlus
                           3636 ;	genPlusIncr
                           3637 ;	genPlus
                           3638 ;	genPlusIncr
   127E 01rA3s00           3639 	ld	bc,#_g_Screen + 36 + 2
                           3640 ;	genPointerGet
   1281 69                 3641 	ld	l,c
   1282 60                 3642 	ld	h,b
   1283 7E                 3643 	ld	a,(hl)
   1284 FD 21r06s00        3644 	ld	iy,#_DY
   1288 FD 77 00           3645 	ld	0(iy),a
   128B 23                 3646 	inc	hl
   128C 7E                 3647 	ld	a,(hl)
   128D FD 77 01           3648 	ld	1(iy),a
                           3649 ;	genAssign
   1290 FD 21r0Cs00        3650 	ld	iy,#_CLR
   1294 FD 36 00 80        3651 	ld	0(iy),#0x80
                           3652 ;	genCall
                           3653 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1298 CDr74s15           3654 	call	_DrawLineSimple
                           3655 ;test.c:385: DRAW_LINE(g_Screen[6].x, g_Screen[6].y, g_Screen[7].x, g_Screen[7].y, 128);
                           3656 ;	genPlus
                           3657 ;	genPlusIncr
   129B 01rA1s00           3658 	ld	bc,#_g_Screen + 36
                           3659 ;	genPointerGet
   129E 69                 3660 	ld	l,c
   129F 60                 3661 	ld	h,b
   12A0 7E                 3662 	ld	a,(hl)
   12A1 FD 21r00s00        3663 	ld	iy,#_SX
   12A5 FD 77 00           3664 	ld	0(iy),a
   12A8 23                 3665 	inc	hl
   12A9 7E                 3666 	ld	a,(hl)
   12AA FD 77 01           3667 	ld	1(iy),a
                           3668 ;	genPlus
                           3669 ;	genPlusIncr
                           3670 ;	genPlus
                           3671 ;	genPlusIncr
   12AD 01rA3s00           3672 	ld	bc,#_g_Screen + 36 + 2
                           3673 ;	genPointerGet
   12B0 69                 3674 	ld	l,c
   12B1 60                 3675 	ld	h,b
   12B2 7E                 3676 	ld	a,(hl)
   12B3 FD 21r02s00        3677 	ld	iy,#_SY
   12B7 FD 77 00           3678 	ld	0(iy),a
   12BA 23                 3679 	inc	hl
   12BB 7E                 3680 	ld	a,(hl)
   12BC FD 77 01           3681 	ld	1(iy),a
                           3682 ;	genPlus
                           3683 ;	genPlusIncr
   12BF 01rA7s00           3684 	ld	bc,#_g_Screen + 42
                           3685 ;	genPointerGet
   12C2 69                 3686 	ld	l,c
   12C3 60                 3687 	ld	h,b
   12C4 7E                 3688 	ld	a,(hl)
   12C5 FD 21r04s00        3689 	ld	iy,#_DX
   12C9 FD 77 00           3690 	ld	0(iy),a
   12CC 23                 3691 	inc	hl
   12CD 7E                 3692 	ld	a,(hl)
   12CE FD 77 01           3693 	ld	1(iy),a
                           3694 ;	genPlus
                           3695 ;	genPlusIncr
                           3696 ;	genPlus
                           3697 ;	genPlusIncr
   12D1 01rA9s00           3698 	ld	bc,#_g_Screen + 42 + 2
                           3699 ;	genPointerGet
   12D4 69                 3700 	ld	l,c
   12D5 60                 3701 	ld	h,b
   12D6 7E                 3702 	ld	a,(hl)
   12D7 FD 21r06s00        3703 	ld	iy,#_DY
   12DB FD 77 00           3704 	ld	0(iy),a
   12DE 23                 3705 	inc	hl
   12DF 7E                 3706 	ld	a,(hl)
   12E0 FD 77 01           3707 	ld	1(iy),a
                           3708 ;	genAssign
   12E3 FD 21r0Cs00        3709 	ld	iy,#_CLR
   12E7 FD 36 00 80        3710 	ld	0(iy),#0x80
                           3711 ;	genCall
                           3712 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12EB CDr74s15           3713 	call	_DrawLineSimple
                           3714 ;test.c:386: DRAW_LINE(g_Screen[7].x, g_Screen[7].y, g_Screen[4].x, g_Screen[4].y, 128);
                           3715 ;	genPlus
                           3716 ;	genPlusIncr
   12EE 01rA7s00           3717 	ld	bc,#_g_Screen + 42
                           3718 ;	genPointerGet
   12F1 69                 3719 	ld	l,c
   12F2 60                 3720 	ld	h,b
   12F3 7E                 3721 	ld	a,(hl)
   12F4 FD 21r00s00        3722 	ld	iy,#_SX
   12F8 FD 77 00           3723 	ld	0(iy),a
   12FB 23                 3724 	inc	hl
   12FC 7E                 3725 	ld	a,(hl)
   12FD FD 77 01           3726 	ld	1(iy),a
                           3727 ;	genPlus
                           3728 ;	genPlusIncr
                           3729 ;	genPlus
                           3730 ;	genPlusIncr
   1300 01rA9s00           3731 	ld	bc,#_g_Screen + 42 + 2
                           3732 ;	genPointerGet
   1303 69                 3733 	ld	l,c
   1304 60                 3734 	ld	h,b
   1305 7E                 3735 	ld	a,(hl)
   1306 FD 21r02s00        3736 	ld	iy,#_SY
   130A FD 77 00           3737 	ld	0(iy),a
   130D 23                 3738 	inc	hl
   130E 7E                 3739 	ld	a,(hl)
   130F FD 77 01           3740 	ld	1(iy),a
                           3741 ;	genPlus
                           3742 ;	genPlusIncr
   1312 01r95s00           3743 	ld	bc,#_g_Screen + 24
                           3744 ;	genPointerGet
   1315 69                 3745 	ld	l,c
   1316 60                 3746 	ld	h,b
   1317 7E                 3747 	ld	a,(hl)
   1318 FD 21r04s00        3748 	ld	iy,#_DX
   131C FD 77 00           3749 	ld	0(iy),a
   131F 23                 3750 	inc	hl
   1320 7E                 3751 	ld	a,(hl)
   1321 FD 77 01           3752 	ld	1(iy),a
                           3753 ;	genPlus
                           3754 ;	genPlusIncr
                           3755 ;	genPlus
                           3756 ;	genPlusIncr
   1324 01r97s00           3757 	ld	bc,#_g_Screen + 24 + 2
                           3758 ;	genPointerGet
   1327 69                 3759 	ld	l,c
   1328 60                 3760 	ld	h,b
   1329 7E                 3761 	ld	a,(hl)
   132A FD 21r06s00        3762 	ld	iy,#_DY
   132E FD 77 00           3763 	ld	0(iy),a
   1331 23                 3764 	inc	hl
   1332 7E                 3765 	ld	a,(hl)
   1333 FD 77 01           3766 	ld	1(iy),a
                           3767 ;	genAssign
   1336 FD 21r0Cs00        3768 	ld	iy,#_CLR
   133A FD 36 00 80        3769 	ld	0(iy),#0x80
                           3770 ;	genCall
                           3771 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   133E CDr74s15           3772 	call	_DrawLineSimple
                           3773 ;test.c:388: DRAW_LINE(g_Screen[0].x, g_Screen[0].y, g_Screen[4].x, g_Screen[4].y, 128);
                           3774 ;	genPointerGet
   1341 21r7Ds00           3775 	ld	hl,#_g_Screen
   1344 7E                 3776 	ld	a,(hl)
   1345 FD 21r00s00        3777 	ld	iy,#_SX
   1349 FD 77 00           3778 	ld	0(iy),a
   134C 23                 3779 	inc	hl
   134D 7E                 3780 	ld	a,(hl)
   134E FD 77 01           3781 	ld	1(iy),a
                           3782 ;	genPlus
                           3783 ;	genPlusIncr
   1351 01r7Fs00           3784 	ld	bc,#_g_Screen + 2
                           3785 ;	genPointerGet
   1354 69                 3786 	ld	l,c
   1355 60                 3787 	ld	h,b
   1356 7E                 3788 	ld	a,(hl)
   1357 FD 21r02s00        3789 	ld	iy,#_SY
   135B FD 77 00           3790 	ld	0(iy),a
   135E 23                 3791 	inc	hl
   135F 7E                 3792 	ld	a,(hl)
   1360 FD 77 01           3793 	ld	1(iy),a
                           3794 ;	genPlus
                           3795 ;	genPlusIncr
   1363 01r95s00           3796 	ld	bc,#_g_Screen + 24
                           3797 ;	genPointerGet
   1366 69                 3798 	ld	l,c
   1367 60                 3799 	ld	h,b
   1368 7E                 3800 	ld	a,(hl)
   1369 FD 21r04s00        3801 	ld	iy,#_DX
   136D FD 77 00           3802 	ld	0(iy),a
   1370 23                 3803 	inc	hl
   1371 7E                 3804 	ld	a,(hl)
   1372 FD 77 01           3805 	ld	1(iy),a
                           3806 ;	genPlus
                           3807 ;	genPlusIncr
                           3808 ;	genPlus
                           3809 ;	genPlusIncr
   1375 01r97s00           3810 	ld	bc,#_g_Screen + 24 + 2
                           3811 ;	genPointerGet
   1378 69                 3812 	ld	l,c
   1379 60                 3813 	ld	h,b
   137A 7E                 3814 	ld	a,(hl)
   137B FD 21r06s00        3815 	ld	iy,#_DY
   137F FD 77 00           3816 	ld	0(iy),a
   1382 23                 3817 	inc	hl
   1383 7E                 3818 	ld	a,(hl)
   1384 FD 77 01           3819 	ld	1(iy),a
                           3820 ;	genAssign
   1387 FD 21r0Cs00        3821 	ld	iy,#_CLR
   138B FD 36 00 80        3822 	ld	0(iy),#0x80
                           3823 ;	genCall
                           3824 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   138F CDr74s15           3825 	call	_DrawLineSimple
                           3826 ;test.c:389: DRAW_LINE(g_Screen[1].x, g_Screen[1].y, g_Screen[5].x, g_Screen[5].y, 128);
                           3827 ;	genPlus
                           3828 ;	genPlusIncr
   1392 01r83s00           3829 	ld	bc,#_g_Screen + 6
                           3830 ;	genPointerGet
   1395 69                 3831 	ld	l,c
   1396 60                 3832 	ld	h,b
   1397 7E                 3833 	ld	a,(hl)
   1398 FD 21r00s00        3834 	ld	iy,#_SX
   139C FD 77 00           3835 	ld	0(iy),a
   139F 23                 3836 	inc	hl
   13A0 7E                 3837 	ld	a,(hl)
   13A1 FD 77 01           3838 	ld	1(iy),a
                           3839 ;	genPlus
                           3840 ;	genPlusIncr
                           3841 ;	genPlus
                           3842 ;	genPlusIncr
   13A4 01r85s00           3843 	ld	bc,#_g_Screen + 6 + 2
                           3844 ;	genPointerGet
   13A7 69                 3845 	ld	l,c
   13A8 60                 3846 	ld	h,b
   13A9 7E                 3847 	ld	a,(hl)
   13AA FD 21r02s00        3848 	ld	iy,#_SY
   13AE FD 77 00           3849 	ld	0(iy),a
   13B1 23                 3850 	inc	hl
   13B2 7E                 3851 	ld	a,(hl)
   13B3 FD 77 01           3852 	ld	1(iy),a
                           3853 ;	genPlus
                           3854 ;	genPlusIncr
   13B6 01r9Bs00           3855 	ld	bc,#_g_Screen + 30
                           3856 ;	genPointerGet
   13B9 69                 3857 	ld	l,c
   13BA 60                 3858 	ld	h,b
   13BB 7E                 3859 	ld	a,(hl)
   13BC FD 21r04s00        3860 	ld	iy,#_DX
   13C0 FD 77 00           3861 	ld	0(iy),a
   13C3 23                 3862 	inc	hl
   13C4 7E                 3863 	ld	a,(hl)
   13C5 FD 77 01           3864 	ld	1(iy),a
                           3865 ;	genPlus
                           3866 ;	genPlusIncr
                           3867 ;	genPlus
                           3868 ;	genPlusIncr
   13C8 01r9Ds00           3869 	ld	bc,#_g_Screen + 30 + 2
                           3870 ;	genPointerGet
   13CB 69                 3871 	ld	l,c
   13CC 60                 3872 	ld	h,b
   13CD 7E                 3873 	ld	a,(hl)
   13CE FD 21r06s00        3874 	ld	iy,#_DY
   13D2 FD 77 00           3875 	ld	0(iy),a
   13D5 23                 3876 	inc	hl
   13D6 7E                 3877 	ld	a,(hl)
   13D7 FD 77 01           3878 	ld	1(iy),a
                           3879 ;	genAssign
   13DA FD 21r0Cs00        3880 	ld	iy,#_CLR
   13DE FD 36 00 80        3881 	ld	0(iy),#0x80
                           3882 ;	genCall
                           3883 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13E2 CDr74s15           3884 	call	_DrawLineSimple
                           3885 ;test.c:390: DRAW_LINE(g_Screen[2].x, g_Screen[2].y, g_Screen[6].x, g_Screen[6].y, 128);
                           3886 ;	genPlus
                           3887 ;	genPlusIncr
   13E5 01r89s00           3888 	ld	bc,#_g_Screen + 12
                           3889 ;	genPointerGet
   13E8 69                 3890 	ld	l,c
   13E9 60                 3891 	ld	h,b
   13EA 7E                 3892 	ld	a,(hl)
   13EB FD 21r00s00        3893 	ld	iy,#_SX
   13EF FD 77 00           3894 	ld	0(iy),a
   13F2 23                 3895 	inc	hl
   13F3 7E                 3896 	ld	a,(hl)
   13F4 FD 77 01           3897 	ld	1(iy),a
                           3898 ;	genPlus
                           3899 ;	genPlusIncr
                           3900 ;	genPlus
                           3901 ;	genPlusIncr
   13F7 01r8Bs00           3902 	ld	bc,#_g_Screen + 12 + 2
                           3903 ;	genPointerGet
   13FA 69                 3904 	ld	l,c
   13FB 60                 3905 	ld	h,b
   13FC 7E                 3906 	ld	a,(hl)
   13FD FD 21r02s00        3907 	ld	iy,#_SY
   1401 FD 77 00           3908 	ld	0(iy),a
   1404 23                 3909 	inc	hl
   1405 7E                 3910 	ld	a,(hl)
   1406 FD 77 01           3911 	ld	1(iy),a
                           3912 ;	genPlus
                           3913 ;	genPlusIncr
   1409 01rA1s00           3914 	ld	bc,#_g_Screen + 36
                           3915 ;	genPointerGet
   140C 69                 3916 	ld	l,c
   140D 60                 3917 	ld	h,b
   140E 7E                 3918 	ld	a,(hl)
   140F FD 21r04s00        3919 	ld	iy,#_DX
   1413 FD 77 00           3920 	ld	0(iy),a
   1416 23                 3921 	inc	hl
   1417 7E                 3922 	ld	a,(hl)
   1418 FD 77 01           3923 	ld	1(iy),a
                           3924 ;	genPlus
                           3925 ;	genPlusIncr
                           3926 ;	genPlus
                           3927 ;	genPlusIncr
   141B 01rA3s00           3928 	ld	bc,#_g_Screen + 36 + 2
                           3929 ;	genPointerGet
   141E 69                 3930 	ld	l,c
   141F 60                 3931 	ld	h,b
   1420 7E                 3932 	ld	a,(hl)
   1421 FD 21r06s00        3933 	ld	iy,#_DY
   1425 FD 77 00           3934 	ld	0(iy),a
   1428 23                 3935 	inc	hl
   1429 7E                 3936 	ld	a,(hl)
   142A FD 77 01           3937 	ld	1(iy),a
                           3938 ;	genAssign
   142D FD 21r0Cs00        3939 	ld	iy,#_CLR
   1431 FD 36 00 80        3940 	ld	0(iy),#0x80
                           3941 ;	genCall
                           3942 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1435 CDr74s15           3943 	call	_DrawLineSimple
                           3944 ;test.c:391: DRAW_LINE(g_Screen[3].x, g_Screen[3].y, g_Screen[7].x, g_Screen[7].y, 128);
                           3945 ;	genPlus
                           3946 ;	genPlusIncr
   1438 01r8Fs00           3947 	ld	bc,#_g_Screen + 18
                           3948 ;	genPointerGet
   143B 69                 3949 	ld	l,c
   143C 60                 3950 	ld	h,b
   143D 7E                 3951 	ld	a,(hl)
   143E FD 21r00s00        3952 	ld	iy,#_SX
   1442 FD 77 00           3953 	ld	0(iy),a
   1445 23                 3954 	inc	hl
   1446 7E                 3955 	ld	a,(hl)
   1447 FD 77 01           3956 	ld	1(iy),a
                           3957 ;	genPlus
                           3958 ;	genPlusIncr
                           3959 ;	genPlus
                           3960 ;	genPlusIncr
   144A 01r91s00           3961 	ld	bc,#_g_Screen + 18 + 2
                           3962 ;	genPointerGet
   144D 69                 3963 	ld	l,c
   144E 60                 3964 	ld	h,b
   144F 7E                 3965 	ld	a,(hl)
   1450 FD 21r02s00        3966 	ld	iy,#_SY
   1454 FD 77 00           3967 	ld	0(iy),a
   1457 23                 3968 	inc	hl
   1458 7E                 3969 	ld	a,(hl)
   1459 FD 77 01           3970 	ld	1(iy),a
                           3971 ;	genPlus
                           3972 ;	genPlusIncr
   145C 01rA7s00           3973 	ld	bc,#_g_Screen + 42
                           3974 ;	genPointerGet
   145F 69                 3975 	ld	l,c
   1460 60                 3976 	ld	h,b
   1461 7E                 3977 	ld	a,(hl)
   1462 FD 21r04s00        3978 	ld	iy,#_DX
   1466 FD 77 00           3979 	ld	0(iy),a
   1469 23                 3980 	inc	hl
   146A 7E                 3981 	ld	a,(hl)
   146B FD 77 01           3982 	ld	1(iy),a
                           3983 ;	genPlus
                           3984 ;	genPlusIncr
                           3985 ;	genPlus
                           3986 ;	genPlusIncr
   146E 01rA9s00           3987 	ld	bc,#_g_Screen + 42 + 2
                           3988 ;	genPointerGet
   1471 69                 3989 	ld	l,c
   1472 60                 3990 	ld	h,b
   1473 7E                 3991 	ld	a,(hl)
   1474 FD 21r06s00        3992 	ld	iy,#_DY
   1478 FD 77 00           3993 	ld	0(iy),a
   147B 23                 3994 	inc	hl
   147C 7E                 3995 	ld	a,(hl)
   147D FD 77 01           3996 	ld	1(iy),a
                           3997 ;	genAssign
   1480 FD 21r0Cs00        3998 	ld	iy,#_CLR
   1484 FD 36 00 80        3999 	ld	0(iy),#0x80
                           4000 ;	genCall
                           4001 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1488 CDr74s15           4002 	call	_DrawLineSimple
                           4003 ;	genLabel
                           4004 ;	genEndFunction
   148B DD F9              4005 	ld	sp,ix
   148D DD E1              4006 	pop	ix
   148F C9                 4007 	ret
   1490                    4008 _Update_end::
                           4009 ;test.c:424: void SetScreen8()
                           4010 ;	genLabel
                           4011 ;	genFunction
                           4012 ;	---------------------------------
                           4013 ; Function SetScreen8
                           4014 ; ---------------------------------
   1490                    4015 _SetScreen8_start::
   1490                    4016 _SetScreen8:
                           4017 ;test.c:460: _endasm;
                           4018 ;	genInline
                           4019 	
                           4020 	
                           4021 	
                           4022 	
   1490 3A DF F3           4023 		 ld a,(#0xF3DF)
   1493 CB DF              4024 		 set #3,a
   1495 CB D7              4025 		 set #2,a
   1497 CB CF              4026 		 set #1,a
   1499 32 DF F3           4027 		 ld (#0xF3DF),a
                           4028 	
   149C F3                 4029 		 di
                           4030 	
   149D D3 99              4031 		 out (#0x99),a
   149F 3E 80              4032 		 ld a,#0x80+#0
   14A1 D3 99              4033 		 out (#0x99),a
                           4034 	
                           4035 	
   14A3 3A E0 F3           4036 		 ld a,(#0xF3E0)
   14A6 CB A7              4037 		 res #4,a
   14A8 CB 9F              4038 		 res #3,a
   14AA 32 E0 F3           4039 		 ld (#0xF3E0),a
                           4040 	
   14AD D3 99              4041 		 out (#0x99),a
   14AF 3E 81              4042 		 ld a,#0x80+#1
   14B1 D3 99              4043 		 out (#0x99),a
                           4044 	
                           4045 	
   14B3 3E 1F              4046 		 ld a,#0x1F
   14B5 D3 99              4047 		 out (#0x99),a
   14B7 3E 82              4048 		 ld a,#0x80+2
   14B9 D3 99              4049 		 out (#0x99),a
                           4050 	
   14BB FB                 4051 		 ei
                           4052 	
                           4053 		
                           4054 ;	genLabel
                           4055 ;	genEndFunction
   14BC C9                 4056 	ret
   14BD                    4057 _SetScreen8_end::
                           4058 ;test.c:466: void SetPage8(i8 page)
                           4059 ;	genLabel
                           4060 ;	genFunction
                           4061 ;	---------------------------------
                           4062 ; Function SetPage8
                           4063 ; ---------------------------------
   14BD                    4064 _SetPage8_start::
   14BD                    4065 _SetPage8:
   14BD DD E5              4066 	push	ix
   14BF DD 21 00 00        4067 	ld	ix,#0
   14C3 DD 39              4068 	add	ix,sp
                           4069 ;test.c:480: _endasm;
                           4070 ;	genInline
                           4071 	
                           4072 	
   14C5 DD 7E 04           4073 		 ld a,4(ix)
   14C8 F6 1F              4074 		 or #0x1F
   14CA F3                 4075 		 di
   14CB D3 99              4076 		 out (#0x99),a
   14CD 3E 82              4077 		 ld a,#0x80+2
   14CF D3 99              4078 		 out (#0x99),a
   14D1 FB                 4079 		 ei
                           4080 	
                           4081 		
                           4082 ;	genLabel
                           4083 ;	genEndFunction
   14D2 DD E1              4084 	pop	ix
   14D4 C9                 4085 	ret
   14D5                    4086 _SetPage8_end::
                           4087 ;test.c:486: void DrawPoint8(char posX, char posY, char color)
                           4088 ;	genLabel
                           4089 ;	genFunction
                           4090 ;	---------------------------------
                           4091 ; Function DrawPoint8
                           4092 ; ---------------------------------
   14D5                    4093 _DrawPoint8_start::
   14D5                    4094 _DrawPoint8:
   14D5 DD E5              4095 	push	ix
   14D7 DD 21 00 00        4096 	ld	ix,#0
   14DB DD 39              4097 	add	ix,sp
                           4098 ;test.c:490: WaitForVDP();
                           4099 ;	genCall
                           4100 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14DD CDr38s16           4101 	call	_WaitForVDP
                           4102 ;test.c:538: _endasm;
                           4103 ;	genInline
                           4104 	
                           4105 	
                           4106 	
                           4107 	
   14E0 DD 7E 04           4108 		 ld a,4(ix)
   14E3 F3                 4109 		 di
   14E4 D3 99              4110 		 out (#0x99),a
   14E6 3E A4              4111 		 ld a,#0x80+#36
   14E8 D3 99              4112 		 out (#0x99),a
                           4113 	
   14EA AF                 4114 		 xor a
   14EB D3 99              4115 		 out (#0x99),a
   14ED 3E A5              4116 		 ld a,#0x80+#37
   14EF D3 99              4117 		 out (#0x99),a
                           4118 	
                           4119 	
   14F1 DD 7E 05           4120 		 ld a,5(ix)
   14F4 D3 99              4121 		 out (#0x99),a
   14F6 3E A6              4122 		 ld a,#0x80+#38
   14F8 D3 99              4123 		 out (#0x99),a
                           4124 	
   14FA AF                 4125 		 xor a
   14FB D3 99              4126 		 out (#0x99),a
   14FD 3E A7              4127 		 ld a,#0x80+#39
   14FF D3 99              4128 		 out (#0x99),a
                           4129 	
                           4130 	
   1501 DD 7E 06           4131 		 ld a,6(ix)
   1504 D3 99              4132 		 out (#0x99),a
   1506 3E AC              4133 		 ld a,#0x80+#44
   1508 D3 99              4134 		 out (#0x99),a
                           4135 	
                           4136 	
   150A AF                 4137 		 xor a
   150B D3 99              4138 		 out (#0x99),a
   150D 3E AD              4139 		 ld a,#0x80+#45
   150F D3 99              4140 		 out (#0x99),a
                           4141 	
                           4142 	
   1511 3E 50              4143 		 ld a,#0x50
   1513 D3 99              4144 		 out (#0x99),a
   1515 3E AE              4145 		 ld a,#0x80+#46
   1517 D3 99              4146 		 out (#0x99),a
                           4147 	
   1519 FB                 4148 		 ei
                           4149 	
                           4150 		
                           4151 ;	genLabel
                           4152 ;	genEndFunction
   151A DD E1              4153 	pop	ix
   151C C9                 4154 	ret
   151D                    4155 _DrawPoint8_end::
                           4156 ;test.c:544: void DrawLine(int posX1, int posY1, int posX2, int posY2, char color)
                           4157 ;	genLabel
                           4158 ;	genFunction
                           4159 ;	---------------------------------
                           4160 ; Function DrawLine
                           4161 ; ---------------------------------
   151D                    4162 _DrawLine_start::
   151D                    4163 _DrawLine:
   151D DD E5              4164 	push	ix
   151F DD 21 00 00        4165 	ld	ix,#0
   1523 DD 39              4166 	add	ix,sp
                           4167 ;test.c:546: SX  = posX1; 
                           4168 ;	genAssign
                           4169 ;	AOP_STK for 
   1525 DD 7E 04           4170 	ld	a,4(ix)
   1528 FD 21r00s00        4171 	ld	iy,#_SX
   152C FD 77 00           4172 	ld	0(iy),a
   152F DD 7E 05           4173 	ld	a,5(ix)
   1532 FD 77 01           4174 	ld	1(iy),a
                           4175 ;test.c:547: SY  = posY1; 
                           4176 ;	genAssign
                           4177 ;	AOP_STK for 
   1535 DD 7E 06           4178 	ld	a,6(ix)
   1538 FD 21r02s00        4179 	ld	iy,#_SY
   153C FD 77 00           4180 	ld	0(iy),a
   153F DD 7E 07           4181 	ld	a,7(ix)
   1542 FD 77 01           4182 	ld	1(iy),a
                           4183 ;test.c:548: DX  = posX2; 
                           4184 ;	genAssign
                           4185 ;	AOP_STK for 
   1545 DD 7E 08           4186 	ld	a,8(ix)
   1548 FD 21r04s00        4187 	ld	iy,#_DX
   154C FD 77 00           4188 	ld	0(iy),a
   154F DD 7E 09           4189 	ld	a,9(ix)
   1552 FD 77 01           4190 	ld	1(iy),a
                           4191 ;test.c:549: DY  = posY2; 
                           4192 ;	genAssign
                           4193 ;	AOP_STK for 
   1555 DD 7E 0A           4194 	ld	a,10(ix)
   1558 FD 21r06s00        4195 	ld	iy,#_DY
   155C FD 77 00           4196 	ld	0(iy),a
   155F DD 7E 0B           4197 	ld	a,11(ix)
   1562 FD 77 01           4198 	ld	1(iy),a
                           4199 ;test.c:550: CLR = color;
                           4200 ;	genAssign
                           4201 ;	AOP_STK for 
   1565 DD 7E 0C           4202 	ld	a,12(ix)
   1568 FD 21r0Cs00        4203 	ld	iy,#_CLR
   156C FD 77 00           4204 	ld	0(iy),a
                           4205 ;test.c:552: DrawLineSimple();
                           4206 ;	genCall
                           4207 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4208 ;	genLabel
                           4209 ;	genEndFunction
   156F DD E1              4210 	pop	ix
   1571 C3r74s15           4211 	jp	_DrawLineSimple
   1574                    4212 _DrawLine_end::
                           4213 ;test.c:558: void DrawLineSimple()
                           4214 ;	genLabel
                           4215 ;	genFunction
                           4216 ;	---------------------------------
                           4217 ; Function DrawLineSimple
                           4218 ; ---------------------------------
   1574                    4219 _DrawLineSimple_start::
   1574                    4220 _DrawLineSimple:
                           4221 ;test.c:560: WaitForVDP();
                           4222 ;	genCall
                           4223 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1574 CDr38s16           4224 	call	_WaitForVDP
                           4225 ;test.c:632: _endasm;
                           4226 ;	genInline
                           4227 	
                           4228 	
                           4229 ;
                           4230 ;
                           4231 ;
                           4232 ;
                           4233 	
   1577                    4234 	Do_Line_VDP:
                           4235 ;
   1577 AF                 4236 		       xor a ;
   1578 2Ar06s00           4237 		       ld hl,(_DY)
   157B ED 5Br02s00        4238 		       ld de,(_SY)
   157F ED 52              4239 		       sbc hl,de ;
                           4240 	
   1581 17                 4241 		       rla ;
   1582 32r0Ds00           4242 		       ld (_ARG),a
                           4243 	
   1585 A7                 4244 		       and a ;
   1586 CAr8Fs15           4245 		       jp z,DeltaX ;
   1589 EB                 4246 		       ex de,hl ;
   158A 21 00 00           4247 		 ld hl,#0 ;
   158D ED 52              4248 		       sbc hl,de ;
                           4249 	
                           4250 ;
   158F                    4251 	DeltaX:
   158F E5                 4252 	push	hl ;
   1590 AF                 4253 		       xor a ;
   1591 2Ar04s00           4254 		       ld hl,(_DX)
   1594 ED 5Br00s00        4255 		       ld de,(_SX)
   1598 ED 52              4256 		       sbc hl,de ;
                           4257 	
   159A 3Ar0Ds00           4258 		       ld a,(_ARG)
   159D 17                 4259 		       rla
   159E 17                 4260 		       rla ;
   159F 32r0Ds00           4261 		       ld (_ARG),a
                           4262 	
   15A2 CB 4F              4263 		       bit 1,a ;
   15A4 CArADs15           4264 		       jp z,cpHLDE ;
   15A7 EB                 4265 		       ex de,hl ;
   15A8 21 00 00           4266 		 ld hl,#0 ;
   15AB ED 52              4267 		       sbc hl,de ;
                           4268 	
                           4269 ;
   15AD                    4270 	cpHLDE:
   15AD D1                 4271 	pop	de ;
   15AE AF                 4272 		       xor a ;
                           4273 	
   15AF E5                 4274 		       push hl
   15B0 ED 52              4275 		       sbc hl,de ;
   15B2 E1                 4276 		       pop hl
                           4277 	
   15B3 3Ar0Ds00           4278 		       ld a,(_ARG)
   15B6 17                 4279 		       rla ;
   15B7 32r0Ds00           4280 		       ld (_ARG),a
                           4281 	
   15BA CB 47              4282 		       bit 0,a ;
   15BC CArC0s15           4283 		       jp z,DoIt ;
   15BF EB                 4284 		       ex de,hl ;
                           4285 	
                           4286 ;
   15C0                    4287 	DoIt:
   15C0 22r08s00           4288 	ld	(_NX),hl
   15C3 ED 53r0As00        4289 		       ld (_NY),de
                           4290 	
   15C7 2Ar00s00           4291 		       ld hl,(_SX)
   15CA 22r04s00           4292 		       ld (_DX),hl
                           4293 	
   15CD 2Ar02s00           4294 		       ld hl,(_SY)
   15D0 22r06s00           4295 		       ld (_DY),hl
                           4296 	
   15D3 3E 70              4297 		       ld a,#0x70 ;
   15D5 32r0Es00           4298 		       ld (_CMD),a ;
                           4299 	
                           4300 		
                           4301 ;test.c:634: VPDCommand((int)&SX);
                           4302 ;	genCast
   15D8 0Er00              4303 	ld	c,#<_SX
   15DA 06s00              4304 	ld	b,#>_SX
                           4305 ;	genIpush
                           4306 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15DC C5                 4307 	push	bc
                           4308 ;	genCall
   15DD CDrEFs15           4309 	call	_VPDCommand
   15E0 F1                 4310 	pop	af
                           4311 ;	genLabel
                           4312 ;	genEndFunction
   15E1 C9                 4313 	ret
   15E2                    4314 _DrawLineSimple_end::
                           4315 ;test.c:640: void DrawLine8(char posX1, char posY1, char posX2, char posY2, char color)
                           4316 ;	genLabel
                           4317 ;	genFunction
                           4318 ;	---------------------------------
                           4319 ; Function DrawLine8
                           4320 ; ---------------------------------
   15E2                    4321 _DrawLine8_start::
   15E2                    4322 _DrawLine8:
   15E2 DD E5              4323 	push	ix
   15E4 DD 21 00 00        4324 	ld	ix,#0
   15E8 DD 39              4325 	add	ix,sp
                           4326 ;test.c:644: WaitForVDP();
                           4327 ;	genCall
                           4328 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4329 ;	genLabel
                           4330 ;	genEndFunction
   15EA DD E1              4331 	pop	ix
   15EC C3r38s16           4332 	jp	_WaitForVDP
   15EF                    4333 _DrawLine8_end::
                           4334 ;test.c:778: void VPDCommand(int address)
                           4335 ;	genLabel
                           4336 ;	genFunction
                           4337 ;	---------------------------------
                           4338 ; Function VPDCommand
                           4339 ; ---------------------------------
   15EF                    4340 _VPDCommand_start::
   15EF                    4341 _VPDCommand:
   15EF DD E5              4342 	push	ix
   15F1 DD 21 00 00        4343 	ld	ix,#0
   15F5 DD 39              4344 	add	ix,sp
                           4345 ;test.c:782: WaitForVDP();
                           4346 ;	genCall
                           4347 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15F7 CDr38s16           4348 	call	_WaitForVDP
                           4349 ;test.c:813: _endasm;
                           4350 ;	genInline
                           4351 	
                           4352 	
   15FA DD 6E 04           4353 		 ld l,4(ix)
   15FD DD 66 05           4354 		 ld h,5(ix)
                           4355 	
                           4356 	
   1600 3E 20              4357 		 ld a,#32
   1602 F3                 4358 		 di
   1603 D3 99              4359 		 out (#0x99),a
   1605 3E 91              4360 		 ld a,#0x80+#17
   1607 D3 99              4361 		 out (#0x99),a
   1609 0E 9B              4362 		 ld c,#0x99 +#2
   160B ED A3              4363 		 outi
   160D ED A3              4364 		 outi
   160F ED A3              4365 		 outi
   1611 ED A3              4366 		 outi
   1613 ED A3              4367 		 outi
   1615 ED A3              4368 		 outi
   1617 ED A3              4369 		 outi
   1619 ED A3              4370 		 outi
   161B ED A3              4371 		 outi
   161D ED A3              4372 		 outi
   161F ED A3              4373 		 outi
   1621 ED A3              4374 		 outi
   1623 ED A3              4375 		 outi
   1625 ED A3              4376 		 outi
   1627 FB                 4377 		 ei
   1628 ED A3              4378 		 outi
                           4379 	
                           4380 		
                           4381 ;	genLabel
                           4382 ;	genEndFunction
   162A DD E1              4383 	pop	ix
   162C C9                 4384 	ret
   162D                    4385 _VPDCommand_end::
                           4386 ;test.c:819: void waitRetrace()
                           4387 ;	genLabel
                           4388 ;	genFunction
                           4389 ;	---------------------------------
                           4390 ; Function waitRetrace
                           4391 ; ---------------------------------
   162D                    4392 _waitRetrace_start::
   162D                    4393 _waitRetrace:
                           4394 ;test.c:831: _endasm;
                           4395 ;	genInline
                           4396 	
                           4397 	
   162D F3                 4398 		 di
   162E                    4399 	 WAIT_RETRACE:
   162E DB 99              4400 		 in a,(0x99)
   1630 E6 80              4401 		 and #0x80
   1632 FE 00              4402 		 cp #0
   1634 28 F8              4403 		 jr z, WAIT_RETRACE
   1636 FB                 4404 		 ei
                           4405 	
                           4406 		
                           4407 ;	genLabel
                           4408 ;	genEndFunction
   1637 C9                 4409 	ret
   1638                    4410 _waitRetrace_end::
                           4411 ;test.c:837: void WaitForVDP()
                           4412 ;	genLabel
                           4413 ;	genFunction
                           4414 ;	---------------------------------
                           4415 ; Function WaitForVDP
                           4416 ; ---------------------------------
   1638                    4417 _WaitForVDP_start::
   1638                    4418 _WaitForVDP:
                           4419 ;test.c:858: _endasm;
                           4420 ;	genInline
                           4421 	
                           4422 	
                           4423 	
   1638 3E 02              4424 		 ld a,#2
   163A F3                 4425 		 di
   163B D3 99              4426 		 out (#0x99),a
   163D 3E 8F              4427 		 ld a,#0x80+#15
   163F D3 99              4428 		 out (#0x99),a
   1641                    4429 	 WAIT_VDP:
   1641 00                 4430 		 nop
   1642 DB 99              4431 		 in a,(#0x99)
   1644 1F                 4432 		 rra
   1645 38 FA              4433 		 jr c,WAIT_VDP
   1647 AF                 4434 		 xor a
   1648 D3 99              4435 		 out (#0x99),a
   164A 3E 8F              4436 		 ld a,#0x80+#15
   164C D3 99              4437 		 out (#0x99),a
   164E FB                 4438 		 ei
                           4439 	
                           4440 		
                           4441 ;	genLabel
                           4442 ;	genEndFunction
   164F C9                 4443 	ret
   1650                    4444 _WaitForVDP_end::
                           4445 ;test.c:862: char Joystick(char n)
                           4446 ;	genLabel
                           4447 ;	genFunction
                           4448 ;	---------------------------------
                           4449 ; Function Joystick
                           4450 ; ---------------------------------
   1650                    4451 _Joystick_start::
   1650                    4452 _Joystick:
   1650 DD E5              4453 	push	ix
   1652 DD 21 00 00        4454 	ld	ix,#0
   1656 DD 39              4455 	add	ix,sp
                           4456 ;test.c:869: _endasm;
                           4457 ;	genInline
                           4458 	
   1658 DD 7E 04           4459 		 ld a,4(ix)
   165B CD D5 00           4460 		 call 0x00d5
   165E 6F                 4461 		 ld l,a
                           4462 		
                           4463 ;	genLabel
                           4464 ;	genEndFunction
   165F DD E1              4465 	pop	ix
   1661 C9                 4466 	ret
   1662                    4467 _Joystick_end::
                           4468 ;test.c:873: char Joytrig(char n)
                           4469 ;	genLabel
                           4470 ;	genFunction
                           4471 ;	---------------------------------
                           4472 ; Function Joytrig
                           4473 ; ---------------------------------
   1662                    4474 _Joytrig_start::
   1662                    4475 _Joytrig:
   1662 DD E5              4476 	push	ix
   1664 DD 21 00 00        4477 	ld	ix,#0
   1668 DD 39              4478 	add	ix,sp
                           4479 ;test.c:881: _endasm;
                           4480 ;	genInline
                           4481 	
   166A DD 7E 04           4482 		 ld a,4(ix)
   166D CD D8 00           4483 		 call 0x00d8
   1670 26 00              4484 		 ld h,#0x00
   1672 6F                 4485 		 ld l,a
                           4486 		
                           4487 ;	genLabel
                           4488 ;	genEndFunction
   1673 DD E1              4489 	pop	ix
   1675 C9                 4490 	ret
   1676                    4491 _Joytrig_end::
                           4492 ;test.c:885: u8 GetKeyMatrixLine(u8 n)
                           4493 ;	genLabel
                           4494 ;	genFunction
                           4495 ;	---------------------------------
                           4496 ; Function GetKeyMatrixLine
                           4497 ; ---------------------------------
   1676                    4498 _GetKeyMatrixLine_start::
   1676                    4499 _GetKeyMatrixLine:
   1676 DD E5              4500 	push	ix
   1678 DD 21 00 00        4501 	ld	ix,#0
   167C DD 39              4502 	add	ix,sp
                           4503 ;test.c:892: _endasm;
                           4504 ;	genInline
                           4505 	
   167E DD 7E 04           4506 		 ld a,4(ix)
   1681 CD 41 01           4507 		 call 0x0141
   1684 6F                 4508 		 ld l,a
                           4509 		
                           4510 ;	genLabel
                           4511 ;	genEndFunction
   1685 DD E1              4512 	pop	ix
   1687 C9                 4513 	ret
   1688                    4514 _GetKeyMatrixLine_end::
                           4515 ;test.c:899: void WriteToVRAM(u8 x, u8 y, u8 value)
                           4516 ;	genLabel
                           4517 ;	genFunction
                           4518 ;	---------------------------------
                           4519 ; Function WriteToVRAM
                           4520 ; ---------------------------------
   1688                    4521 _WriteToVRAM_start::
   1688                    4522 _WriteToVRAM:
   1688 DD E5              4523 	push	ix
   168A DD 21 00 00        4524 	ld	ix,#0
   168E DD 39              4525 	add	ix,sp
                           4526 ;test.c:904: WaitForVDP();
                           4527 ;	genCall
                           4528 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1690 CDr38s16           4529 	call	_WaitForVDP
                           4530 ;test.c:929: _endasm;
                           4531 ;	genInline
                           4532 	
   1693 F3                 4533 		 di
                           4534 	
                           4535 		 ;
   1694 AF                 4536 		 xor a
   1695 D3 99              4537 		 out (#0x99),a
   1697 3E 8E              4538 		 ld a,#0x80+#14
   1699 D3 99              4539 		 out (#0x99),a
                           4540 	
                           4541 		 ;
   169B DD 7E 04           4542 		 ld a,4(ix)
   169E D3 99              4543 		 out (#0x99),a
                           4544 	
   16A0 DD 7E 05           4545 		 ld a,5(ix)
   16A3 E6 3F              4546 		 and #0x3F ;
   16A5 F6 40              4547 		 or #0x40 ;
   16A7 D3 99              4548 		 out (#0x99),a
                           4549 	
                           4550 		 ;
   16A9 DD 7E 06           4551 		 ld a,6(ix)
   16AC D3 98              4552 		 out (#0x98),a
                           4553 	
   16AE FB                 4554 		 ei
                           4555 		
                           4556 ;	genLabel
                           4557 ;	genEndFunction
   16AF DD E1              4558 	pop	ix
   16B1 C9                 4559 	ret
   16B2                    4560 _WriteToVRAM_end::
                           4561 	.area _CODE
                           4562 	.area _CABS
